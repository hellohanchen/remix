{
	"id": "b31e518cef4a041acc47abc2fe026817",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LicenseAgreeement.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport {ILicense} from \"./ILicense.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract CreativeCommonAttribution4dot0 is ILicense {\r\n    string constant public agreement = \"\" \r\n        \"Licensing Agreement\\n\\n\" \r\n        \"This License Agreement (\\\"Agreement\\\") is entered into by and between:\\n\"\r\n        \"- Licensor: The individual or entity that holds the copyright for the video identified below (\\\"Licensor\\\").\\n\"\r\n        \"- Licensee: The individual or entity that will use the licensed material under the terms of this Agreement (\\\"Licensee\\\").\\n\\n\"\r\n        \"1. Licensed Material\\n\" \r\n        \"- Video ID: [video id]\\n\"\r\n        \"This Agreement applies to the video identified by the Video ID listed above, as hosted on YouTube or any other platform.\\n\\n\" \r\n        \"2. License Grant\\n\" \r\n        \"The Licensor hereby grants the Licensee a non-exclusive, worldwide, royalty-free license to:\\n\"\r\n        \"- Share (copy and redistribute the material in any medium or format)\\n\" \r\n        \"- Adapt (remix, transform, and build upon the material for any purpose, even commercially)\\n\"\r\n        \"Under the terms of this Agreement, provided that:\\n\"\r\n        \"- The Licensee must give appropriate credit to the Licensor, provide a link to the license, and indicate if changes were made.\"\r\n        \" The Licensee may do so in any reasonable manner, but not in any way that suggests the Licensor endorses the Licensee or the use of the material.\\n\\n\" \r\n        \"3. License Duration\\n\" \r\n        \"- License Duration: Valid for a lifetime\\n\"\r\n        \"This Agreement is effective for the duration specified above, starting from the Signing Date.\\n\\n\" \r\n        \"4. Attribution Requirements\\n\" \r\n        \"The Licensee must give appropriate credit to the Licensor, as follows:\\n\"\r\n        \"- Provide the wallet address of the Licensor.\\n\"\r\n        \"- Provide a link to the video.\\n\"\r\n        \"- Provide a link to this license.\\n\"\r\n        \"- Indicate if changes were made to the original material.\\n\\n\" \r\n        \"5. No Additional Restrictions\\n\" \r\n        \"The Licensee may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.\\n\\n\" \r\n        \"6. Termination\\n\" \r\n        \"This Agreement will automatically terminate if the Licensee fails to comply with the terms herein.\"\r\n        \" However, the license will not terminate as a result of minor and reasonable deviations that do not fundamentally affect the terms of the Agreement.\\n\\n\" \r\n        \"7. Signatures\\n\" \r\n        \"This Agreement is executed by the following parties:\\n\"\r\n        \"- Licensor: [licensor address]\\n\"\r\n        \"- Licensee: [licensee address]\\n\"\r\n        \"- Signing Date: [signing timestamp]\";\r\n\r\n    constructor() {}\r\n\r\n    function getName() external pure returns (string memory) {\r\n        return \"Creative Commons Attribution 4.0 International License (CC BY 4.0)\";\r\n    }\r\n\r\n    function getDuration() external pure returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    function getTemplate() external pure returns (string memory) {\r\n        return agreement;\r\n    }\r\n\r\n    function compose(\r\n        string memory identifier,\r\n        address licensor,\r\n        address licensee,\r\n        uint256 price,\r\n        uint256 signTimestamp\r\n    ) external pure returns (string memory) {\r\n        string memory part_a = \"\" \r\n        \"Licensing Agreement\\n\\n\" \r\n        \"This License Agreement (\\\"Agreement\\\") is entered into by and between:\\n\"\r\n        \"- Licensor: The individual or entity that holds the copyright for the video identified below (\\\"Licensor\\\").\\n\"\r\n        \"- Licensee: The individual or entity that will use the licensed material under the terms of this Agreement (\\\"Licensee\\\").\\n\\n\"\r\n        \"1. Licensed Material\\n\" \r\n        \"- Video ID: \";\r\n\r\n        string memory part_b = \"\\n\"\r\n        \"This Agreement applies to the video identified by the Video ID listed above, as hosted on YouTube or any other platform.\\n\\n\" \r\n        \"2. License Grant\\n\" \r\n        \"The Licensor hereby grants the Licensee a non-exclusive, worldwide, royalty-free license to:\\n\"\r\n        \"- Share (copy and redistribute the material in any medium or format)\\n\" \r\n        \"- Adapt (remix, transform, and build upon the material for any purpose, even commercially)\\n\"\r\n        \"Under the terms of this Agreement, provided that:\\n\"\r\n        \"- The Licensee must give appropriate credit to the Licensor, provide a link to the license, and indicate if changes were made.\"\r\n        \" The Licensee may do so in any reasonable manner, but not in any way that suggests the Licensor endorses the Licensee or the use of the material.\\n\\n\" \r\n        \"3. License Duration\\n\" \r\n        \"- License Duration: Valid for a lifetime\\n\"\r\n        \"This Agreement is effective for the duration specified above, starting from the Signing Date.\\n\\n\" \r\n        \"4. Attribution Requirements\\n\" \r\n        \"The Licensee must give appropriate credit to the Licensor, as follows:\\n\"\r\n        \"- Provide the wallet address of the Licensor.\\n\"\r\n        \"- Provide a link to the video.\\n\"\r\n        \"- Provide a link to this license.\\n\"\r\n        \"- Indicate if changes were made to the original material.\\n\\n\" \r\n        \"5. No Additional Restrictions\\n\" \r\n        \"The Licensee may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.\\n\\n\" \r\n        \"6. Termination\\n\" \r\n        \"This Agreement will automatically terminate if the Licensee fails to comply with the terms herein.\"\r\n        \" However, the license will not terminate as a result of minor and reasonable deviations that do not fundamentally affect the terms of the Agreement.\\n\\n\" \r\n        \"7. Signatures\\n\" \r\n        \"This Agreement is executed by the following parties:\\n\"\r\n        \"- Licensor: \";\r\n\r\n        string memory part_c = \"\\n\"\r\n        \"- Licensee: \";\r\n\r\n        string memory part_d = \"\\n\"\r\n        \"- Signing Date: \";\r\n\r\n        return string(abi.encodePacked(part_a, identifier, part_b, Strings.toHexString(licensor), part_c, Strings.toHexString(licensee), part_d, Strings.toString(signTimestamp)));\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"contracts/ILicense.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface ILicense {\r\n    function getName() external view returns (string memory);\r\n\r\n    function getDuration() external view returns (uint256);\r\n\r\n    function getTemplate() external view returns (string memory);\r\n\r\n    function compose(\r\n        string memory identifier,\r\n        address licensor,\r\n        address licensee,\r\n        uint256 price,\r\n        uint256 signTimestamp\r\n    ) external view returns (string memory);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ILicense.sol",
								"contracts/LicenseAgreeement.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ILicense.sol",
								"contracts/LicenseAgreeement.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ILicense.sol",
								"contracts/LicenseAgreeement.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ILicense.sol": {
				"ILicense": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "identifier",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "licensor",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "licensee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "signTimestamp",
									"type": "uint256"
								}
							],
							"name": "compose",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTemplate",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"compose(string,address,address,uint256,uint256)": "483ced98",
							"getDuration()": "ad2e8c9b",
							"getName()": "17d7de7c",
							"getTemplate()": "321c48f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"licensor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"licensee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signTimestamp\",\"type\":\"uint256\"}],\"name\":\"compose\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTemplate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ILicense.sol\":\"ILicense\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ILicense.sol\":{\"keccak256\":\"0xf850b9839653f8a4643951677df738e42011aa258e0bd74f4859e23c116948ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7511266d02a43bfcf544c15a70c59f9adb41a9d9b405b1fac86cf0eb4c42aea9\",\"dweb:/ipfs/QmXWM9nhCGc97wCWeqjWYpthateY7NLmFdQqRj3YADgF4C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LicenseAgreeement.sol": {
				"CreativeCommonAttribution4dot0": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "agreement",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "identifier",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "licensor",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "licensee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "signTimestamp",
									"type": "uint256"
								}
							],
							"name": "compose",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTemplate",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LicenseAgreeement.sol\":158:6230  contract CreativeCommonAttribution4dot0 is ILicense {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LicenseAgreeement.sol\":2815:2831  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/LicenseAgreeement.sol\":158:6230  contract CreativeCommonAttribution4dot0 is ILicense {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LicenseAgreeement.sol\":158:6230  contract CreativeCommonAttribution4dot0 is ILicense {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x17d7de7c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x321c48f2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x483ced98\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7db3a946\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xad2e8c9b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LicenseAgreeement.sol\":2839:2990  function getName() external pure returns (string memory) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LicenseAgreeement.sol\":3088:3184  function getTemplate() external pure returns (string memory) {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LicenseAgreeement.sol\":3192:6227  function compose(... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LicenseAgreeement.sol\":217:2806  string constant public agreement = \"\" ... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LicenseAgreeement.sol\":2998:3080  function getDuration() external pure returns (uint256) {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LicenseAgreeement.sol\":2839:2990  function getName() external pure returns (string memory) {... */\n    tag_9:\n        /* \"contracts/LicenseAgreeement.sol\":2881:2894  string memory */\n      0x60\n        /* \"contracts/LicenseAgreeement.sol\":2907:2982  return \"Creative Commons Attribution 4.0 International License (CC BY 4.0)\" */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x42\n      dup2\n      mstore\n      0x20\n      add\n      data_3dce4ae4b48287a227ab5dee905878fe7ac111065e7c71b6655d9677046d109c\n      0x42\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/LicenseAgreeement.sol\":2839:2990  function getName() external pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LicenseAgreeement.sol\":3088:3184  function getTemplate() external pure returns (string memory) {... */\n    tag_13:\n        /* \"contracts/LicenseAgreeement.sol\":3134:3147  string memory */\n      0x60\n        /* \"contracts/LicenseAgreeement.sol\":3167:3176  agreement */\n      mload(0x40)\n      dup1\n      0x0860\n      add\n      0x40\n      mstore\n      dup1\n      0x0830\n      dup2\n      mstore\n      0x20\n      add\n      data_eb502e1e43115de3f2130b04bdee250eb4865bf2bc1316c6ae74a6e4722e780d\n      0x0830\n      swap2\n      codecopy\n        /* \"contracts/LicenseAgreeement.sol\":3160:3176  return agreement */\n      swap1\n      pop\n        /* \"contracts/LicenseAgreeement.sol\":3088:3184  function getTemplate() external pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LicenseAgreeement.sol\":3192:6227  function compose(... */\n    tag_18:\n        /* \"contracts/LicenseAgreeement.sol\":3384:3397  string memory */\n      0x60\n        /* \"contracts/LicenseAgreeement.sol\":3410:3430  string memory part_a */\n      0x00\n        /* \"contracts/LicenseAgreeement.sol\":3410:3875  string memory part_a = \"\" ... */\n      mload(0x40)\n      dup1\n      0x0180\n      add\n      0x40\n      mstore\n      dup1\n      0x0160\n      dup2\n      mstore\n      0x20\n      add\n      data_43fbc79cc25b50bb7bbbd48d5cd062fdad28996d3a1185b390b1e2932c0e8bc9\n      0x0160\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/LicenseAgreeement.sol\":3888:3908  string memory part_b */\n      0x00\n        /* \"contracts/LicenseAgreeement.sol\":3888:5904  string memory part_b = \"\\n\"... */\n      mload(0x40)\n      dup1\n      0x06a0\n      add\n      0x40\n      mstore\n      dup1\n      0x0671\n      dup2\n      mstore\n      0x20\n      add\n      data_b609fc3a615f5af5619ed2b11cec9ad925486bc40b21f623ce12d62e8f6c6e5e\n      0x0671\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/LicenseAgreeement.sol\":5917:5937  string memory part_c */\n      0x00\n        /* \"contracts/LicenseAgreeement.sol\":5917:5968  string memory part_c = \"\\n\"... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      0x0a2d204c6963656e7365653a2000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/LicenseAgreeement.sol\":5981:6001  string memory part_d */\n      0x00\n        /* \"contracts/LicenseAgreeement.sol\":5981:6036  string memory part_d = \"\\n\"... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      0x0a2d205369676e696e6720446174653a20000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/LicenseAgreeement.sol\":6080:6086  part_a */\n      dup4\n        /* \"contracts/LicenseAgreeement.sol\":6088:6098  identifier */\n      dup11\n        /* \"contracts/LicenseAgreeement.sol\":6100:6106  part_b */\n      dup5\n        /* \"contracts/LicenseAgreeement.sol\":6108:6137  Strings.toHexString(licensor) */\n      tag_30\n        /* \"contracts/LicenseAgreeement.sol\":6128:6136  licensor */\n      dup13\n        /* \"contracts/LicenseAgreeement.sol\":6108:6127  Strings.toHexString */\n      tag_31\n        /* \"contracts/LicenseAgreeement.sol\":6108:6137  Strings.toHexString(licensor) */\n      jump\t// in\n    tag_30:\n        /* \"contracts/LicenseAgreeement.sol\":6139:6145  part_c */\n      dup6\n        /* \"contracts/LicenseAgreeement.sol\":6147:6176  Strings.toHexString(licensee) */\n      tag_32\n        /* \"contracts/LicenseAgreeement.sol\":6167:6175  licensee */\n      dup14\n        /* \"contracts/LicenseAgreeement.sol\":6147:6166  Strings.toHexString */\n      tag_31\n        /* \"contracts/LicenseAgreeement.sol\":6147:6176  Strings.toHexString(licensee) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/LicenseAgreeement.sol\":6178:6184  part_d */\n      dup7\n        /* \"contracts/LicenseAgreeement.sol\":6186:6217  Strings.toString(signTimestamp) */\n      tag_33\n        /* \"contracts/LicenseAgreeement.sol\":6203:6216  signTimestamp */\n      dup14\n        /* \"contracts/LicenseAgreeement.sol\":6186:6202  Strings.toString */\n      tag_34\n        /* \"contracts/LicenseAgreeement.sol\":6186:6217  Strings.toString(signTimestamp) */\n      jump\t// in\n    tag_33:\n        /* \"contracts/LicenseAgreeement.sol\":6063:6218  abi.encodePacked(part_a, identifier, part_b, Strings.toHexString(licensor), part_c, Strings.toHexString(licensee), part_d, Strings.toString(signTimestamp)) */\n      add(0x20, mload(0x40))\n      tag_35\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/LicenseAgreeement.sol\":6049:6219  return string(abi.encodePacked(part_a, identifier, part_b, Strings.toHexString(licensor), part_c, Strings.toHexString(licensee), part_d, Strings.toString(signTimestamp))) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LicenseAgreeement.sol\":3192:6227  function compose(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LicenseAgreeement.sol\":217:2806  string constant public agreement = \"\" ... */\n    tag_21:\n      mload(0x40)\n      dup1\n      0x0860\n      add\n      0x40\n      mstore\n      dup1\n      0x0830\n      dup2\n      mstore\n      0x20\n      add\n      data_eb502e1e43115de3f2130b04bdee250eb4865bf2bc1316c6ae74a6e4722e780d\n      0x0830\n      swap2\n      codecopy\n      dup2\n      jump\t// out\n        /* \"contracts/LicenseAgreeement.sol\":2998:3080  function getDuration() external pure returns (uint256) {... */\n    tag_24:\n        /* \"contracts/LicenseAgreeement.sol\":3044:3051  uint256 */\n      0x00\n        /* \"contracts/LicenseAgreeement.sol\":2998:3080  function getDuration() external pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2689:2837  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2747:2760  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2779:2830  toHexString(uint256(uint160(addr)), ADDRESS_LENGTH) */\n      tag_39\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2807:2811  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2791:2813  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":375:377  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2779:2830  toHexString(uint256(uint160(addr)), ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2779:2790  toHexString */\n      tag_40\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2779:2830  toHexString(uint256(uint160(addr)), ADDRESS_LENGTH) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2772:2830  return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2689:2837  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_42\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_43\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n    tag_44:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_47:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_50\n      jumpi\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n    tag_50:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_48\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2005:2530  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2080:2093  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2123  uint256 localValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2126:2131  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2131  uint256 localValue = value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2160  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2186:2187  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2177:2183  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2173:2174  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2173:2183  2 * length */\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2173:2187  2 * length + 2 */\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2163:2188  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_59\n      jumpi\n      tag_60\n      tag_46\n      jump\t// in\n    tag_60:\n    tag_59:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_61:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2188  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2198:2213  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2198:2204  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2205:2206  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2198:2207  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n    tag_62:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2198:2213  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2223:2238  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2223:2229  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2230:2231  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2223:2232  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_65\n      jumpi\n      tag_66\n      tag_64\n      jump\t// in\n    tag_66:\n    tag_65:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2223:2238  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2253:2262  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2278:2279  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2269:2275  length */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2265:2266  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2265:2275  2 * length */\n      tag_70\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2265:2279  2 * length + 1 */\n      tag_71\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2253:2279  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2248:2388  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2285:2286  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2281:2282  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2281:2286  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2248:2388  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2319:2329  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2343:2346  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2330:2340  localValue */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2330:2346  localValue & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2319:2347  HEX_DIGITS[localValue & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_72\n      jumpi\n      tag_73\n      tag_64\n      jump\t// in\n    tag_73:\n    tag_72:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2307:2313  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2314:2315  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2307:2316  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_75\n      tag_64\n      jump\t// in\n    tag_75:\n    tag_74:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2307:2347  buffer[i] = HEX_DIGITS[localValue & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2376:2377  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2361:2377  localValue >>= 4 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2288:2291  --i */\n      dup1\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2248:2388  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_67)\n    tag_68:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2415:2416  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2401:2411  localValue */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2401:2416  localValue != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2397:2493  if (localValue != 0) {... */\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2468:2473  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2475:2481  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2439:2482  StringsInsufficientHexLength(value, length) */\n      mload(0x40)\n      0xe22e27eb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2397:2493  if (localValue != 0) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2516:2522  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2502:2523  return string(buffer) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2005:2530  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_82\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_83\n      jumpi\n      tag_84\n      tag_52\n      jump\t// in\n    tag_84:\n    tag_83:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_86\n      jumpi\n      tag_87\n      tag_52\n      jump\t// in\n    tag_87:\n    tag_86:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_88\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_89\n      jumpi\n      tag_90\n      tag_52\n      jump\t// in\n    tag_90:\n    tag_89:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_92\n      jumpi\n      tag_93\n      tag_52\n      jump\t// in\n    tag_93:\n    tag_92:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_95\n      jumpi\n      tag_96\n      tag_52\n      jump\t// in\n    tag_96:\n    tag_95:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_98\n      jumpi\n      tag_99\n      tag_52\n      jump\t// in\n    tag_99:\n    tag_98:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_101:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_102:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_103:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_104:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_105:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_134\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_101\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":711:782   */\n      tag_135\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_102\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_136\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_103\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":881:910   */\n      tag_137\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_104\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_11:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_139\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_105\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_106:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_107:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_108:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1686   */\n    tag_109:\n        /* \"#utility.yul\":1678:1679   */\n      0x00\n        /* \"#utility.yul\":1675:1676   */\n      dup1\n        /* \"#utility.yul\":1668:1680   */\n      revert\n        /* \"#utility.yul\":1692:1809   */\n    tag_110:\n        /* \"#utility.yul\":1801:1802   */\n      0x00\n        /* \"#utility.yul\":1798:1799   */\n      dup1\n        /* \"#utility.yul\":1791:1803   */\n      revert\n        /* \"#utility.yul\":1815:1995   */\n    tag_46:\n        /* \"#utility.yul\":1863:1940   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1860:1861   */\n      0x00\n        /* \"#utility.yul\":1853:1941   */\n      mstore\n        /* \"#utility.yul\":1960:1964   */\n      0x41\n        /* \"#utility.yul\":1957:1958   */\n      0x04\n        /* \"#utility.yul\":1950:1965   */\n      mstore\n        /* \"#utility.yul\":1984:1988   */\n      0x24\n        /* \"#utility.yul\":1981:1982   */\n      0x00\n        /* \"#utility.yul\":1974:1989   */\n      revert\n        /* \"#utility.yul\":2001:2282   */\n    tag_111:\n        /* \"#utility.yul\":2084:2111   */\n      tag_147\n        /* \"#utility.yul\":2106:2110   */\n      dup3\n        /* \"#utility.yul\":2084:2111   */\n      tag_104\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2076:2082   */\n      dup2\n        /* \"#utility.yul\":2072:2112   */\n      add\n        /* \"#utility.yul\":2214:2220   */\n      dup2\n        /* \"#utility.yul\":2202:2212   */\n      dup2\n        /* \"#utility.yul\":2199:2221   */\n      lt\n        /* \"#utility.yul\":2178:2196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2166:2176   */\n      dup3\n        /* \"#utility.yul\":2163:2197   */\n      gt\n        /* \"#utility.yul\":2160:2222   */\n      or\n        /* \"#utility.yul\":2157:2245   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2225:2243   */\n      tag_149\n      tag_46\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2157:2245   */\n    tag_148:\n        /* \"#utility.yul\":2265:2275   */\n      dup1\n        /* \"#utility.yul\":2261:2263   */\n      0x40\n        /* \"#utility.yul\":2254:2276   */\n      mstore\n        /* \"#utility.yul\":2044:2282   */\n      pop\n        /* \"#utility.yul\":2001:2282   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2288:2417   */\n    tag_112:\n        /* \"#utility.yul\":2322:2328   */\n      0x00\n        /* \"#utility.yul\":2349:2369   */\n      tag_151\n      tag_106\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2339:2369   */\n      swap1\n      pop\n        /* \"#utility.yul\":2378:2411   */\n      tag_152\n        /* \"#utility.yul\":2406:2410   */\n      dup3\n        /* \"#utility.yul\":2398:2404   */\n      dup3\n        /* \"#utility.yul\":2378:2411   */\n      tag_111\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2288:2417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2423:2731   */\n    tag_113:\n        /* \"#utility.yul\":2485:2489   */\n      0x00\n        /* \"#utility.yul\":2575:2593   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2567:2573   */\n      dup3\n        /* \"#utility.yul\":2564:2594   */\n      gt\n        /* \"#utility.yul\":2561:2617   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2597:2615   */\n      tag_155\n      tag_46\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2561:2617   */\n    tag_154:\n        /* \"#utility.yul\":2635:2664   */\n      tag_156\n        /* \"#utility.yul\":2657:2663   */\n      dup3\n        /* \"#utility.yul\":2635:2664   */\n      tag_104\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2627:2664   */\n      swap1\n      pop\n        /* \"#utility.yul\":2719:2723   */\n      0x20\n        /* \"#utility.yul\":2713:2717   */\n      dup2\n        /* \"#utility.yul\":2709:2724   */\n      add\n        /* \"#utility.yul\":2701:2724   */\n      swap1\n      pop\n        /* \"#utility.yul\":2423:2731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2737:2885   */\n    tag_114:\n        /* \"#utility.yul\":2835:2841   */\n      dup3\n        /* \"#utility.yul\":2830:2833   */\n      dup2\n        /* \"#utility.yul\":2825:2828   */\n      dup4\n        /* \"#utility.yul\":2812:2842   */\n      calldatacopy\n        /* \"#utility.yul\":2876:2877   */\n      0x00\n        /* \"#utility.yul\":2867:2873   */\n      dup4\n        /* \"#utility.yul\":2862:2865   */\n      dup4\n        /* \"#utility.yul\":2858:2874   */\n      add\n        /* \"#utility.yul\":2851:2878   */\n      mstore\n        /* \"#utility.yul\":2737:2885   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3316   */\n    tag_115:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":2994:3060   */\n      tag_159\n        /* \"#utility.yul\":3010:3059   */\n      tag_160\n        /* \"#utility.yul\":3052:3058   */\n      dup5\n        /* \"#utility.yul\":3010:3059   */\n      tag_113\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2994:3060   */\n      tag_112\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2985:3060   */\n      swap1\n      pop\n        /* \"#utility.yul\":3083:3089   */\n      dup3\n        /* \"#utility.yul\":3076:3081   */\n      dup2\n        /* \"#utility.yul\":3069:3090   */\n      mstore\n        /* \"#utility.yul\":3121:3125   */\n      0x20\n        /* \"#utility.yul\":3114:3119   */\n      dup2\n        /* \"#utility.yul\":3110:3126   */\n      add\n        /* \"#utility.yul\":3159:3162   */\n      dup5\n        /* \"#utility.yul\":3150:3156   */\n      dup5\n        /* \"#utility.yul\":3145:3148   */\n      dup5\n        /* \"#utility.yul\":3141:3157   */\n      add\n        /* \"#utility.yul\":3138:3163   */\n      gt\n        /* \"#utility.yul\":3135:3247   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":3166:3245   */\n      tag_162\n      tag_110\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3135:3247   */\n    tag_161:\n        /* \"#utility.yul\":3256:3310   */\n      tag_163\n        /* \"#utility.yul\":3303:3309   */\n      dup5\n        /* \"#utility.yul\":3298:3301   */\n      dup3\n        /* \"#utility.yul\":3293:3296   */\n      dup6\n        /* \"#utility.yul\":3256:3310   */\n      tag_114\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2975:3316   */\n      pop\n        /* \"#utility.yul\":2891:3316   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3336:3676   */\n    tag_116:\n        /* \"#utility.yul\":3392:3397   */\n      0x00\n        /* \"#utility.yul\":3441:3444   */\n      dup3\n        /* \"#utility.yul\":3434:3438   */\n      0x1f\n        /* \"#utility.yul\":3426:3432   */\n      dup4\n        /* \"#utility.yul\":3422:3439   */\n      add\n        /* \"#utility.yul\":3418:3445   */\n      slt\n        /* \"#utility.yul\":3408:3530   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":3449:3528   */\n      tag_166\n      tag_109\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3408:3530   */\n    tag_165:\n        /* \"#utility.yul\":3566:3572   */\n      dup2\n        /* \"#utility.yul\":3553:3573   */\n      calldataload\n        /* \"#utility.yul\":3591:3670   */\n      tag_167\n        /* \"#utility.yul\":3666:3669   */\n      dup5\n        /* \"#utility.yul\":3658:3664   */\n      dup3\n        /* \"#utility.yul\":3651:3655   */\n      0x20\n        /* \"#utility.yul\":3643:3649   */\n      dup7\n        /* \"#utility.yul\":3639:3656   */\n      add\n        /* \"#utility.yul\":3591:3670   */\n      tag_115\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3582:3670   */\n      swap2\n      pop\n        /* \"#utility.yul\":3398:3676   */\n      pop\n        /* \"#utility.yul\":3336:3676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3682:3808   */\n    tag_117:\n        /* \"#utility.yul\":3719:3726   */\n      0x00\n        /* \"#utility.yul\":3759:3801   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3752:3757   */\n      dup3\n        /* \"#utility.yul\":3748:3802   */\n      and\n        /* \"#utility.yul\":3737:3802   */\n      swap1\n      pop\n        /* \"#utility.yul\":3682:3808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3814:3910   */\n    tag_118:\n        /* \"#utility.yul\":3851:3858   */\n      0x00\n        /* \"#utility.yul\":3880:3904   */\n      tag_170\n        /* \"#utility.yul\":3898:3903   */\n      dup3\n        /* \"#utility.yul\":3880:3904   */\n      tag_117\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3869:3904   */\n      swap1\n      pop\n        /* \"#utility.yul\":3814:3910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3916:4038   */\n    tag_119:\n        /* \"#utility.yul\":3989:4013   */\n      tag_172\n        /* \"#utility.yul\":4007:4012   */\n      dup2\n        /* \"#utility.yul\":3989:4013   */\n      tag_118\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3982:3987   */\n      dup2\n        /* \"#utility.yul\":3979:4014   */\n      eq\n        /* \"#utility.yul\":3969:4032   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":4028:4029   */\n      0x00\n        /* \"#utility.yul\":4025:4026   */\n      dup1\n        /* \"#utility.yul\":4018:4030   */\n      revert\n        /* \"#utility.yul\":3969:4032   */\n    tag_173:\n        /* \"#utility.yul\":3916:4038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4044:4183   */\n    tag_120:\n        /* \"#utility.yul\":4090:4095   */\n      0x00\n        /* \"#utility.yul\":4128:4134   */\n      dup2\n        /* \"#utility.yul\":4115:4135   */\n      calldataload\n        /* \"#utility.yul\":4106:4135   */\n      swap1\n      pop\n        /* \"#utility.yul\":4144:4177   */\n      tag_175\n        /* \"#utility.yul\":4171:4176   */\n      dup2\n        /* \"#utility.yul\":4144:4177   */\n      tag_119\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4044:4183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4189:4266   */\n    tag_121:\n        /* \"#utility.yul\":4226:4233   */\n      0x00\n        /* \"#utility.yul\":4255:4260   */\n      dup2\n        /* \"#utility.yul\":4244:4260   */\n      swap1\n      pop\n        /* \"#utility.yul\":4189:4266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4272:4394   */\n    tag_122:\n        /* \"#utility.yul\":4345:4369   */\n      tag_178\n        /* \"#utility.yul\":4363:4368   */\n      dup2\n        /* \"#utility.yul\":4345:4369   */\n      tag_121\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4338:4343   */\n      dup2\n        /* \"#utility.yul\":4335:4370   */\n      eq\n        /* \"#utility.yul\":4325:4388   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4381:4382   */\n      dup1\n        /* \"#utility.yul\":4374:4386   */\n      revert\n        /* \"#utility.yul\":4325:4388   */\n    tag_179:\n        /* \"#utility.yul\":4272:4394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4400:4539   */\n    tag_123:\n        /* \"#utility.yul\":4446:4451   */\n      0x00\n        /* \"#utility.yul\":4484:4490   */\n      dup2\n        /* \"#utility.yul\":4471:4491   */\n      calldataload\n        /* \"#utility.yul\":4462:4491   */\n      swap1\n      pop\n        /* \"#utility.yul\":4500:4533   */\n      tag_181\n        /* \"#utility.yul\":4527:4532   */\n      dup2\n        /* \"#utility.yul\":4500:4533   */\n      tag_122\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4400:4539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4545:5636   */\n    tag_17:\n        /* \"#utility.yul\":4650:4656   */\n      0x00\n        /* \"#utility.yul\":4658:4664   */\n      dup1\n        /* \"#utility.yul\":4666:4672   */\n      0x00\n        /* \"#utility.yul\":4674:4680   */\n      dup1\n        /* \"#utility.yul\":4682:4688   */\n      0x00\n        /* \"#utility.yul\":4731:4734   */\n      0xa0\n        /* \"#utility.yul\":4719:4728   */\n      dup7\n        /* \"#utility.yul\":4710:4717   */\n      dup9\n        /* \"#utility.yul\":4706:4729   */\n      sub\n        /* \"#utility.yul\":4702:4735   */\n      slt\n        /* \"#utility.yul\":4699:4819   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":4738:4817   */\n      tag_184\n      tag_107\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4699:4819   */\n    tag_183:\n        /* \"#utility.yul\":4886:4887   */\n      0x00\n        /* \"#utility.yul\":4875:4884   */\n      dup7\n        /* \"#utility.yul\":4871:4888   */\n      add\n        /* \"#utility.yul\":4858:4889   */\n      calldataload\n        /* \"#utility.yul\":4916:4934   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4908:4914   */\n      dup2\n        /* \"#utility.yul\":4905:4935   */\n      gt\n        /* \"#utility.yul\":4902:5019   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":4938:5017   */\n      tag_186\n      tag_108\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4902:5019   */\n    tag_185:\n        /* \"#utility.yul\":5043:5106   */\n      tag_187\n        /* \"#utility.yul\":5098:5105   */\n      dup9\n        /* \"#utility.yul\":5089:5095   */\n      dup3\n        /* \"#utility.yul\":5078:5087   */\n      dup10\n        /* \"#utility.yul\":5074:5096   */\n      add\n        /* \"#utility.yul\":5043:5106   */\n      tag_116\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5033:5106   */\n      swap6\n      pop\n        /* \"#utility.yul\":4829:5116   */\n      pop\n        /* \"#utility.yul\":5155:5157   */\n      0x20\n        /* \"#utility.yul\":5181:5234   */\n      tag_188\n        /* \"#utility.yul\":5226:5233   */\n      dup9\n        /* \"#utility.yul\":5217:5223   */\n      dup3\n        /* \"#utility.yul\":5206:5215   */\n      dup10\n        /* \"#utility.yul\":5202:5224   */\n      add\n        /* \"#utility.yul\":5181:5234   */\n      tag_120\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5171:5234   */\n      swap5\n      pop\n        /* \"#utility.yul\":5126:5244   */\n      pop\n        /* \"#utility.yul\":5283:5285   */\n      0x40\n        /* \"#utility.yul\":5309:5362   */\n      tag_189\n        /* \"#utility.yul\":5354:5361   */\n      dup9\n        /* \"#utility.yul\":5345:5351   */\n      dup3\n        /* \"#utility.yul\":5334:5343   */\n      dup10\n        /* \"#utility.yul\":5330:5352   */\n      add\n        /* \"#utility.yul\":5309:5362   */\n      tag_120\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":5299:5362   */\n      swap4\n      pop\n        /* \"#utility.yul\":5254:5372   */\n      pop\n        /* \"#utility.yul\":5411:5413   */\n      0x60\n        /* \"#utility.yul\":5437:5490   */\n      tag_190\n        /* \"#utility.yul\":5482:5489   */\n      dup9\n        /* \"#utility.yul\":5473:5479   */\n      dup3\n        /* \"#utility.yul\":5462:5471   */\n      dup10\n        /* \"#utility.yul\":5458:5480   */\n      add\n        /* \"#utility.yul\":5437:5490   */\n      tag_123\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5427:5490   */\n      swap3\n      pop\n        /* \"#utility.yul\":5382:5500   */\n      pop\n        /* \"#utility.yul\":5539:5542   */\n      0x80\n        /* \"#utility.yul\":5566:5619   */\n      tag_191\n        /* \"#utility.yul\":5611:5618   */\n      dup9\n        /* \"#utility.yul\":5602:5608   */\n      dup3\n        /* \"#utility.yul\":5591:5600   */\n      dup10\n        /* \"#utility.yul\":5587:5609   */\n      add\n        /* \"#utility.yul\":5566:5619   */\n      tag_123\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5556:5619   */\n      swap2\n      pop\n        /* \"#utility.yul\":5510:5629   */\n      pop\n        /* \"#utility.yul\":4545:5636   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5642:5760   */\n    tag_124:\n        /* \"#utility.yul\":5729:5753   */\n      tag_193\n        /* \"#utility.yul\":5747:5752   */\n      dup2\n        /* \"#utility.yul\":5729:5753   */\n      tag_121\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5724:5727   */\n      dup3\n        /* \"#utility.yul\":5717:5754   */\n      mstore\n        /* \"#utility.yul\":5642:5760   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5766:5988   */\n    tag_26:\n        /* \"#utility.yul\":5859:5863   */\n      0x00\n        /* \"#utility.yul\":5897:5899   */\n      0x20\n        /* \"#utility.yul\":5886:5895   */\n      dup3\n        /* \"#utility.yul\":5882:5900   */\n      add\n        /* \"#utility.yul\":5874:5900   */\n      swap1\n      pop\n        /* \"#utility.yul\":5910:5981   */\n      tag_195\n        /* \"#utility.yul\":5978:5979   */\n      0x00\n        /* \"#utility.yul\":5967:5976   */\n      dup4\n        /* \"#utility.yul\":5963:5980   */\n      add\n        /* \"#utility.yul\":5954:5960   */\n      dup5\n        /* \"#utility.yul\":5910:5981   */\n      tag_124\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":5766:5988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6142   */\n    tag_125:\n        /* \"#utility.yul\":6096:6107   */\n      0x00\n        /* \"#utility.yul\":6133:6136   */\n      dup2\n        /* \"#utility.yul\":6118:6136   */\n      swap1\n      pop\n        /* \"#utility.yul\":5994:6142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6148:6538   */\n    tag_126:\n        /* \"#utility.yul\":6254:6257   */\n      0x00\n        /* \"#utility.yul\":6282:6321   */\n      tag_198\n        /* \"#utility.yul\":6315:6320   */\n      dup3\n        /* \"#utility.yul\":6282:6321   */\n      tag_101\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6337:6426   */\n      tag_199\n        /* \"#utility.yul\":6419:6425   */\n      dup2\n        /* \"#utility.yul\":6414:6417   */\n      dup6\n        /* \"#utility.yul\":6337:6426   */\n      tag_125\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":6330:6426   */\n      swap4\n      pop\n        /* \"#utility.yul\":6435:6500   */\n      tag_200\n        /* \"#utility.yul\":6493:6499   */\n      dup2\n        /* \"#utility.yul\":6488:6491   */\n      dup6\n        /* \"#utility.yul\":6481:6485   */\n      0x20\n        /* \"#utility.yul\":6474:6479   */\n      dup7\n        /* \"#utility.yul\":6470:6486   */\n      add\n        /* \"#utility.yul\":6435:6500   */\n      tag_103\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6525:6531   */\n      dup1\n        /* \"#utility.yul\":6520:6523   */\n      dup5\n        /* \"#utility.yul\":6516:6532   */\n      add\n        /* \"#utility.yul\":6509:6532   */\n      swap2\n      pop\n        /* \"#utility.yul\":6258:6538   */\n      pop\n        /* \"#utility.yul\":6148:6538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6544:7939   */\n    tag_36:\n        /* \"#utility.yul\":7012:7015   */\n      0x00\n        /* \"#utility.yul\":7034:7129   */\n      tag_202\n        /* \"#utility.yul\":7125:7128   */\n      dup3\n        /* \"#utility.yul\":7116:7122   */\n      dup12\n        /* \"#utility.yul\":7034:7129   */\n      tag_126\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7027:7129   */\n      swap2\n      pop\n        /* \"#utility.yul\":7146:7241   */\n      tag_203\n        /* \"#utility.yul\":7237:7240   */\n      dup3\n        /* \"#utility.yul\":7228:7234   */\n      dup11\n        /* \"#utility.yul\":7146:7241   */\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7139:7241   */\n      swap2\n      pop\n        /* \"#utility.yul\":7258:7353   */\n      tag_204\n        /* \"#utility.yul\":7349:7352   */\n      dup3\n        /* \"#utility.yul\":7340:7346   */\n      dup10\n        /* \"#utility.yul\":7258:7353   */\n      tag_126\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7251:7353   */\n      swap2\n      pop\n        /* \"#utility.yul\":7370:7465   */\n      tag_205\n        /* \"#utility.yul\":7461:7464   */\n      dup3\n        /* \"#utility.yul\":7452:7458   */\n      dup9\n        /* \"#utility.yul\":7370:7465   */\n      tag_126\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7363:7465   */\n      swap2\n      pop\n        /* \"#utility.yul\":7482:7577   */\n      tag_206\n        /* \"#utility.yul\":7573:7576   */\n      dup3\n        /* \"#utility.yul\":7564:7570   */\n      dup8\n        /* \"#utility.yul\":7482:7577   */\n      tag_126\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7475:7577   */\n      swap2\n      pop\n        /* \"#utility.yul\":7594:7689   */\n      tag_207\n        /* \"#utility.yul\":7685:7688   */\n      dup3\n        /* \"#utility.yul\":7676:7682   */\n      dup7\n        /* \"#utility.yul\":7594:7689   */\n      tag_126\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7587:7689   */\n      swap2\n      pop\n        /* \"#utility.yul\":7706:7801   */\n      tag_208\n        /* \"#utility.yul\":7797:7800   */\n      dup3\n        /* \"#utility.yul\":7788:7794   */\n      dup6\n        /* \"#utility.yul\":7706:7801   */\n      tag_126\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7699:7801   */\n      swap2\n      pop\n        /* \"#utility.yul\":7818:7913   */\n      tag_209\n        /* \"#utility.yul\":7909:7912   */\n      dup3\n        /* \"#utility.yul\":7900:7906   */\n      dup5\n        /* \"#utility.yul\":7818:7913   */\n      tag_126\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":7811:7913   */\n      swap2\n      pop\n        /* \"#utility.yul\":7930:7933   */\n      dup2\n        /* \"#utility.yul\":7923:7933   */\n      swap1\n      pop\n        /* \"#utility.yul\":6544:7939   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7945:8125   */\n    tag_52:\n        /* \"#utility.yul\":7993:8070   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7990:7991   */\n      0x00\n        /* \"#utility.yul\":7983:8071   */\n      mstore\n        /* \"#utility.yul\":8090:8094   */\n      0x12\n        /* \"#utility.yul\":8087:8088   */\n      0x04\n        /* \"#utility.yul\":8080:8095   */\n      mstore\n        /* \"#utility.yul\":8114:8118   */\n      0x24\n        /* \"#utility.yul\":8111:8112   */\n      0x00\n        /* \"#utility.yul\":8104:8119   */\n      revert\n        /* \"#utility.yul\":8131:8311   */\n    tag_127:\n        /* \"#utility.yul\":8179:8256   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8176:8177   */\n      0x00\n        /* \"#utility.yul\":8169:8257   */\n      mstore\n        /* \"#utility.yul\":8276:8280   */\n      0x11\n        /* \"#utility.yul\":8273:8274   */\n      0x04\n        /* \"#utility.yul\":8266:8281   */\n      mstore\n        /* \"#utility.yul\":8300:8304   */\n      0x24\n        /* \"#utility.yul\":8297:8298   */\n      0x00\n        /* \"#utility.yul\":8290:8305   */\n      revert\n        /* \"#utility.yul\":8317:8727   */\n    tag_56:\n        /* \"#utility.yul\":8357:8364   */\n      0x00\n        /* \"#utility.yul\":8380:8400   */\n      tag_213\n        /* \"#utility.yul\":8398:8399   */\n      dup3\n        /* \"#utility.yul\":8380:8400   */\n      tag_121\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8375:8400   */\n      swap2\n      pop\n        /* \"#utility.yul\":8414:8434   */\n      tag_214\n        /* \"#utility.yul\":8432:8433   */\n      dup4\n        /* \"#utility.yul\":8414:8434   */\n      tag_121\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":8409:8434   */\n      swap3\n      pop\n        /* \"#utility.yul\":8469:8470   */\n      dup3\n        /* \"#utility.yul\":8466:8467   */\n      dup3\n        /* \"#utility.yul\":8462:8471   */\n      mul\n        /* \"#utility.yul\":8491:8521   */\n      tag_215\n        /* \"#utility.yul\":8509:8520   */\n      dup2\n        /* \"#utility.yul\":8491:8521   */\n      tag_121\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8480:8521   */\n      swap2\n      pop\n        /* \"#utility.yul\":8670:8671   */\n      dup3\n        /* \"#utility.yul\":8661:8668   */\n      dup3\n        /* \"#utility.yul\":8657:8672   */\n      div\n        /* \"#utility.yul\":8654:8655   */\n      dup5\n        /* \"#utility.yul\":8651:8673   */\n      eq\n        /* \"#utility.yul\":8631:8632   */\n      dup4\n        /* \"#utility.yul\":8624:8633   */\n      iszero\n        /* \"#utility.yul\":8604:8687   */\n      or\n        /* \"#utility.yul\":8581:8720   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":8700:8718   */\n      tag_217\n      tag_127\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":8581:8720   */\n    tag_216:\n        /* \"#utility.yul\":8365:8727   */\n      pop\n        /* \"#utility.yul\":8317:8727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8733:8924   */\n    tag_58:\n        /* \"#utility.yul\":8773:8776   */\n      0x00\n        /* \"#utility.yul\":8792:8812   */\n      tag_219\n        /* \"#utility.yul\":8810:8811   */\n      dup3\n        /* \"#utility.yul\":8792:8812   */\n      tag_121\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":8787:8812   */\n      swap2\n      pop\n        /* \"#utility.yul\":8826:8846   */\n      tag_220\n        /* \"#utility.yul\":8844:8845   */\n      dup4\n        /* \"#utility.yul\":8826:8846   */\n      tag_121\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8821:8846   */\n      swap3\n      pop\n        /* \"#utility.yul\":8869:8870   */\n      dup3\n        /* \"#utility.yul\":8866:8867   */\n      dup3\n        /* \"#utility.yul\":8862:8871   */\n      add\n        /* \"#utility.yul\":8855:8871   */\n      swap1\n      pop\n        /* \"#utility.yul\":8890:8893   */\n      dup1\n        /* \"#utility.yul\":8887:8888   */\n      dup3\n        /* \"#utility.yul\":8884:8894   */\n      gt\n        /* \"#utility.yul\":8881:8917   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":8897:8915   */\n      tag_222\n      tag_127\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8881:8917   */\n    tag_221:\n        /* \"#utility.yul\":8733:8924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8930:9110   */\n    tag_64:\n        /* \"#utility.yul\":8978:9055   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8975:8976   */\n      0x00\n        /* \"#utility.yul\":8968:9056   */\n      mstore\n        /* \"#utility.yul\":9075:9079   */\n      0x32\n        /* \"#utility.yul\":9072:9073   */\n      0x04\n        /* \"#utility.yul\":9065:9080   */\n      mstore\n        /* \"#utility.yul\":9099:9103   */\n      0x24\n        /* \"#utility.yul\":9096:9097   */\n      0x00\n        /* \"#utility.yul\":9089:9104   */\n      revert\n        /* \"#utility.yul\":9116:9287   */\n    tag_77:\n        /* \"#utility.yul\":9155:9158   */\n      0x00\n        /* \"#utility.yul\":9178:9202   */\n      tag_225\n        /* \"#utility.yul\":9196:9201   */\n      dup3\n        /* \"#utility.yul\":9178:9202   */\n      tag_121\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":9169:9202   */\n      swap2\n      pop\n        /* \"#utility.yul\":9224:9228   */\n      0x00\n        /* \"#utility.yul\":9217:9222   */\n      dup3\n        /* \"#utility.yul\":9214:9229   */\n      sub\n        /* \"#utility.yul\":9211:9252   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":9232:9250   */\n      tag_227\n      tag_127\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9211:9252   */\n    tag_226:\n        /* \"#utility.yul\":9279:9280   */\n      0x01\n        /* \"#utility.yul\":9272:9277   */\n      dup3\n        /* \"#utility.yul\":9268:9281   */\n      sub\n        /* \"#utility.yul\":9261:9281   */\n      swap1\n      pop\n        /* \"#utility.yul\":9116:9287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9293:9625   */\n    tag_80:\n        /* \"#utility.yul\":9414:9418   */\n      0x00\n        /* \"#utility.yul\":9452:9454   */\n      0x40\n        /* \"#utility.yul\":9441:9450   */\n      dup3\n        /* \"#utility.yul\":9437:9455   */\n      add\n        /* \"#utility.yul\":9429:9455   */\n      swap1\n      pop\n        /* \"#utility.yul\":9465:9536   */\n      tag_229\n        /* \"#utility.yul\":9533:9534   */\n      0x00\n        /* \"#utility.yul\":9522:9531   */\n      dup4\n        /* \"#utility.yul\":9518:9535   */\n      add\n        /* \"#utility.yul\":9509:9515   */\n      dup6\n        /* \"#utility.yul\":9465:9536   */\n      tag_124\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9546:9618   */\n      tag_230\n        /* \"#utility.yul\":9614:9616   */\n      0x20\n        /* \"#utility.yul\":9603:9612   */\n      dup4\n        /* \"#utility.yul\":9599:9617   */\n      add\n        /* \"#utility.yul\":9590:9596   */\n      dup5\n        /* \"#utility.yul\":9546:9618   */\n      tag_124\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":9293:9625   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_3dce4ae4b48287a227ab5dee905878fe7ac111065e7c71b6655d9677046d109c 437265617469766520436f6d6d6f6e73204174747269627574696f6e20342e3020496e7465726e6174696f6e616c204c6963656e73652028434320425920342e3029\n    data_43fbc79cc25b50bb7bbbd48d5cd062fdad28996d3a1185b390b1e2932c0e8bc9 4c6963656e73696e672041677265656d656e740a0a54686973204c6963656e73652041677265656d656e7420282241677265656d656e74222920697320656e746572656420696e746f20627920616e64206265747765656e3a0a2d204c6963656e736f723a2054686520696e646976696475616c206f7220656e74697479207468617420686f6c64732074686520636f7079726967687420666f722074686520766964656f206964656e7469666965642062656c6f772028224c6963656e736f7222292e0a2d204c6963656e7365653a2054686520696e646976696475616c206f7220656e7469747920746861742077696c6c2075736520746865206c6963656e736564206d6174657269616c20756e64657220746865207465726d73206f6620746869732041677265656d656e742028224c6963656e73656522292e0a0a312e204c6963656e736564204d6174657269616c0a2d20566964656f2049443a20\n    data_b609fc3a615f5af5619ed2b11cec9ad925486bc40b21f623ce12d62e8f6c6e5e 0a546869732041677265656d656e74206170706c69657320746f2074686520766964656f206964656e7469666965642062792074686520566964656f204944206c69737465642061626f76652c20617320686f73746564206f6e20596f7554756265206f7220616e79206f7468657220706c6174666f726d2e0a0a322e204c6963656e7365204772616e740a546865204c6963656e736f7220686572656279206772616e747320746865204c6963656e7365652061206e6f6e2d6578636c75736976652c20776f726c64776964652c20726f79616c74792d66726565206c6963656e736520746f3a0a2d2053686172652028636f707920616e642072656469737472696275746520746865206d6174657269616c20696e20616e79206d656469756d206f7220666f726d6174290a2d204164617074202872656d69782c207472616e73666f726d2c20616e64206275696c642075706f6e20746865206d6174657269616c20666f7220616e7920707572706f73652c206576656e20636f6d6d65726369616c6c79290a556e64657220746865207465726d73206f6620746869732041677265656d656e742c2070726f766964656420746861743a0a2d20546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c2070726f766964652061206c696e6b20746f20746865206c6963656e73652c20616e6420696e646963617465206966206368616e6765732077657265206d6164652e20546865204c6963656e736565206d617920646f20736f20696e20616e7920726561736f6e61626c65206d616e6e65722c20627574206e6f7420696e20616e7920776179207468617420737567676573747320746865204c6963656e736f7220656e646f7273657320746865204c6963656e736565206f722074686520757365206f6620746865206d6174657269616c2e0a0a332e204c6963656e7365204475726174696f6e0a2d204c6963656e7365204475726174696f6e3a2056616c696420666f722061206c69666574696d650a546869732041677265656d656e742069732065666665637469766520666f7220746865206475726174696f6e207370656369666965642061626f76652c207374617274696e672066726f6d20746865205369676e696e6720446174652e0a0a342e204174747269627574696f6e20526571756972656d656e74730a546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c20617320666f6c6c6f77733a0a2d2050726f76696465207468652077616c6c65742061646472657373206f6620746865204c6963656e736f722e0a2d2050726f766964652061206c696e6b20746f2074686520766964656f2e0a2d2050726f766964652061206c696e6b20746f2074686973206c6963656e73652e0a2d20496e646963617465206966206368616e6765732077657265206d61646520746f20746865206f726967696e616c206d6174657269616c2e0a0a352e204e6f204164646974696f6e616c205265737472696374696f6e730a546865204c6963656e736565206d6179206e6f74206170706c79206c6567616c207465726d73206f7220746563686e6f6c6f676963616c206d656173757265732074686174206c6567616c6c79207265737472696374206f74686572732066726f6d20646f696e6720616e797468696e6720746865206c6963656e7365207065726d6974732e0a0a362e205465726d696e6174696f6e0a546869732041677265656d656e742077696c6c206175746f6d61746963616c6c79207465726d696e61746520696620746865204c6963656e736565206661696c7320746f20636f6d706c79207769746820746865207465726d732068657265696e2e20486f77657665722c20746865206c6963656e73652077696c6c206e6f74207465726d696e617465206173206120726573756c74206f66206d696e6f7220616e6420726561736f6e61626c6520646576696174696f6e73207468617420646f206e6f742066756e64616d656e74616c6c792061666665637420746865207465726d73206f66207468652041677265656d656e742e0a0a372e205369676e6174757265730a546869732041677265656d656e742069732065786563757465642062792074686520666f6c6c6f77696e6720706172746965733a0a2d204c6963656e736f723a20\n    data_eb502e1e43115de3f2130b04bdee250eb4865bf2bc1316c6ae74a6e4722e780d 4c6963656e73696e672041677265656d656e740a0a54686973204c6963656e73652041677265656d656e7420282241677265656d656e74222920697320656e746572656420696e746f20627920616e64206265747765656e3a0a2d204c6963656e736f723a2054686520696e646976696475616c206f7220656e74697479207468617420686f6c64732074686520636f7079726967687420666f722074686520766964656f206964656e7469666965642062656c6f772028224c6963656e736f7222292e0a2d204c6963656e7365653a2054686520696e646976696475616c206f7220656e7469747920746861742077696c6c2075736520746865206c6963656e736564206d6174657269616c20756e64657220746865207465726d73206f6620746869732041677265656d656e742028224c6963656e73656522292e0a0a312e204c6963656e736564204d6174657269616c0a2d20566964656f2049443a205b766964656f2069645d0a546869732041677265656d656e74206170706c69657320746f2074686520766964656f206964656e7469666965642062792074686520566964656f204944206c69737465642061626f76652c20617320686f73746564206f6e20596f7554756265206f7220616e79206f7468657220706c6174666f726d2e0a0a322e204c6963656e7365204772616e740a546865204c6963656e736f7220686572656279206772616e747320746865204c6963656e7365652061206e6f6e2d6578636c75736976652c20776f726c64776964652c20726f79616c74792d66726565206c6963656e736520746f3a0a2d2053686172652028636f707920616e642072656469737472696275746520746865206d6174657269616c20696e20616e79206d656469756d206f7220666f726d6174290a2d204164617074202872656d69782c207472616e73666f726d2c20616e64206275696c642075706f6e20746865206d6174657269616c20666f7220616e7920707572706f73652c206576656e20636f6d6d65726369616c6c79290a556e64657220746865207465726d73206f6620746869732041677265656d656e742c2070726f766964656420746861743a0a2d20546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c2070726f766964652061206c696e6b20746f20746865206c6963656e73652c20616e6420696e646963617465206966206368616e6765732077657265206d6164652e20546865204c6963656e736565206d617920646f20736f20696e20616e7920726561736f6e61626c65206d616e6e65722c20627574206e6f7420696e20616e7920776179207468617420737567676573747320746865204c6963656e736f7220656e646f7273657320746865204c6963656e736565206f722074686520757365206f6620746865206d6174657269616c2e0a0a332e204c6963656e7365204475726174696f6e0a2d204c6963656e7365204475726174696f6e3a2056616c696420666f722061206c69666574696d650a546869732041677265656d656e742069732065666665637469766520666f7220746865206475726174696f6e207370656369666965642061626f76652c207374617274696e672066726f6d20746865205369676e696e6720446174652e0a0a342e204174747269627574696f6e20526571756972656d656e74730a546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c20617320666f6c6c6f77733a0a2d2050726f76696465207468652077616c6c65742061646472657373206f6620746865204c6963656e736f722e0a2d2050726f766964652061206c696e6b20746f2074686520766964656f2e0a2d2050726f766964652061206c696e6b20746f2074686973206c6963656e73652e0a2d20496e646963617465206966206368616e6765732077657265206d61646520746f20746865206f726967696e616c206d6174657269616c2e0a0a352e204e6f204164646974696f6e616c205265737472696374696f6e730a546865204c6963656e736565206d6179206e6f74206170706c79206c6567616c207465726d73206f7220746563686e6f6c6f676963616c206d656173757265732074686174206c6567616c6c79207265737472696374206f74686572732066726f6d20646f696e6720616e797468696e6720746865206c6963656e7365207065726d6974732e0a0a362e205465726d696e6174696f6e0a546869732041677265656d656e742077696c6c206175746f6d61746963616c6c79207465726d696e61746520696620746865204c6963656e736565206661696c7320746f20636f6d706c79207769746820746865207465726d732068657265696e2e20486f77657665722c20746865206c6963656e73652077696c6c206e6f74207465726d696e617465206173206120726573756c74206f66206d696e6f7220616e6420726561736f6e61626c6520646576696174696f6e73207468617420646f206e6f742066756e64616d656e74616c6c792061666665637420746865207465726d73206f66207468652041677265656d656e742e0a0a372e205369676e6174757265730a546869732041677265656d656e742069732065786563757465642062792074686520666f6c6c6f77696e6720706172746965733a0a2d204c6963656e736f723a205b6c6963656e736f7220616464726573735d0a2d204c6963656e7365653a205b6c6963656e73656520616464726573735d0a2d205369676e696e6720446174653a205b7369676e696e672074696d657374616d705d\n\n    auxdata: 0xa264697066735822122065954e728e1a6959c7e980bd8a626cc9cb6ea3947c96ce5cd428241de5f041f264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1460": {
									"entryPoint": null,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C76 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x321C48F2 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x483CED98 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x7DB3A946 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBFE PUSH1 0x42 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x860 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x830 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1411 PUSH2 0x830 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x160 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC40 PUSH2 0x160 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x6A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x671 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA0 PUSH2 0x671 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xA2D204C6963656E7365653A2000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xA2D205369676E696E6720446174653A20000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP DUP4 DUP11 DUP5 PUSH2 0x202 DUP13 PUSH2 0x26E JUMP JUMPDEST DUP6 PUSH2 0x20C DUP14 PUSH2 0x26E JUMP JUMPDEST DUP7 PUSH2 0x216 DUP14 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22D SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x860 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x830 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1411 PUSH2 0x830 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x294 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x2A9 DUP5 PUSH2 0x5A3 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C7 JUMPI PUSH2 0x2C6 PUSH2 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x35A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x34F JUMPI PUSH2 0x34E PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x306 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 SWAP1 POP PUSH0 PUSH1 0x2 DUP5 PUSH1 0x2 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x385 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x407 JUMPI PUSH2 0x406 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP6 PUSH1 0x2 PUSH2 0x4A8 SWAP2 SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x551 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP5 AND PUSH1 0x10 DUP2 LT PUSH2 0x4F4 JUMPI PUSH2 0x4F3 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x50B JUMPI PUSH2 0x50A PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP DUP1 PUSH2 0x54A SWAP1 PUSH2 0xBAF JUMP JUMPDEST SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST POP PUSH0 DUP3 EQ PUSH2 0x598 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE22E27EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP3 SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x5FF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x5F5 JUMPI PUSH2 0x5F4 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x63C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x632 JUMPI PUSH2 0x631 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x66B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x694 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x6B9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x6AF JUMPI PUSH2 0x6AE PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x6DC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6EB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x736 DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x740 DUP2 DUP6 PUSH2 0x6FE JUMP JUMPDEST SWAP4 POP PUSH2 0x750 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x70E JUMP JUMPDEST PUSH2 0x759 DUP2 PUSH2 0x71C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x77C DUP2 DUP5 PUSH2 0x72C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x7D3 DUP3 PUSH2 0x71C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x79D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x804 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP PUSH2 0x810 DUP3 DUP3 PUSH2 0x7CA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x82F JUMPI PUSH2 0x82E PUSH2 0x79D JUMP JUMPDEST JUMPDEST PUSH2 0x838 DUP3 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x865 PUSH2 0x860 DUP5 PUSH2 0x815 JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x881 JUMPI PUSH2 0x880 PUSH2 0x799 JUMP JUMPDEST JUMPDEST PUSH2 0x88C DUP5 DUP3 DUP6 PUSH2 0x845 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8A8 JUMPI PUSH2 0x8A7 PUSH2 0x795 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8B8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x853 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8EA DUP3 PUSH2 0x8C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x904 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x915 DUP2 PUSH2 0x8F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92D DUP2 PUSH2 0x91B JUMP JUMPDEST DUP2 EQ PUSH2 0x937 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x948 DUP2 PUSH2 0x924 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x78D JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x984 JUMPI PUSH2 0x983 PUSH2 0x791 JUMP JUMPDEST JUMPDEST PUSH2 0x990 DUP9 DUP3 DUP10 ADD PUSH2 0x894 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9A1 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9B2 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x9C3 DUP9 DUP3 DUP10 ADD PUSH2 0x93A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x9D4 DUP9 DUP3 DUP10 ADD PUSH2 0x93A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x9EA DUP2 PUSH2 0x91B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA03 PUSH0 DUP4 ADD DUP5 PUSH2 0x9E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0xA27 DUP2 DUP6 PUSH2 0xA09 JUMP JUMPDEST SWAP4 POP PUSH2 0xA37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x70E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA4E DUP3 DUP12 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA5A DUP3 DUP11 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA66 DUP3 DUP10 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA72 DUP3 DUP9 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA7E DUP3 DUP8 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA8A DUP3 DUP7 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA96 DUP3 DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA2 DUP3 DUP5 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB18 DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH2 0xB23 DUP4 PUSH2 0x91B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB31 DUP2 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB59 DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH2 0xB64 DUP4 PUSH2 0x91B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBB9 DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xBCB JUMPI PUSH2 0xBCA PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBE9 PUSH0 DUP4 ADD DUP6 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0xBF6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID NUMBER PUSH19 0x65617469766520436F6D6D6F6E732041747472 PUSH10 0x627574696F6E20342E30 KECCAK256 BLOBHASH PUSH15 0x7465726E6174696F6E616C204C6963 PUSH6 0x6E7365202843 NUMBER KECCAK256 TIMESTAMP MSIZE KECCAK256 CALLVALUE 0x2E ADDRESS 0x29 0x4C PUSH10 0x63656E73696E67204167 PUSH19 0x65656D656E740A0A54686973204C6963656E73 PUSH6 0x204167726565 PUSH14 0x656E7420282241677265656D656E PUSH21 0x222920697320656E746572656420696E746F206279 KECCAK256 PUSH2 0x6E64 KECCAK256 PUSH3 0x657477 PUSH6 0x656E3A0A2D20 0x4C PUSH10 0x63656E736F723A205468 PUSH6 0x20696E646976 PUSH10 0x6475616C206F7220656E PUSH21 0x697479207468617420686F6C64732074686520636F PUSH17 0x79726967687420666F7220746865207669 PUSH5 0x656F206964 PUSH6 0x6E7469666965 PUSH5 0x2062656C6F PUSH24 0x2028224C6963656E736F7222292E0A2D204C6963656E7365 PUSH6 0x3A2054686520 PUSH10 0x6E646976696475616C20 PUSH16 0x7220656E746974792074686174207769 PUSH13 0x6C2075736520746865206C6963 PUSH6 0x6E736564206D PUSH2 0x7465 PUSH19 0x69616C20756E64657220746865207465726D73 KECCAK256 PUSH16 0x6620746869732041677265656D656E74 KECCAK256 0x28 0x22 0x4C PUSH10 0x63656E73656522292E0A EXP BALANCE 0x2E KECCAK256 0x4C PUSH10 0x63656E736564204D6174 PUSH6 0x7269616C0A2D KECCAK256 JUMP PUSH10 0x64656F2049443A200A54 PUSH9 0x69732041677265656D PUSH6 0x6E7420617070 PUSH13 0x69657320746F20746865207669 PUSH5 0x656F206964 PUSH6 0x6E7469666965 PUSH5 0x2062792074 PUSH9 0x6520566964656F2049 PREVRANDAO KECCAK256 PUSH13 0x69737465642061626F76652C20 PUSH2 0x7320 PUSH9 0x6F73746564206F6E20 MSIZE PUSH16 0x7554756265206F7220616E79206F7468 PUSH6 0x7220706C6174 PUSH7 0x6F726D2E0A0A32 0x2E KECCAK256 0x4C PUSH10 0x63656E7365204772616E PUSH21 0xA546865204C6963656E736F722068657265627920 PUSH8 0x72616E7473207468 PUSH6 0x204C6963656E PUSH20 0x65652061206E6F6E2D6578636C75736976652C20 PUSH24 0x6F726C64776964652C20726F79616C74792D66726565206C PUSH10 0x63656E736520746F3A0A 0x2D KECCAK256 MSTORE8 PUSH9 0x6172652028636F7079 KECCAK256 PUSH2 0x6E64 KECCAK256 PUSH19 0x656469737472696275746520746865206D6174 PUSH6 0x7269616C2069 PUSH15 0x20616E79206D656469756D206F7220 PUSH7 0x6F726D6174290A 0x2D KECCAK256 COINBASE PUSH5 0x6170742028 PUSH19 0x656D69782C207472616E73666F726D2C20616E PUSH5 0x206275696C PUSH5 0x2075706F6E KECCAK256 PUSH21 0x6865206D6174657269616C20666F7220616E792070 PUSH22 0x72706F73652C206576656E20636F6D6D65726369616C PUSH13 0x79290A556E6465722074686520 PUSH21 0x65726D73206F6620746869732041677265656D656E PUSH21 0x2C2070726F766964656420746861743A0A2D205468 PUSH6 0x204C6963656E PUSH20 0x6565206D757374206769766520617070726F7072 PUSH10 0x61746520637265646974 KECCAK256 PUSH21 0x6F20746865204C6963656E736F722C2070726F7669 PUSH5 0x652061206C PUSH10 0x6E6B20746F2074686520 PUSH13 0x6963656E73652C20616E642069 PUSH15 0x646963617465206966206368616E67 PUSH6 0x732077657265 KECCAK256 PUSH14 0x6164652E20546865204C6963656E PUSH20 0x6565206D617920646F20736F20696E20616E7920 PUSH19 0x6561736F6E61626C65206D616E6E65722C2062 PUSH22 0x74206E6F7420696E20616E7920776179207468617420 PUSH20 0x7567676573747320746865204C6963656E736F72 KECCAK256 PUSH6 0x6E646F727365 PUSH20 0x20746865204C6963656E736565206F7220746865 KECCAK256 PUSH22 0x7365206F6620746865206D6174657269616C2E0A0A33 0x2E KECCAK256 0x4C PUSH10 0x63656E73652044757261 PUSH21 0x696F6E0A2D204C6963656E7365204475726174696F PUSH15 0x3A2056616C696420666F722061206C PUSH10 0x666574696D650A546869 PUSH20 0x2041677265656D656E7420697320656666656374 PUSH10 0x766520666F7220746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E207370656369666965642061626F76 PUSH6 0x2C2073746172 PUSH21 0x696E672066726F6D20746865205369676E696E6720 PREVRANDAO PUSH2 0x7465 0x2E EXP EXP CALLVALUE 0x2E KECCAK256 COINBASE PUSH21 0x747269627574696F6E20526571756972656D656E74 PUSH20 0xA546865204C6963656E736565206D7573742067 PUSH10 0x766520617070726F7072 PUSH10 0x61746520637265646974 KECCAK256 PUSH21 0x6F20746865204C6963656E736F722C20617320666F PUSH13 0x6C6F77733A0A2D2050726F7669 PUSH5 0x6520746865 KECCAK256 PUSH24 0x616C6C65742061646472657373206F6620746865204C6963 PUSH6 0x6E736F722E0A 0x2D KECCAK256 POP PUSH19 0x6F766964652061206C696E6B20746F20746865 KECCAK256 PUSH23 0x6964656F2E0A2D2050726F766964652061206C696E6B20 PUSH21 0x6F2074686973206C6963656E73652E0A2D20496E64 PUSH10 0x63617465206966206368 PUSH2 0x6E67 PUSH6 0x732077657265 KECCAK256 PUSH14 0x61646520746F20746865206F7269 PUSH8 0x696E616C206D6174 PUSH6 0x7269616C2E0A EXP CALLDATALOAD 0x2E KECCAK256 0x4E PUSH16 0x204164646974696F6E616C2052657374 PUSH19 0x696374696F6E730A546865204C6963656E7365 PUSH6 0x206D6179206E PUSH16 0x74206170706C79206C6567616C207465 PUSH19 0x6D73206F7220746563686E6F6C6F676963616C KECCAK256 PUSH14 0x656173757265732074686174206C PUSH6 0x67616C6C7920 PUSH19 0x65737472696374206F74686572732066726F6D KECCAK256 PUSH5 0x6F696E6720 PUSH2 0x6E79 PUSH21 0x68696E6720746865206C6963656E7365207065726D PUSH10 0x74732E0A0A362E205465 PUSH19 0x6D696E6174696F6E0A54686973204167726565 PUSH14 0x656E742077696C6C206175746F6D PUSH2 0x7469 PUSH4 0x616C6C79 KECCAK256 PUSH21 0x65726D696E61746520696620746865204C6963656E PUSH20 0x6565206661696C7320746F20636F6D706C792077 PUSH10 0x74682074686520746572 PUSH14 0x732068657265696E2E20486F7765 PUSH23 0x65722C20746865206C6963656E73652077696C6C206E6F PUSH21 0x207465726D696E617465206173206120726573756C PUSH21 0x206F66206D696E6F7220616E6420726561736F6E61 PUSH3 0x6C6520 PUSH5 0x6576696174 PUSH10 0x6F6E7320746861742064 PUSH16 0x206E6F742066756E64616D656E74616C PUSH13 0x79206166666563742074686520 PUSH21 0x65726D73206F66207468652041677265656D656E74 0x2E EXP EXP CALLDATACOPY 0x2E KECCAK256 MSTORE8 PUSH10 0x676E6174757265730A54 PUSH9 0x69732041677265656D PUSH6 0x6E7420697320 PUSH6 0x786563757465 PUSH5 0x2062792074 PUSH9 0x6520666F6C6C6F7769 PUSH15 0x6720706172746965733A0A2D204C69 PUSH4 0x656E736F PUSH19 0x3A204C6963656E73696E672041677265656D65 PUSH15 0x740A0A54686973204C6963656E7365 KECCAK256 COINBASE PUSH8 0x7265656D656E7420 0x28 0x22 COINBASE PUSH8 0x7265656D656E7422 0x29 KECCAK256 PUSH10 0x7320656E746572656420 PUSH10 0x6E746F20627920616E64 KECCAK256 PUSH3 0x657477 PUSH6 0x656E3A0A2D20 0x4C PUSH10 0x63656E736F723A205468 PUSH6 0x20696E646976 PUSH10 0x6475616C206F7220656E PUSH21 0x697479207468617420686F6C64732074686520636F PUSH17 0x79726967687420666F7220746865207669 PUSH5 0x656F206964 PUSH6 0x6E7469666965 PUSH5 0x2062656C6F PUSH24 0x2028224C6963656E736F7222292E0A2D204C6963656E7365 PUSH6 0x3A2054686520 PUSH10 0x6E646976696475616C20 PUSH16 0x7220656E746974792074686174207769 PUSH13 0x6C2075736520746865206C6963 PUSH6 0x6E736564206D PUSH2 0x7465 PUSH19 0x69616C20756E64657220746865207465726D73 KECCAK256 PUSH16 0x6620746869732041677265656D656E74 KECCAK256 0x28 0x22 0x4C PUSH10 0x63656E73656522292E0A EXP BALANCE 0x2E KECCAK256 0x4C PUSH10 0x63656E736564204D6174 PUSH6 0x7269616C0A2D KECCAK256 JUMP PUSH10 0x64656F2049443A205B76 PUSH10 0x64656F2069645D0A5468 PUSH10 0x732041677265656D656E PUSH21 0x206170706C69657320746F2074686520766964656F KECCAK256 PUSH10 0x64656E74696669656420 PUSH3 0x792074 PUSH9 0x6520566964656F2049 PREVRANDAO KECCAK256 PUSH13 0x69737465642061626F76652C20 PUSH2 0x7320 PUSH9 0x6F73746564206F6E20 MSIZE PUSH16 0x7554756265206F7220616E79206F7468 PUSH6 0x7220706C6174 PUSH7 0x6F726D2E0A0A32 0x2E KECCAK256 0x4C PUSH10 0x63656E7365204772616E PUSH21 0xA546865204C6963656E736F722068657265627920 PUSH8 0x72616E7473207468 PUSH6 0x204C6963656E PUSH20 0x65652061206E6F6E2D6578636C75736976652C20 PUSH24 0x6F726C64776964652C20726F79616C74792D66726565206C PUSH10 0x63656E736520746F3A0A 0x2D KECCAK256 MSTORE8 PUSH9 0x6172652028636F7079 KECCAK256 PUSH2 0x6E64 KECCAK256 PUSH19 0x656469737472696275746520746865206D6174 PUSH6 0x7269616C2069 PUSH15 0x20616E79206D656469756D206F7220 PUSH7 0x6F726D6174290A 0x2D KECCAK256 COINBASE PUSH5 0x6170742028 PUSH19 0x656D69782C207472616E73666F726D2C20616E PUSH5 0x206275696C PUSH5 0x2075706F6E KECCAK256 PUSH21 0x6865206D6174657269616C20666F7220616E792070 PUSH22 0x72706F73652C206576656E20636F6D6D65726369616C PUSH13 0x79290A556E6465722074686520 PUSH21 0x65726D73206F6620746869732041677265656D656E PUSH21 0x2C2070726F766964656420746861743A0A2D205468 PUSH6 0x204C6963656E PUSH20 0x6565206D757374206769766520617070726F7072 PUSH10 0x61746520637265646974 KECCAK256 PUSH21 0x6F20746865204C6963656E736F722C2070726F7669 PUSH5 0x652061206C PUSH10 0x6E6B20746F2074686520 PUSH13 0x6963656E73652C20616E642069 PUSH15 0x646963617465206966206368616E67 PUSH6 0x732077657265 KECCAK256 PUSH14 0x6164652E20546865204C6963656E PUSH20 0x6565206D617920646F20736F20696E20616E7920 PUSH19 0x6561736F6E61626C65206D616E6E65722C2062 PUSH22 0x74206E6F7420696E20616E7920776179207468617420 PUSH20 0x7567676573747320746865204C6963656E736F72 KECCAK256 PUSH6 0x6E646F727365 PUSH20 0x20746865204C6963656E736565206F7220746865 KECCAK256 PUSH22 0x7365206F6620746865206D6174657269616C2E0A0A33 0x2E KECCAK256 0x4C PUSH10 0x63656E73652044757261 PUSH21 0x696F6E0A2D204C6963656E7365204475726174696F PUSH15 0x3A2056616C696420666F722061206C PUSH10 0x666574696D650A546869 PUSH20 0x2041677265656D656E7420697320656666656374 PUSH10 0x766520666F7220746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E207370656369666965642061626F76 PUSH6 0x2C2073746172 PUSH21 0x696E672066726F6D20746865205369676E696E6720 PREVRANDAO PUSH2 0x7465 0x2E EXP EXP CALLVALUE 0x2E KECCAK256 COINBASE PUSH21 0x747269627574696F6E20526571756972656D656E74 PUSH20 0xA546865204C6963656E736565206D7573742067 PUSH10 0x766520617070726F7072 PUSH10 0x61746520637265646974 KECCAK256 PUSH21 0x6F20746865204C6963656E736F722C20617320666F PUSH13 0x6C6F77733A0A2D2050726F7669 PUSH5 0x6520746865 KECCAK256 PUSH24 0x616C6C65742061646472657373206F6620746865204C6963 PUSH6 0x6E736F722E0A 0x2D KECCAK256 POP PUSH19 0x6F766964652061206C696E6B20746F20746865 KECCAK256 PUSH23 0x6964656F2E0A2D2050726F766964652061206C696E6B20 PUSH21 0x6F2074686973206C6963656E73652E0A2D20496E64 PUSH10 0x63617465206966206368 PUSH2 0x6E67 PUSH6 0x732077657265 KECCAK256 PUSH14 0x61646520746F20746865206F7269 PUSH8 0x696E616C206D6174 PUSH6 0x7269616C2E0A EXP CALLDATALOAD 0x2E KECCAK256 0x4E PUSH16 0x204164646974696F6E616C2052657374 PUSH19 0x696374696F6E730A546865204C6963656E7365 PUSH6 0x206D6179206E PUSH16 0x74206170706C79206C6567616C207465 PUSH19 0x6D73206F7220746563686E6F6C6F676963616C KECCAK256 PUSH14 0x656173757265732074686174206C PUSH6 0x67616C6C7920 PUSH19 0x65737472696374206F74686572732066726F6D KECCAK256 PUSH5 0x6F696E6720 PUSH2 0x6E79 PUSH21 0x68696E6720746865206C6963656E7365207065726D PUSH10 0x74732E0A0A362E205465 PUSH19 0x6D696E6174696F6E0A54686973204167726565 PUSH14 0x656E742077696C6C206175746F6D PUSH2 0x7469 PUSH4 0x616C6C79 KECCAK256 PUSH21 0x65726D696E61746520696620746865204C6963656E PUSH20 0x6565206661696C7320746F20636F6D706C792077 PUSH10 0x74682074686520746572 PUSH14 0x732068657265696E2E20486F7765 PUSH23 0x65722C20746865206C6963656E73652077696C6C206E6F PUSH21 0x207465726D696E617465206173206120726573756C PUSH21 0x206F66206D696E6F7220616E6420726561736F6E61 PUSH3 0x6C6520 PUSH5 0x6576696174 PUSH10 0x6F6E7320746861742064 PUSH16 0x206E6F742066756E64616D656E74616C PUSH13 0x79206166666563742074686520 PUSH21 0x65726D73206F66207468652041677265656D656E74 0x2E EXP EXP CALLDATACOPY 0x2E KECCAK256 MSTORE8 PUSH10 0x676E6174757265730A54 PUSH9 0x69732041677265656D PUSH6 0x6E7420697320 PUSH6 0x786563757465 PUSH5 0x2062792074 PUSH9 0x6520666F6C6C6F7769 PUSH15 0x6720706172746965733A0A2D204C69 PUSH4 0x656E736F PUSH19 0x3A205B6C6963656E736F722061646472657373 TSTORE EXP 0x2D KECCAK256 0x4C PUSH10 0x63656E7365653A205B6C PUSH10 0x63656E73656520616464 PUSH19 0x6573735D0A2D205369676E696E672044617465 GASPRICE KECCAK256 JUMPDEST PUSH20 0x69676E696E672074696D657374616D705DA26469 PUSH17 0x66735822122065954E728E1A6959C7E980 0xBD DUP11 PUSH3 0x6CC9CB PUSH15 0xA3947C96CE5CD428241DE5F041F264 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "158:6072:4:-:0;;;2815:16;;;;;;;;;;158:6072;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@agreement_1456": {
									"entryPoint": 587,
									"id": 1456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@compose_1540": {
									"entryPoint": 324,
									"id": 1540,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@getDuration_1476": {
									"entryPoint": 618,
									"id": 1476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getName_1468": {
									"entryPoint": 257,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTemplate_1484": {
									"entryPoint": 289,
									"id": 1484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@log10_1128": {
									"entryPoint": 1443,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_196": {
									"entryPoint": 869,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_216": {
									"entryPoint": 622,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_67": {
									"entryPoint": 667,
									"id": 67,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_addresst_addresst_uint256t_uint256": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3030,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2117,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9628:5",
										"nodeType": "YulBlock",
										"src": "0:9628:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:5",
													"nodeType": "YulBlock",
													"src": "66:40:5",
													"statements": [
														{
															"nativeSrc": "77:22:5",
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:5"
																},
																"nativeSrc": "87:12:5",
																"nodeType": "YulFunctionCall",
																"src": "87:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:5",
														"nodeType": "YulTypedName",
														"src": "49:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:5",
														"nodeType": "YulTypedName",
														"src": "59:6:5",
														"type": ""
													}
												],
												"src": "7:99:5"
											},
											{
												"body": {
													"nativeSrc": "208:73:5",
													"nodeType": "YulBlock",
													"src": "208:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:5"
																},
																"nativeSrc": "218:19:5",
																"nodeType": "YulFunctionCall",
																"src": "218:19:5"
															},
															"nativeSrc": "218:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:5"
														},
														{
															"nativeSrc": "246:29:5",
															"nodeType": "YulAssignment",
															"src": "246:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:5",
																		"nodeType": "YulLiteral",
																		"src": "270:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:5"
																},
																"nativeSrc": "261:14:5",
																"nodeType": "YulFunctionCall",
																"src": "261:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:5",
														"nodeType": "YulTypedName",
														"src": "180:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:5",
														"nodeType": "YulTypedName",
														"src": "185:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:5",
														"nodeType": "YulTypedName",
														"src": "196:11:5",
														"type": ""
													}
												],
												"src": "112:169:5"
											},
											{
												"body": {
													"nativeSrc": "349:77:5",
													"nodeType": "YulBlock",
													"src": "349:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:5"
																},
																"nativeSrc": "360:23:5",
																"nodeType": "YulFunctionCall",
																"src": "360:23:5"
															},
															"nativeSrc": "360:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:5"
																		},
																		"nativeSrc": "399:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:5",
																		"nodeType": "YulLiteral",
																		"src": "417:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:5"
																},
																"nativeSrc": "392:27:5",
																"nodeType": "YulFunctionCall",
																"src": "392:27:5"
															},
															"nativeSrc": "392:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:5",
														"nodeType": "YulTypedName",
														"src": "331:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:5",
														"nodeType": "YulTypedName",
														"src": "336:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:5",
														"nodeType": "YulTypedName",
														"src": "341:6:5",
														"type": ""
													}
												],
												"src": "287:139:5"
											},
											{
												"body": {
													"nativeSrc": "480:54:5",
													"nodeType": "YulBlock",
													"src": "480:54:5",
													"statements": [
														{
															"nativeSrc": "490:38:5",
															"nodeType": "YulAssignment",
															"src": "490:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:5",
																				"nodeType": "YulLiteral",
																				"src": "515:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:5"
																		},
																		"nativeSrc": "504:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:5",
																				"nodeType": "YulLiteral",
																				"src": "524:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:5"
																		},
																		"nativeSrc": "520:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:5"
																},
																"nativeSrc": "500:28:5",
																"nodeType": "YulFunctionCall",
																"src": "500:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:5",
														"nodeType": "YulTypedName",
														"src": "463:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:5",
														"nodeType": "YulTypedName",
														"src": "473:6:5",
														"type": ""
													}
												],
												"src": "432:102:5"
											},
											{
												"body": {
													"nativeSrc": "632:285:5",
													"nodeType": "YulBlock",
													"src": "632:285:5",
													"statements": [
														{
															"nativeSrc": "642:53:5",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:5",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:5"
																},
																"nativeSrc": "656:39:5",
																"nodeType": "YulFunctionCall",
																"src": "656:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:5",
																	"nodeType": "YulTypedName",
																	"src": "646:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:5",
															"nodeType": "YulAssignment",
															"src": "704:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:5"
																},
																"nativeSrc": "711:71:5",
																"nodeType": "YulFunctionCall",
																"src": "711:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:5",
																				"nodeType": "YulLiteral",
																				"src": "837:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:5"
																		},
																		"nativeSrc": "826:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:5"
																},
																"nativeSrc": "791:65:5",
																"nodeType": "YulFunctionCall",
																"src": "791:65:5"
															},
															"nativeSrc": "791:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:5"
														},
														{
															"nativeSrc": "865:46:5",
															"nodeType": "YulAssignment",
															"src": "865:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:5"
																		},
																		"nativeSrc": "881:29:5",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:5"
																},
																"nativeSrc": "872:39:5",
																"nodeType": "YulFunctionCall",
																"src": "872:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:5",
														"nodeType": "YulTypedName",
														"src": "613:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:5",
														"nodeType": "YulTypedName",
														"src": "620:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:5",
														"nodeType": "YulTypedName",
														"src": "628:3:5",
														"type": ""
													}
												],
												"src": "540:377:5"
											},
											{
												"body": {
													"nativeSrc": "1041:195:5",
													"nodeType": "YulBlock",
													"src": "1041:195:5",
													"statements": [
														{
															"nativeSrc": "1051:26:5",
															"nodeType": "YulAssignment",
															"src": "1051:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:5"
																},
																"nativeSrc": "1059:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:5"
																		},
																		"nativeSrc": "1094:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:5"
																		},
																		"nativeSrc": "1113:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:5"
																},
																"nativeSrc": "1087:47:5",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:5"
															},
															"nativeSrc": "1087:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:5"
														},
														{
															"nativeSrc": "1143:86:5",
															"nodeType": "YulAssignment",
															"src": "1143:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:5",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:5"
																},
																"nativeSrc": "1151:78:5",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:5",
														"nodeType": "YulTypedName",
														"src": "1013:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:5",
														"nodeType": "YulTypedName",
														"src": "1025:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:5",
														"nodeType": "YulTypedName",
														"src": "1036:4:5",
														"type": ""
													}
												],
												"src": "923:313:5"
											},
											{
												"body": {
													"nativeSrc": "1282:35:5",
													"nodeType": "YulBlock",
													"src": "1282:35:5",
													"statements": [
														{
															"nativeSrc": "1292:19:5",
															"nodeType": "YulAssignment",
															"src": "1292:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:5"
																},
																"nativeSrc": "1302:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:5",
														"nodeType": "YulTypedName",
														"src": "1275:6:5",
														"type": ""
													}
												],
												"src": "1242:75:5"
											},
											{
												"body": {
													"nativeSrc": "1412:28:5",
													"nodeType": "YulBlock",
													"src": "1412:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:5"
																},
																"nativeSrc": "1422:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:5"
															},
															"nativeSrc": "1422:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:5"
											},
											{
												"body": {
													"nativeSrc": "1535:28:5",
													"nodeType": "YulBlock",
													"src": "1535:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:5"
																},
																"nativeSrc": "1545:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:5"
															},
															"nativeSrc": "1545:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:5"
											},
											{
												"body": {
													"nativeSrc": "1658:28:5",
													"nodeType": "YulBlock",
													"src": "1658:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1675:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1675:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1678:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1678:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1668:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:5"
																},
																"nativeSrc": "1668:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1668:12:5"
															},
															"nativeSrc": "1668:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1668:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1569:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1569:117:5"
											},
											{
												"body": {
													"nativeSrc": "1781:28:5",
													"nodeType": "YulBlock",
													"src": "1781:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1798:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1798:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1801:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1791:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:5"
																},
																"nativeSrc": "1791:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1791:12:5"
															},
															"nativeSrc": "1791:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1791:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1692:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1692:117:5"
											},
											{
												"body": {
													"nativeSrc": "1843:152:5",
													"nodeType": "YulBlock",
													"src": "1843:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1860:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1860:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1863:77:5",
																		"nodeType": "YulLiteral",
																		"src": "1863:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nativeSrc": "1853:88:5",
																"nodeType": "YulFunctionCall",
																"src": "1853:88:5"
															},
															"nativeSrc": "1853:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "1853:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1957:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1960:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1960:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1950:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1950:6:5"
																},
																"nativeSrc": "1950:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1950:15:5"
															},
															"nativeSrc": "1950:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1950:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1981:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1981:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1984:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1984:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1974:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1974:6:5"
																},
																"nativeSrc": "1974:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1974:15:5"
															},
															"nativeSrc": "1974:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1974:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1815:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1815:180:5"
											},
											{
												"body": {
													"nativeSrc": "2044:238:5",
													"nodeType": "YulBlock",
													"src": "2044:238:5",
													"statements": [
														{
															"nativeSrc": "2054:58:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2054:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2076:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2076:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "2106:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2106:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2084:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "2084:21:5"
																		},
																		"nativeSrc": "2084:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2084:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2072:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2072:3:5"
																},
																"nativeSrc": "2072:40:5",
																"nodeType": "YulFunctionCall",
																"src": "2072:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2058:10:5",
																	"nodeType": "YulTypedName",
																	"src": "2058:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2223:22:5",
																"nodeType": "YulBlock",
																"src": "2223:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2225:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2225:16:5"
																			},
																			"nativeSrc": "2225:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2225:18:5"
																		},
																		"nativeSrc": "2225:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2225:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2166:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "2166:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2178:18:5",
																				"nodeType": "YulLiteral",
																				"src": "2178:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2163:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2163:2:5"
																		},
																		"nativeSrc": "2163:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2163:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2202:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "2202:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2214:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2199:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2199:2:5"
																		},
																		"nativeSrc": "2199:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2199:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2160:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2160:2:5"
																},
																"nativeSrc": "2160:62:5",
																"nodeType": "YulFunctionCall",
																"src": "2160:62:5"
															},
															"nativeSrc": "2157:88:5",
															"nodeType": "YulIf",
															"src": "2157:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2261:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2261:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2265:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "2265:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2254:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:5"
																},
																"nativeSrc": "2254:22:5",
																"nodeType": "YulFunctionCall",
																"src": "2254:22:5"
															},
															"nativeSrc": "2254:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "2254:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2001:281:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2030:6:5",
														"nodeType": "YulTypedName",
														"src": "2030:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2038:4:5",
														"nodeType": "YulTypedName",
														"src": "2038:4:5",
														"type": ""
													}
												],
												"src": "2001:281:5"
											},
											{
												"body": {
													"nativeSrc": "2329:88:5",
													"nodeType": "YulBlock",
													"src": "2329:88:5",
													"statements": [
														{
															"nativeSrc": "2339:30:5",
															"nodeType": "YulAssignment",
															"src": "2339:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2349:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2349:18:5"
																},
																"nativeSrc": "2349:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2349:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2339:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2398:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2398:6:5"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2406:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2406:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2378:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "2378:19:5"
																},
																"nativeSrc": "2378:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2378:33:5"
															},
															"nativeSrc": "2378:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2378:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2288:129:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2313:4:5",
														"nodeType": "YulTypedName",
														"src": "2313:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2322:6:5",
														"nodeType": "YulTypedName",
														"src": "2322:6:5",
														"type": ""
													}
												],
												"src": "2288:129:5"
											},
											{
												"body": {
													"nativeSrc": "2490:241:5",
													"nodeType": "YulBlock",
													"src": "2490:241:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2595:22:5",
																"nodeType": "YulBlock",
																"src": "2595:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2597:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2597:16:5"
																			},
																			"nativeSrc": "2597:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2597:18:5"
																		},
																		"nativeSrc": "2597:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2597:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2567:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:18:5",
																		"nodeType": "YulLiteral",
																		"src": "2575:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2564:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2564:2:5"
																},
																"nativeSrc": "2564:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2564:30:5"
															},
															"nativeSrc": "2561:56:5",
															"nodeType": "YulIf",
															"src": "2561:56:5"
														},
														{
															"nativeSrc": "2627:37:5",
															"nodeType": "YulAssignment",
															"src": "2627:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2657:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2657:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2635:21:5",
																	"nodeType": "YulIdentifier",
																	"src": "2635:21:5"
																},
																"nativeSrc": "2635:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2635:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2627:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2627:4:5"
																}
															]
														},
														{
															"nativeSrc": "2701:23:5",
															"nodeType": "YulAssignment",
															"src": "2701:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2713:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2713:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2719:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2719:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2709:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:5"
																},
																"nativeSrc": "2709:15:5",
																"nodeType": "YulFunctionCall",
																"src": "2709:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2701:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2701:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2423:308:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2474:6:5",
														"nodeType": "YulTypedName",
														"src": "2474:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2485:4:5",
														"nodeType": "YulTypedName",
														"src": "2485:4:5",
														"type": ""
													}
												],
												"src": "2423:308:5"
											},
											{
												"body": {
													"nativeSrc": "2801:84:5",
													"nodeType": "YulBlock",
													"src": "2801:84:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2825:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2825:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2830:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2830:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2835:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2835:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2812:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2812:12:5"
																},
																"nativeSrc": "2812:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2812:30:5"
															},
															"nativeSrc": "2812:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "2812:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2862:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2862:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2867:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2867:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2858:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:5"
																		},
																		"nativeSrc": "2858:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2876:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2876:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2851:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:5"
																},
																"nativeSrc": "2851:27:5",
																"nodeType": "YulFunctionCall",
																"src": "2851:27:5"
															},
															"nativeSrc": "2851:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "2851:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2737:148:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2783:3:5",
														"nodeType": "YulTypedName",
														"src": "2783:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2788:3:5",
														"nodeType": "YulTypedName",
														"src": "2788:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2793:6:5",
														"nodeType": "YulTypedName",
														"src": "2793:6:5",
														"type": ""
													}
												],
												"src": "2737:148:5"
											},
											{
												"body": {
													"nativeSrc": "2975:341:5",
													"nodeType": "YulBlock",
													"src": "2975:341:5",
													"statements": [
														{
															"nativeSrc": "2985:75:5",
															"nodeType": "YulAssignment",
															"src": "2985:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3052:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3052:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "3010:41:5",
																			"nodeType": "YulIdentifier",
																			"src": "3010:41:5"
																		},
																		"nativeSrc": "3010:49:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3010:49:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2994:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "2994:15:5"
																},
																"nativeSrc": "2994:66:5",
																"nodeType": "YulFunctionCall",
																"src": "2994:66:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2985:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3076:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3083:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3083:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3069:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:5"
																},
																"nativeSrc": "3069:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3069:21:5"
															},
															"nativeSrc": "3069:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3069:21:5"
														},
														{
															"nativeSrc": "3099:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3099:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3114:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3114:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3121:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3121:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3110:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3110:3:5"
																},
																"nativeSrc": "3110:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3110:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3103:3:5",
																	"nodeType": "YulTypedName",
																	"src": "3103:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3164:83:5",
																"nodeType": "YulBlock",
																"src": "3164:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3166:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3166:77:5"
																			},
																			"nativeSrc": "3166:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3166:79:5"
																		},
																		"nativeSrc": "3166:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3145:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3145:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3150:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3150:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3141:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:5"
																		},
																		"nativeSrc": "3141:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3141:16:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3159:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3138:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3138:2:5"
																},
																"nativeSrc": "3138:25:5",
																"nodeType": "YulFunctionCall",
																"src": "3138:25:5"
															},
															"nativeSrc": "3135:112:5",
															"nodeType": "YulIf",
															"src": "3135:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3293:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3293:3:5"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3298:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3298:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3303:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3303:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "3256:36:5",
																	"nodeType": "YulIdentifier",
																	"src": "3256:36:5"
																},
																"nativeSrc": "3256:54:5",
																"nodeType": "YulFunctionCall",
																"src": "3256:54:5"
															},
															"nativeSrc": "3256:54:5",
															"nodeType": "YulExpressionStatement",
															"src": "3256:54:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "2891:425:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2948:3:5",
														"nodeType": "YulTypedName",
														"src": "2948:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2953:6:5",
														"nodeType": "YulTypedName",
														"src": "2953:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:5",
														"nodeType": "YulTypedName",
														"src": "2961:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2969:5:5",
														"nodeType": "YulTypedName",
														"src": "2969:5:5",
														"type": ""
													}
												],
												"src": "2891:425:5"
											},
											{
												"body": {
													"nativeSrc": "3398:278:5",
													"nodeType": "YulBlock",
													"src": "3398:278:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3447:83:5",
																"nodeType": "YulBlock",
																"src": "3447:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3449:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3449:77:5"
																			},
																			"nativeSrc": "3449:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3449:79:5"
																		},
																		"nativeSrc": "3449:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3449:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3426:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3426:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3434:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3434:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3422:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3422:3:5"
																				},
																				"nativeSrc": "3422:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3422:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3441:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3441:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:5"
																		},
																		"nativeSrc": "3418:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3411:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:5"
																},
																"nativeSrc": "3411:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3411:35:5"
															},
															"nativeSrc": "3408:122:5",
															"nodeType": "YulIf",
															"src": "3408:122:5"
														},
														{
															"nativeSrc": "3539:34:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3539:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3566:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3553:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3553:12:5"
																},
																"nativeSrc": "3553:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3553:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3543:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3543:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3582:88:5",
															"nodeType": "YulAssignment",
															"src": "3582:88:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3643:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3643:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3651:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3651:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3639:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:5"
																		},
																		"nativeSrc": "3639:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3639:17:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3658:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3658:6:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3666:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3666:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "3591:47:5",
																	"nodeType": "YulIdentifier",
																	"src": "3591:47:5"
																},
																"nativeSrc": "3591:79:5",
																"nodeType": "YulFunctionCall",
																"src": "3591:79:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3582:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3582:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "3336:340:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3376:6:5",
														"nodeType": "YulTypedName",
														"src": "3376:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3384:3:5",
														"nodeType": "YulTypedName",
														"src": "3384:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3392:5:5",
														"nodeType": "YulTypedName",
														"src": "3392:5:5",
														"type": ""
													}
												],
												"src": "3336:340:5"
											},
											{
												"body": {
													"nativeSrc": "3727:81:5",
													"nodeType": "YulBlock",
													"src": "3727:81:5",
													"statements": [
														{
															"nativeSrc": "3737:65:5",
															"nodeType": "YulAssignment",
															"src": "3737:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3752:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3752:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3759:42:5",
																		"nodeType": "YulLiteral",
																		"src": "3759:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3748:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3748:3:5"
																},
																"nativeSrc": "3748:54:5",
																"nodeType": "YulFunctionCall",
																"src": "3748:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3737:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3737:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3682:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3709:5:5",
														"nodeType": "YulTypedName",
														"src": "3709:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3719:7:5",
														"nodeType": "YulTypedName",
														"src": "3719:7:5",
														"type": ""
													}
												],
												"src": "3682:126:5"
											},
											{
												"body": {
													"nativeSrc": "3859:51:5",
													"nodeType": "YulBlock",
													"src": "3859:51:5",
													"statements": [
														{
															"nativeSrc": "3869:35:5",
															"nodeType": "YulAssignment",
															"src": "3869:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3898:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3898:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3880:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3880:17:5"
																},
																"nativeSrc": "3880:24:5",
																"nodeType": "YulFunctionCall",
																"src": "3880:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3869:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3869:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3814:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3841:5:5",
														"nodeType": "YulTypedName",
														"src": "3841:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3851:7:5",
														"nodeType": "YulTypedName",
														"src": "3851:7:5",
														"type": ""
													}
												],
												"src": "3814:96:5"
											},
											{
												"body": {
													"nativeSrc": "3959:79:5",
													"nodeType": "YulBlock",
													"src": "3959:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4016:16:5",
																"nodeType": "YulBlock",
																"src": "4016:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4025:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4025:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4028:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4028:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4018:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4018:6:5"
																			},
																			"nativeSrc": "4018:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4018:12:5"
																		},
																		"nativeSrc": "4018:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4018:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3982:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3982:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4007:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4007:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3989:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3989:17:5"
																				},
																				"nativeSrc": "3989:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3989:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3979:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3979:2:5"
																		},
																		"nativeSrc": "3979:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3979:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3972:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3972:6:5"
																},
																"nativeSrc": "3972:43:5",
																"nodeType": "YulFunctionCall",
																"src": "3972:43:5"
															},
															"nativeSrc": "3969:63:5",
															"nodeType": "YulIf",
															"src": "3969:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3916:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3952:5:5",
														"nodeType": "YulTypedName",
														"src": "3952:5:5",
														"type": ""
													}
												],
												"src": "3916:122:5"
											},
											{
												"body": {
													"nativeSrc": "4096:87:5",
													"nodeType": "YulBlock",
													"src": "4096:87:5",
													"statements": [
														{
															"nativeSrc": "4106:29:5",
															"nodeType": "YulAssignment",
															"src": "4106:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4128:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4128:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4115:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4115:12:5"
																},
																"nativeSrc": "4115:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4115:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4106:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4106:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4171:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4171:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4144:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4144:26:5"
																},
																"nativeSrc": "4144:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4144:33:5"
															},
															"nativeSrc": "4144:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4144:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4044:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4074:6:5",
														"nodeType": "YulTypedName",
														"src": "4074:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4082:3:5",
														"nodeType": "YulTypedName",
														"src": "4082:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4090:5:5",
														"nodeType": "YulTypedName",
														"src": "4090:5:5",
														"type": ""
													}
												],
												"src": "4044:139:5"
											},
											{
												"body": {
													"nativeSrc": "4234:32:5",
													"nodeType": "YulBlock",
													"src": "4234:32:5",
													"statements": [
														{
															"nativeSrc": "4244:16:5",
															"nodeType": "YulAssignment",
															"src": "4244:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "4255:5:5",
																"nodeType": "YulIdentifier",
																"src": "4255:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4244:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4244:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4189:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4216:5:5",
														"nodeType": "YulTypedName",
														"src": "4216:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4226:7:5",
														"nodeType": "YulTypedName",
														"src": "4226:7:5",
														"type": ""
													}
												],
												"src": "4189:77:5"
											},
											{
												"body": {
													"nativeSrc": "4315:79:5",
													"nodeType": "YulBlock",
													"src": "4315:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4372:16:5",
																"nodeType": "YulBlock",
																"src": "4372:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4381:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4381:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4384:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4384:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4374:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4374:6:5"
																			},
																			"nativeSrc": "4374:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4374:12:5"
																		},
																		"nativeSrc": "4374:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4374:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4338:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4338:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4363:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4363:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4345:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "4345:17:5"
																				},
																				"nativeSrc": "4345:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4345:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4335:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4335:2:5"
																		},
																		"nativeSrc": "4335:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4335:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4328:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:5"
																},
																"nativeSrc": "4328:43:5",
																"nodeType": "YulFunctionCall",
																"src": "4328:43:5"
															},
															"nativeSrc": "4325:63:5",
															"nodeType": "YulIf",
															"src": "4325:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4272:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4308:5:5",
														"nodeType": "YulTypedName",
														"src": "4308:5:5",
														"type": ""
													}
												],
												"src": "4272:122:5"
											},
											{
												"body": {
													"nativeSrc": "4452:87:5",
													"nodeType": "YulBlock",
													"src": "4452:87:5",
													"statements": [
														{
															"nativeSrc": "4462:29:5",
															"nodeType": "YulAssignment",
															"src": "4462:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4484:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4484:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4471:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4471:12:5"
																},
																"nativeSrc": "4471:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4471:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4462:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4462:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4527:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4527:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4500:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4500:26:5"
																},
																"nativeSrc": "4500:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4500:33:5"
															},
															"nativeSrc": "4500:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4500:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4400:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4430:6:5",
														"nodeType": "YulTypedName",
														"src": "4430:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4438:3:5",
														"nodeType": "YulTypedName",
														"src": "4438:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4446:5:5",
														"nodeType": "YulTypedName",
														"src": "4446:5:5",
														"type": ""
													}
												],
												"src": "4400:139:5"
											},
											{
												"body": {
													"nativeSrc": "4689:947:5",
													"nodeType": "YulBlock",
													"src": "4689:947:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4736:83:5",
																"nodeType": "YulBlock",
																"src": "4736:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4738:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4738:77:5"
																			},
																			"nativeSrc": "4738:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4738:79:5"
																		},
																		"nativeSrc": "4738:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4738:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4710:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4710:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4706:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4706:3:5"
																		},
																		"nativeSrc": "4706:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4706:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4731:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4731:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4702:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:5"
																},
																"nativeSrc": "4702:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4702:33:5"
															},
															"nativeSrc": "4699:120:5",
															"nodeType": "YulIf",
															"src": "4699:120:5"
														},
														{
															"nativeSrc": "4829:287:5",
															"nodeType": "YulBlock",
															"src": "4829:287:5",
															"statements": [
																{
																	"nativeSrc": "4844:45:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4844:45:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4875:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4875:9:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4886:1:5",
																						"nodeType": "YulLiteral",
																						"src": "4886:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4871:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4871:3:5"
																				},
																				"nativeSrc": "4871:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4871:17:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4858:12:5",
																			"nodeType": "YulIdentifier",
																			"src": "4858:12:5"
																		},
																		"nativeSrc": "4858:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4858:31:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4848:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4848:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4936:83:5",
																		"nodeType": "YulBlock",
																		"src": "4936:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4938:77:5",
																						"nodeType": "YulIdentifier",
																						"src": "4938:77:5"
																					},
																					"nativeSrc": "4938:79:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4938:79:5"
																				},
																				"nativeSrc": "4938:79:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4938:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4908:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4908:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4916:18:5",
																				"nodeType": "YulLiteral",
																				"src": "4916:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4905:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4905:2:5"
																		},
																		"nativeSrc": "4905:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4905:30:5"
																	},
																	"nativeSrc": "4902:117:5",
																	"nodeType": "YulIf",
																	"src": "4902:117:5"
																},
																{
																	"nativeSrc": "5033:73:5",
																	"nodeType": "YulAssignment",
																	"src": "5033:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5078:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5078:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5089:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5089:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5074:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5074:3:5"
																				},
																				"nativeSrc": "5074:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5074:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5098:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5098:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5043:30:5",
																			"nodeType": "YulIdentifier",
																			"src": "5043:30:5"
																		},
																		"nativeSrc": "5043:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5043:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5033:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5033:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5126:118:5",
															"nodeType": "YulBlock",
															"src": "5126:118:5",
															"statements": [
																{
																	"nativeSrc": "5141:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5141:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5155:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5155:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5145:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5145:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5171:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5171:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5206:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5206:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5217:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5217:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5202:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5202:3:5"
																				},
																				"nativeSrc": "5202:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5202:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5226:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5226:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5181:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5181:20:5"
																		},
																		"nativeSrc": "5181:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5171:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5171:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5254:118:5",
															"nodeType": "YulBlock",
															"src": "5254:118:5",
															"statements": [
																{
																	"nativeSrc": "5269:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5269:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5283:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5283:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5273:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5273:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5299:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5299:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5334:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5334:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5345:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5345:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5330:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5330:3:5"
																				},
																				"nativeSrc": "5330:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5330:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5354:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5354:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5309:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5309:20:5"
																		},
																		"nativeSrc": "5309:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5309:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5299:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5299:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5382:118:5",
															"nodeType": "YulBlock",
															"src": "5382:118:5",
															"statements": [
																{
																	"nativeSrc": "5397:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5397:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5411:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5411:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5401:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5401:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5427:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5427:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5462:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5462:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5473:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5473:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5458:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5458:3:5"
																				},
																				"nativeSrc": "5458:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5458:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5482:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5482:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5437:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5437:20:5"
																		},
																		"nativeSrc": "5437:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5437:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5427:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5427:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5510:119:5",
															"nodeType": "YulBlock",
															"src": "5510:119:5",
															"statements": [
																{
																	"nativeSrc": "5525:17:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5525:17:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5539:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5539:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5529:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5529:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5556:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5556:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5591:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5591:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5602:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5602:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5587:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5587:3:5"
																				},
																				"nativeSrc": "5587:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5587:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5611:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5611:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5566:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5566:20:5"
																		},
																		"nativeSrc": "5566:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5566:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5556:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5556:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_addresst_addresst_uint256t_uint256",
												"nativeSrc": "4545:1091:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4627:9:5",
														"nodeType": "YulTypedName",
														"src": "4627:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4638:7:5",
														"nodeType": "YulTypedName",
														"src": "4638:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4650:6:5",
														"nodeType": "YulTypedName",
														"src": "4650:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4658:6:5",
														"nodeType": "YulTypedName",
														"src": "4658:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4666:6:5",
														"nodeType": "YulTypedName",
														"src": "4666:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4674:6:5",
														"nodeType": "YulTypedName",
														"src": "4674:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4682:6:5",
														"nodeType": "YulTypedName",
														"src": "4682:6:5",
														"type": ""
													}
												],
												"src": "4545:1091:5"
											},
											{
												"body": {
													"nativeSrc": "5707:53:5",
													"nodeType": "YulBlock",
													"src": "5707:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5724:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5724:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5747:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5747:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5729:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5729:17:5"
																		},
																		"nativeSrc": "5729:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5729:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5717:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:5"
																},
																"nativeSrc": "5717:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5717:37:5"
															},
															"nativeSrc": "5717:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5717:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5642:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5695:5:5",
														"nodeType": "YulTypedName",
														"src": "5695:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5702:3:5",
														"nodeType": "YulTypedName",
														"src": "5702:3:5",
														"type": ""
													}
												],
												"src": "5642:118:5"
											},
											{
												"body": {
													"nativeSrc": "5864:124:5",
													"nodeType": "YulBlock",
													"src": "5864:124:5",
													"statements": [
														{
															"nativeSrc": "5874:26:5",
															"nodeType": "YulAssignment",
															"src": "5874:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5886:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5886:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5897:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5897:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5882:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5882:3:5"
																},
																"nativeSrc": "5882:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5882:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5874:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5874:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5954:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5954:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5967:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5978:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5978:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5963:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5963:3:5"
																		},
																		"nativeSrc": "5963:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5963:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5910:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5910:43:5"
																},
																"nativeSrc": "5910:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5910:71:5"
															},
															"nativeSrc": "5910:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5910:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5766:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5836:9:5",
														"nodeType": "YulTypedName",
														"src": "5836:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5848:6:5",
														"nodeType": "YulTypedName",
														"src": "5848:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5859:4:5",
														"nodeType": "YulTypedName",
														"src": "5859:4:5",
														"type": ""
													}
												],
												"src": "5766:222:5"
											},
											{
												"body": {
													"nativeSrc": "6108:34:5",
													"nodeType": "YulBlock",
													"src": "6108:34:5",
													"statements": [
														{
															"nativeSrc": "6118:18:5",
															"nodeType": "YulAssignment",
															"src": "6118:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "6133:3:5",
																"nodeType": "YulIdentifier",
																"src": "6133:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6118:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6118:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5994:148:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6080:3:5",
														"nodeType": "YulTypedName",
														"src": "6080:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6085:6:5",
														"nodeType": "YulTypedName",
														"src": "6085:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6096:11:5",
														"nodeType": "YulTypedName",
														"src": "6096:11:5",
														"type": ""
													}
												],
												"src": "5994:148:5"
											},
											{
												"body": {
													"nativeSrc": "6258:280:5",
													"nodeType": "YulBlock",
													"src": "6258:280:5",
													"statements": [
														{
															"nativeSrc": "6268:53:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6268:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6315:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6315:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6282:32:5",
																	"nodeType": "YulIdentifier",
																	"src": "6282:32:5"
																},
																"nativeSrc": "6282:39:5",
																"nodeType": "YulFunctionCall",
																"src": "6282:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6272:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6272:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6330:96:5",
															"nodeType": "YulAssignment",
															"src": "6330:96:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6414:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6414:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6419:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6419:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6337:76:5",
																	"nodeType": "YulIdentifier",
																	"src": "6337:76:5"
																},
																"nativeSrc": "6337:89:5",
																"nodeType": "YulFunctionCall",
																"src": "6337:89:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6330:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6474:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6474:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6481:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6481:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6470:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6470:3:5"
																		},
																		"nativeSrc": "6470:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6470:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6488:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6488:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6493:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6493:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6435:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "6435:34:5"
																},
																"nativeSrc": "6435:65:5",
																"nodeType": "YulFunctionCall",
																"src": "6435:65:5"
															},
															"nativeSrc": "6435:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "6435:65:5"
														},
														{
															"nativeSrc": "6509:23:5",
															"nodeType": "YulAssignment",
															"src": "6509:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6520:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6520:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6525:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6525:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6516:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6516:3:5"
																},
																"nativeSrc": "6516:16:5",
																"nodeType": "YulFunctionCall",
																"src": "6516:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6509:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6509:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6148:390:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6239:5:5",
														"nodeType": "YulTypedName",
														"src": "6239:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6246:3:5",
														"nodeType": "YulTypedName",
														"src": "6246:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6254:3:5",
														"nodeType": "YulTypedName",
														"src": "6254:3:5",
														"type": ""
													}
												],
												"src": "6148:390:5"
											},
											{
												"body": {
													"nativeSrc": "7016:923:5",
													"nodeType": "YulBlock",
													"src": "7016:923:5",
													"statements": [
														{
															"nativeSrc": "7027:102:5",
															"nodeType": "YulAssignment",
															"src": "7027:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7116:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7116:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7125:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7125:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7034:81:5",
																	"nodeType": "YulIdentifier",
																	"src": "7034:81:5"
																},
																"nativeSrc": "7034:95:5",
																"nodeType": "YulFunctionCall",
																"src": "7034:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7027:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7027:3:5"
																}
															]
														},
														{
															"nativeSrc": "7139:102:5",
															"nodeType": "YulAssignment",
															"src": "7139:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7228:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7228:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7237:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7237:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7146:81:5",
																	"nodeType": "YulIdentifier",
																	"src": "7146:81:5"
																},
																"nativeSrc": "7146:95:5",
																"nodeType": "YulFunctionCall",
																"src": "7146:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7139:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7139:3:5"
																}
															]
														},
														{
															"nativeSrc": "7251:102:5",
															"nodeType": "YulAssignment",
															"src": "7251:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7340:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7340:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7349:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7349:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7258:81:5",
																	"nodeType": "YulIdentifier",
																	"src": "7258:81:5"
																},
																"nativeSrc": "7258:95:5",
																"nodeType": "YulFunctionCall",
																"src": "7258:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7251:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7251:3:5"
																}
															]
														},
														{
															"nativeSrc": "7363:102:5",
															"nodeType": "YulAssignment",
															"src": "7363:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7452:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7452:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7461:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7461:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7370:81:5",
																	"nodeType": "YulIdentifier",
																	"src": "7370:81:5"
																},
																"nativeSrc": "7370:95:5",
																"nodeType": "YulFunctionCall",
																"src": "7370:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7363:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7363:3:5"
																}
															]
														},
														{
															"nativeSrc": "7475:102:5",
															"nodeType": "YulAssignment",
															"src": "7475:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "7564:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7564:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7573:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7573:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7482:81:5",
																	"nodeType": "YulIdentifier",
																	"src": "7482:81:5"
																},
																"nativeSrc": "7482:95:5",
																"nodeType": "YulFunctionCall",
																"src": "7482:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7475:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7475:3:5"
																}
															]
														},
														{
															"nativeSrc": "7587:102:5",
															"nodeType": "YulAssignment",
															"src": "7587:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "7676:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7676:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7685:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7685:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7594:81:5",
																	"nodeType": "YulIdentifier",
																	"src": "7594:81:5"
																},
																"nativeSrc": "7594:95:5",
																"nodeType": "YulFunctionCall",
																"src": "7594:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7587:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7587:3:5"
																}
															]
														},
														{
															"nativeSrc": "7699:102:5",
															"nodeType": "YulAssignment",
															"src": "7699:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "7788:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7788:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7797:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7797:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7706:81:5",
																	"nodeType": "YulIdentifier",
																	"src": "7706:81:5"
																},
																"nativeSrc": "7706:95:5",
																"nodeType": "YulFunctionCall",
																"src": "7706:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7699:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7699:3:5"
																}
															]
														},
														{
															"nativeSrc": "7811:102:5",
															"nodeType": "YulAssignment",
															"src": "7811:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "7900:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7900:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7909:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7909:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7818:81:5",
																	"nodeType": "YulIdentifier",
																	"src": "7818:81:5"
																},
																"nativeSrc": "7818:95:5",
																"nodeType": "YulFunctionCall",
																"src": "7818:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7811:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7811:3:5"
																}
															]
														},
														{
															"nativeSrc": "7923:10:5",
															"nodeType": "YulAssignment",
															"src": "7923:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7930:3:5",
																"nodeType": "YulIdentifier",
																"src": "7930:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7923:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7923:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6544:1395:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6939:3:5",
														"nodeType": "YulTypedName",
														"src": "6939:3:5",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "6945:6:5",
														"nodeType": "YulTypedName",
														"src": "6945:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6953:6:5",
														"nodeType": "YulTypedName",
														"src": "6953:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6961:6:5",
														"nodeType": "YulTypedName",
														"src": "6961:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6969:6:5",
														"nodeType": "YulTypedName",
														"src": "6969:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6977:6:5",
														"nodeType": "YulTypedName",
														"src": "6977:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6985:6:5",
														"nodeType": "YulTypedName",
														"src": "6985:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6993:6:5",
														"nodeType": "YulTypedName",
														"src": "6993:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7001:6:5",
														"nodeType": "YulTypedName",
														"src": "7001:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7012:3:5",
														"nodeType": "YulTypedName",
														"src": "7012:3:5",
														"type": ""
													}
												],
												"src": "6544:1395:5"
											},
											{
												"body": {
													"nativeSrc": "7973:152:5",
													"nodeType": "YulBlock",
													"src": "7973:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7990:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7990:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7993:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7993:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7983:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:5"
																},
																"nativeSrc": "7983:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7983:88:5"
															},
															"nativeSrc": "7983:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7983:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8087:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8087:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8090:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8090:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8080:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:5"
																},
																"nativeSrc": "8080:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8080:15:5"
															},
															"nativeSrc": "8080:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8080:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8111:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8111:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8114:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8114:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8104:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8104:6:5"
																},
																"nativeSrc": "8104:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8104:15:5"
															},
															"nativeSrc": "8104:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8104:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7945:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7945:180:5"
											},
											{
												"body": {
													"nativeSrc": "8159:152:5",
													"nodeType": "YulBlock",
													"src": "8159:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8176:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8176:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8179:77:5",
																		"nodeType": "YulLiteral",
																		"src": "8179:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8169:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:5"
																},
																"nativeSrc": "8169:88:5",
																"nodeType": "YulFunctionCall",
																"src": "8169:88:5"
															},
															"nativeSrc": "8169:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "8169:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8273:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8273:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8276:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8276:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8266:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8266:6:5"
																},
																"nativeSrc": "8266:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8266:15:5"
															},
															"nativeSrc": "8266:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8266:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8297:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8297:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8300:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8300:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8290:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:5"
																},
																"nativeSrc": "8290:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8290:15:5"
															},
															"nativeSrc": "8290:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8290:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8131:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8131:180:5"
											},
											{
												"body": {
													"nativeSrc": "8365:362:5",
													"nodeType": "YulBlock",
													"src": "8365:362:5",
													"statements": [
														{
															"nativeSrc": "8375:25:5",
															"nodeType": "YulAssignment",
															"src": "8375:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8398:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8398:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8380:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8380:17:5"
																},
																"nativeSrc": "8380:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8380:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8375:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8375:1:5"
																}
															]
														},
														{
															"nativeSrc": "8409:25:5",
															"nodeType": "YulAssignment",
															"src": "8409:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8432:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8432:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8414:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8414:17:5"
																},
																"nativeSrc": "8414:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8414:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8409:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8409:1:5"
																}
															]
														},
														{
															"nativeSrc": "8443:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8443:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8466:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8466:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8469:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8469:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8462:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8462:3:5"
																},
																"nativeSrc": "8462:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8462:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8447:11:5",
																	"nodeType": "YulTypedName",
																	"src": "8447:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8480:41:5",
															"nodeType": "YulAssignment",
															"src": "8480:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8509:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "8509:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8491:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8491:17:5"
																},
																"nativeSrc": "8491:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8491:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8480:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "8480:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8698:22:5",
																"nodeType": "YulBlock",
																"src": "8698:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8700:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8700:16:5"
																			},
																			"nativeSrc": "8700:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8700:18:5"
																		},
																		"nativeSrc": "8700:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8700:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8631:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "8631:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8624:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "8624:6:5"
																				},
																				"nativeSrc": "8624:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8624:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8654:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "8654:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8661:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "8661:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8670:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "8670:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8657:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8657:3:5"
																						},
																						"nativeSrc": "8657:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "8657:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8651:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "8651:2:5"
																				},
																				"nativeSrc": "8651:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8651:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8604:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "8604:2:5"
																		},
																		"nativeSrc": "8604:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8604:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8584:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8584:6:5"
																},
																"nativeSrc": "8584:113:5",
																"nodeType": "YulFunctionCall",
																"src": "8584:113:5"
															},
															"nativeSrc": "8581:139:5",
															"nodeType": "YulIf",
															"src": "8581:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8317:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8348:1:5",
														"nodeType": "YulTypedName",
														"src": "8348:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8351:1:5",
														"nodeType": "YulTypedName",
														"src": "8351:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8357:7:5",
														"nodeType": "YulTypedName",
														"src": "8357:7:5",
														"type": ""
													}
												],
												"src": "8317:410:5"
											},
											{
												"body": {
													"nativeSrc": "8777:147:5",
													"nodeType": "YulBlock",
													"src": "8777:147:5",
													"statements": [
														{
															"nativeSrc": "8787:25:5",
															"nodeType": "YulAssignment",
															"src": "8787:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8810:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8810:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8792:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8792:17:5"
																},
																"nativeSrc": "8792:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8792:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8787:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8787:1:5"
																}
															]
														},
														{
															"nativeSrc": "8821:25:5",
															"nodeType": "YulAssignment",
															"src": "8821:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8844:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8844:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8826:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8826:17:5"
																},
																"nativeSrc": "8826:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8826:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8821:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8821:1:5"
																}
															]
														},
														{
															"nativeSrc": "8855:16:5",
															"nodeType": "YulAssignment",
															"src": "8855:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8866:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8866:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8869:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8869:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8862:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8862:3:5"
																},
																"nativeSrc": "8862:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8862:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8855:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8855:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8895:22:5",
																"nodeType": "YulBlock",
																"src": "8895:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8897:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8897:16:5"
																			},
																			"nativeSrc": "8897:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8897:18:5"
																		},
																		"nativeSrc": "8897:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8897:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8887:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8887:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8890:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8890:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8884:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8884:2:5"
																},
																"nativeSrc": "8884:10:5",
																"nodeType": "YulFunctionCall",
																"src": "8884:10:5"
															},
															"nativeSrc": "8881:36:5",
															"nodeType": "YulIf",
															"src": "8881:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8733:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8764:1:5",
														"nodeType": "YulTypedName",
														"src": "8764:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8767:1:5",
														"nodeType": "YulTypedName",
														"src": "8767:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8773:3:5",
														"nodeType": "YulTypedName",
														"src": "8773:3:5",
														"type": ""
													}
												],
												"src": "8733:191:5"
											},
											{
												"body": {
													"nativeSrc": "8958:152:5",
													"nodeType": "YulBlock",
													"src": "8958:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8975:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8975:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8978:77:5",
																		"nodeType": "YulLiteral",
																		"src": "8978:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8968:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8968:6:5"
																},
																"nativeSrc": "8968:88:5",
																"nodeType": "YulFunctionCall",
																"src": "8968:88:5"
															},
															"nativeSrc": "8968:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "8968:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9072:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9072:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9075:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9075:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9065:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9065:6:5"
																},
																"nativeSrc": "9065:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9065:15:5"
															},
															"nativeSrc": "9065:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9065:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9096:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9096:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9099:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9099:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9089:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:5"
																},
																"nativeSrc": "9089:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9089:15:5"
															},
															"nativeSrc": "9089:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9089:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8930:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8930:180:5"
											},
											{
												"body": {
													"nativeSrc": "9159:128:5",
													"nodeType": "YulBlock",
													"src": "9159:128:5",
													"statements": [
														{
															"nativeSrc": "9169:33:5",
															"nodeType": "YulAssignment",
															"src": "9169:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9196:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9196:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9178:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9178:17:5"
																},
																"nativeSrc": "9178:24:5",
																"nodeType": "YulFunctionCall",
																"src": "9178:24:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9169:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9169:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9230:22:5",
																"nodeType": "YulBlock",
																"src": "9230:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9232:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9232:16:5"
																			},
																			"nativeSrc": "9232:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9232:18:5"
																		},
																		"nativeSrc": "9232:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9232:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9217:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9217:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9224:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9224:4:5",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9214:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9214:2:5"
																},
																"nativeSrc": "9214:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9214:15:5"
															},
															"nativeSrc": "9211:41:5",
															"nodeType": "YulIf",
															"src": "9211:41:5"
														},
														{
															"nativeSrc": "9261:20:5",
															"nodeType": "YulAssignment",
															"src": "9261:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9272:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9272:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9279:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9279:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9268:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9268:3:5"
																},
																"nativeSrc": "9268:13:5",
																"nodeType": "YulFunctionCall",
																"src": "9268:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9261:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9261:3:5"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "9116:171:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9145:5:5",
														"nodeType": "YulTypedName",
														"src": "9145:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9155:3:5",
														"nodeType": "YulTypedName",
														"src": "9155:3:5",
														"type": ""
													}
												],
												"src": "9116:171:5"
											},
											{
												"body": {
													"nativeSrc": "9419:206:5",
													"nodeType": "YulBlock",
													"src": "9419:206:5",
													"statements": [
														{
															"nativeSrc": "9429:26:5",
															"nodeType": "YulAssignment",
															"src": "9429:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9441:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9441:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9452:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9452:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9437:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9437:3:5"
																},
																"nativeSrc": "9437:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9437:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9429:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9429:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9509:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9509:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9522:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9522:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9533:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9533:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9518:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9518:3:5"
																		},
																		"nativeSrc": "9518:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9518:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9465:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9465:43:5"
																},
																"nativeSrc": "9465:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9465:71:5"
															},
															"nativeSrc": "9465:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9465:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9590:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9590:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9603:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9603:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9614:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9614:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9599:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9599:3:5"
																		},
																		"nativeSrc": "9599:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9599:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9546:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9546:43:5"
																},
																"nativeSrc": "9546:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9546:72:5"
															},
															"nativeSrc": "9546:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9546:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9293:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9383:9:5",
														"nodeType": "YulTypedName",
														"src": "9383:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9395:6:5",
														"nodeType": "YulTypedName",
														"src": "9395:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9403:6:5",
														"nodeType": "YulTypedName",
														"src": "9403:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9414:4:5",
														"nodeType": "YulTypedName",
														"src": "9414:4:5",
														"type": ""
													}
												],
												"src": "9293:332:5"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value7, value6, value5, value4, value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value4,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value5,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value6,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value7,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x321C48F2 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x483CED98 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x7DB3A946 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBFE PUSH1 0x42 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x860 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x830 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1411 PUSH2 0x830 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x160 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC40 PUSH2 0x160 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x6A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x671 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA0 PUSH2 0x671 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xA2D204C6963656E7365653A2000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xA2D205369676E696E6720446174653A20000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP DUP4 DUP11 DUP5 PUSH2 0x202 DUP13 PUSH2 0x26E JUMP JUMPDEST DUP6 PUSH2 0x20C DUP14 PUSH2 0x26E JUMP JUMPDEST DUP7 PUSH2 0x216 DUP14 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22D SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x860 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x830 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1411 PUSH2 0x830 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x294 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x2A9 DUP5 PUSH2 0x5A3 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C7 JUMPI PUSH2 0x2C6 PUSH2 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x35A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x34F JUMPI PUSH2 0x34E PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x306 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 SWAP1 POP PUSH0 PUSH1 0x2 DUP5 PUSH1 0x2 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x385 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39E JUMPI PUSH2 0x39D PUSH2 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x407 JUMPI PUSH2 0x406 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP6 PUSH1 0x2 PUSH2 0x4A8 SWAP2 SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x551 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP5 AND PUSH1 0x10 DUP2 LT PUSH2 0x4F4 JUMPI PUSH2 0x4F3 PUSH2 0xB82 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x50B JUMPI PUSH2 0x50A PUSH2 0xB82 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP DUP1 PUSH2 0x54A SWAP1 PUSH2 0xBAF JUMP JUMPDEST SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST POP PUSH0 DUP3 EQ PUSH2 0x598 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE22E27EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP3 SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x5FF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x5F5 JUMPI PUSH2 0x5F4 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x63C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x632 JUMPI PUSH2 0x631 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x66B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x694 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x6B9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x6AF JUMPI PUSH2 0x6AE PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x6DC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6EB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x736 DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x740 DUP2 DUP6 PUSH2 0x6FE JUMP JUMPDEST SWAP4 POP PUSH2 0x750 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x70E JUMP JUMPDEST PUSH2 0x759 DUP2 PUSH2 0x71C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x77C DUP2 DUP5 PUSH2 0x72C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x7D3 DUP3 PUSH2 0x71C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x79D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x804 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP PUSH2 0x810 DUP3 DUP3 PUSH2 0x7CA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x82F JUMPI PUSH2 0x82E PUSH2 0x79D JUMP JUMPDEST JUMPDEST PUSH2 0x838 DUP3 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x865 PUSH2 0x860 DUP5 PUSH2 0x815 JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x881 JUMPI PUSH2 0x880 PUSH2 0x799 JUMP JUMPDEST JUMPDEST PUSH2 0x88C DUP5 DUP3 DUP6 PUSH2 0x845 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8A8 JUMPI PUSH2 0x8A7 PUSH2 0x795 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8B8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x853 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8EA DUP3 PUSH2 0x8C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x904 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x915 DUP2 PUSH2 0x8F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92D DUP2 PUSH2 0x91B JUMP JUMPDEST DUP2 EQ PUSH2 0x937 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x948 DUP2 PUSH2 0x924 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x78D JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x984 JUMPI PUSH2 0x983 PUSH2 0x791 JUMP JUMPDEST JUMPDEST PUSH2 0x990 DUP9 DUP3 DUP10 ADD PUSH2 0x894 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9A1 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9B2 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x9C3 DUP9 DUP3 DUP10 ADD PUSH2 0x93A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x9D4 DUP9 DUP3 DUP10 ADD PUSH2 0x93A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x9EA DUP2 PUSH2 0x91B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA03 PUSH0 DUP4 ADD DUP5 PUSH2 0x9E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0xA27 DUP2 DUP6 PUSH2 0xA09 JUMP JUMPDEST SWAP4 POP PUSH2 0xA37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x70E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA4E DUP3 DUP12 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA5A DUP3 DUP11 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA66 DUP3 DUP10 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA72 DUP3 DUP9 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA7E DUP3 DUP8 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA8A DUP3 DUP7 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xA96 DUP3 DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA2 DUP3 DUP5 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB18 DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH2 0xB23 DUP4 PUSH2 0x91B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB31 DUP2 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB59 DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH2 0xB64 DUP4 PUSH2 0x91B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBB9 DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xBCB JUMPI PUSH2 0xBCA PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBE9 PUSH0 DUP4 ADD DUP6 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0xBF6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID NUMBER PUSH19 0x65617469766520436F6D6D6F6E732041747472 PUSH10 0x627574696F6E20342E30 KECCAK256 BLOBHASH PUSH15 0x7465726E6174696F6E616C204C6963 PUSH6 0x6E7365202843 NUMBER KECCAK256 TIMESTAMP MSIZE KECCAK256 CALLVALUE 0x2E ADDRESS 0x29 0x4C PUSH10 0x63656E73696E67204167 PUSH19 0x65656D656E740A0A54686973204C6963656E73 PUSH6 0x204167726565 PUSH14 0x656E7420282241677265656D656E PUSH21 0x222920697320656E746572656420696E746F206279 KECCAK256 PUSH2 0x6E64 KECCAK256 PUSH3 0x657477 PUSH6 0x656E3A0A2D20 0x4C PUSH10 0x63656E736F723A205468 PUSH6 0x20696E646976 PUSH10 0x6475616C206F7220656E PUSH21 0x697479207468617420686F6C64732074686520636F PUSH17 0x79726967687420666F7220746865207669 PUSH5 0x656F206964 PUSH6 0x6E7469666965 PUSH5 0x2062656C6F PUSH24 0x2028224C6963656E736F7222292E0A2D204C6963656E7365 PUSH6 0x3A2054686520 PUSH10 0x6E646976696475616C20 PUSH16 0x7220656E746974792074686174207769 PUSH13 0x6C2075736520746865206C6963 PUSH6 0x6E736564206D PUSH2 0x7465 PUSH19 0x69616C20756E64657220746865207465726D73 KECCAK256 PUSH16 0x6620746869732041677265656D656E74 KECCAK256 0x28 0x22 0x4C PUSH10 0x63656E73656522292E0A EXP BALANCE 0x2E KECCAK256 0x4C PUSH10 0x63656E736564204D6174 PUSH6 0x7269616C0A2D KECCAK256 JUMP PUSH10 0x64656F2049443A200A54 PUSH9 0x69732041677265656D PUSH6 0x6E7420617070 PUSH13 0x69657320746F20746865207669 PUSH5 0x656F206964 PUSH6 0x6E7469666965 PUSH5 0x2062792074 PUSH9 0x6520566964656F2049 PREVRANDAO KECCAK256 PUSH13 0x69737465642061626F76652C20 PUSH2 0x7320 PUSH9 0x6F73746564206F6E20 MSIZE PUSH16 0x7554756265206F7220616E79206F7468 PUSH6 0x7220706C6174 PUSH7 0x6F726D2E0A0A32 0x2E KECCAK256 0x4C PUSH10 0x63656E7365204772616E PUSH21 0xA546865204C6963656E736F722068657265627920 PUSH8 0x72616E7473207468 PUSH6 0x204C6963656E PUSH20 0x65652061206E6F6E2D6578636C75736976652C20 PUSH24 0x6F726C64776964652C20726F79616C74792D66726565206C PUSH10 0x63656E736520746F3A0A 0x2D KECCAK256 MSTORE8 PUSH9 0x6172652028636F7079 KECCAK256 PUSH2 0x6E64 KECCAK256 PUSH19 0x656469737472696275746520746865206D6174 PUSH6 0x7269616C2069 PUSH15 0x20616E79206D656469756D206F7220 PUSH7 0x6F726D6174290A 0x2D KECCAK256 COINBASE PUSH5 0x6170742028 PUSH19 0x656D69782C207472616E73666F726D2C20616E PUSH5 0x206275696C PUSH5 0x2075706F6E KECCAK256 PUSH21 0x6865206D6174657269616C20666F7220616E792070 PUSH22 0x72706F73652C206576656E20636F6D6D65726369616C PUSH13 0x79290A556E6465722074686520 PUSH21 0x65726D73206F6620746869732041677265656D656E PUSH21 0x2C2070726F766964656420746861743A0A2D205468 PUSH6 0x204C6963656E PUSH20 0x6565206D757374206769766520617070726F7072 PUSH10 0x61746520637265646974 KECCAK256 PUSH21 0x6F20746865204C6963656E736F722C2070726F7669 PUSH5 0x652061206C PUSH10 0x6E6B20746F2074686520 PUSH13 0x6963656E73652C20616E642069 PUSH15 0x646963617465206966206368616E67 PUSH6 0x732077657265 KECCAK256 PUSH14 0x6164652E20546865204C6963656E PUSH20 0x6565206D617920646F20736F20696E20616E7920 PUSH19 0x6561736F6E61626C65206D616E6E65722C2062 PUSH22 0x74206E6F7420696E20616E7920776179207468617420 PUSH20 0x7567676573747320746865204C6963656E736F72 KECCAK256 PUSH6 0x6E646F727365 PUSH20 0x20746865204C6963656E736565206F7220746865 KECCAK256 PUSH22 0x7365206F6620746865206D6174657269616C2E0A0A33 0x2E KECCAK256 0x4C PUSH10 0x63656E73652044757261 PUSH21 0x696F6E0A2D204C6963656E7365204475726174696F PUSH15 0x3A2056616C696420666F722061206C PUSH10 0x666574696D650A546869 PUSH20 0x2041677265656D656E7420697320656666656374 PUSH10 0x766520666F7220746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E207370656369666965642061626F76 PUSH6 0x2C2073746172 PUSH21 0x696E672066726F6D20746865205369676E696E6720 PREVRANDAO PUSH2 0x7465 0x2E EXP EXP CALLVALUE 0x2E KECCAK256 COINBASE PUSH21 0x747269627574696F6E20526571756972656D656E74 PUSH20 0xA546865204C6963656E736565206D7573742067 PUSH10 0x766520617070726F7072 PUSH10 0x61746520637265646974 KECCAK256 PUSH21 0x6F20746865204C6963656E736F722C20617320666F PUSH13 0x6C6F77733A0A2D2050726F7669 PUSH5 0x6520746865 KECCAK256 PUSH24 0x616C6C65742061646472657373206F6620746865204C6963 PUSH6 0x6E736F722E0A 0x2D KECCAK256 POP PUSH19 0x6F766964652061206C696E6B20746F20746865 KECCAK256 PUSH23 0x6964656F2E0A2D2050726F766964652061206C696E6B20 PUSH21 0x6F2074686973206C6963656E73652E0A2D20496E64 PUSH10 0x63617465206966206368 PUSH2 0x6E67 PUSH6 0x732077657265 KECCAK256 PUSH14 0x61646520746F20746865206F7269 PUSH8 0x696E616C206D6174 PUSH6 0x7269616C2E0A EXP CALLDATALOAD 0x2E KECCAK256 0x4E PUSH16 0x204164646974696F6E616C2052657374 PUSH19 0x696374696F6E730A546865204C6963656E7365 PUSH6 0x206D6179206E PUSH16 0x74206170706C79206C6567616C207465 PUSH19 0x6D73206F7220746563686E6F6C6F676963616C KECCAK256 PUSH14 0x656173757265732074686174206C PUSH6 0x67616C6C7920 PUSH19 0x65737472696374206F74686572732066726F6D KECCAK256 PUSH5 0x6F696E6720 PUSH2 0x6E79 PUSH21 0x68696E6720746865206C6963656E7365207065726D PUSH10 0x74732E0A0A362E205465 PUSH19 0x6D696E6174696F6E0A54686973204167726565 PUSH14 0x656E742077696C6C206175746F6D PUSH2 0x7469 PUSH4 0x616C6C79 KECCAK256 PUSH21 0x65726D696E61746520696620746865204C6963656E PUSH20 0x6565206661696C7320746F20636F6D706C792077 PUSH10 0x74682074686520746572 PUSH14 0x732068657265696E2E20486F7765 PUSH23 0x65722C20746865206C6963656E73652077696C6C206E6F PUSH21 0x207465726D696E617465206173206120726573756C PUSH21 0x206F66206D696E6F7220616E6420726561736F6E61 PUSH3 0x6C6520 PUSH5 0x6576696174 PUSH10 0x6F6E7320746861742064 PUSH16 0x206E6F742066756E64616D656E74616C PUSH13 0x79206166666563742074686520 PUSH21 0x65726D73206F66207468652041677265656D656E74 0x2E EXP EXP CALLDATACOPY 0x2E KECCAK256 MSTORE8 PUSH10 0x676E6174757265730A54 PUSH9 0x69732041677265656D PUSH6 0x6E7420697320 PUSH6 0x786563757465 PUSH5 0x2062792074 PUSH9 0x6520666F6C6C6F7769 PUSH15 0x6720706172746965733A0A2D204C69 PUSH4 0x656E736F PUSH19 0x3A204C6963656E73696E672041677265656D65 PUSH15 0x740A0A54686973204C6963656E7365 KECCAK256 COINBASE PUSH8 0x7265656D656E7420 0x28 0x22 COINBASE PUSH8 0x7265656D656E7422 0x29 KECCAK256 PUSH10 0x7320656E746572656420 PUSH10 0x6E746F20627920616E64 KECCAK256 PUSH3 0x657477 PUSH6 0x656E3A0A2D20 0x4C PUSH10 0x63656E736F723A205468 PUSH6 0x20696E646976 PUSH10 0x6475616C206F7220656E PUSH21 0x697479207468617420686F6C64732074686520636F PUSH17 0x79726967687420666F7220746865207669 PUSH5 0x656F206964 PUSH6 0x6E7469666965 PUSH5 0x2062656C6F PUSH24 0x2028224C6963656E736F7222292E0A2D204C6963656E7365 PUSH6 0x3A2054686520 PUSH10 0x6E646976696475616C20 PUSH16 0x7220656E746974792074686174207769 PUSH13 0x6C2075736520746865206C6963 PUSH6 0x6E736564206D PUSH2 0x7465 PUSH19 0x69616C20756E64657220746865207465726D73 KECCAK256 PUSH16 0x6620746869732041677265656D656E74 KECCAK256 0x28 0x22 0x4C PUSH10 0x63656E73656522292E0A EXP BALANCE 0x2E KECCAK256 0x4C PUSH10 0x63656E736564204D6174 PUSH6 0x7269616C0A2D KECCAK256 JUMP PUSH10 0x64656F2049443A205B76 PUSH10 0x64656F2069645D0A5468 PUSH10 0x732041677265656D656E PUSH21 0x206170706C69657320746F2074686520766964656F KECCAK256 PUSH10 0x64656E74696669656420 PUSH3 0x792074 PUSH9 0x6520566964656F2049 PREVRANDAO KECCAK256 PUSH13 0x69737465642061626F76652C20 PUSH2 0x7320 PUSH9 0x6F73746564206F6E20 MSIZE PUSH16 0x7554756265206F7220616E79206F7468 PUSH6 0x7220706C6174 PUSH7 0x6F726D2E0A0A32 0x2E KECCAK256 0x4C PUSH10 0x63656E7365204772616E PUSH21 0xA546865204C6963656E736F722068657265627920 PUSH8 0x72616E7473207468 PUSH6 0x204C6963656E PUSH20 0x65652061206E6F6E2D6578636C75736976652C20 PUSH24 0x6F726C64776964652C20726F79616C74792D66726565206C PUSH10 0x63656E736520746F3A0A 0x2D KECCAK256 MSTORE8 PUSH9 0x6172652028636F7079 KECCAK256 PUSH2 0x6E64 KECCAK256 PUSH19 0x656469737472696275746520746865206D6174 PUSH6 0x7269616C2069 PUSH15 0x20616E79206D656469756D206F7220 PUSH7 0x6F726D6174290A 0x2D KECCAK256 COINBASE PUSH5 0x6170742028 PUSH19 0x656D69782C207472616E73666F726D2C20616E PUSH5 0x206275696C PUSH5 0x2075706F6E KECCAK256 PUSH21 0x6865206D6174657269616C20666F7220616E792070 PUSH22 0x72706F73652C206576656E20636F6D6D65726369616C PUSH13 0x79290A556E6465722074686520 PUSH21 0x65726D73206F6620746869732041677265656D656E PUSH21 0x2C2070726F766964656420746861743A0A2D205468 PUSH6 0x204C6963656E PUSH20 0x6565206D757374206769766520617070726F7072 PUSH10 0x61746520637265646974 KECCAK256 PUSH21 0x6F20746865204C6963656E736F722C2070726F7669 PUSH5 0x652061206C PUSH10 0x6E6B20746F2074686520 PUSH13 0x6963656E73652C20616E642069 PUSH15 0x646963617465206966206368616E67 PUSH6 0x732077657265 KECCAK256 PUSH14 0x6164652E20546865204C6963656E PUSH20 0x6565206D617920646F20736F20696E20616E7920 PUSH19 0x6561736F6E61626C65206D616E6E65722C2062 PUSH22 0x74206E6F7420696E20616E7920776179207468617420 PUSH20 0x7567676573747320746865204C6963656E736F72 KECCAK256 PUSH6 0x6E646F727365 PUSH20 0x20746865204C6963656E736565206F7220746865 KECCAK256 PUSH22 0x7365206F6620746865206D6174657269616C2E0A0A33 0x2E KECCAK256 0x4C PUSH10 0x63656E73652044757261 PUSH21 0x696F6E0A2D204C6963656E7365204475726174696F PUSH15 0x3A2056616C696420666F722061206C PUSH10 0x666574696D650A546869 PUSH20 0x2041677265656D656E7420697320656666656374 PUSH10 0x766520666F7220746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E207370656369666965642061626F76 PUSH6 0x2C2073746172 PUSH21 0x696E672066726F6D20746865205369676E696E6720 PREVRANDAO PUSH2 0x7465 0x2E EXP EXP CALLVALUE 0x2E KECCAK256 COINBASE PUSH21 0x747269627574696F6E20526571756972656D656E74 PUSH20 0xA546865204C6963656E736565206D7573742067 PUSH10 0x766520617070726F7072 PUSH10 0x61746520637265646974 KECCAK256 PUSH21 0x6F20746865204C6963656E736F722C20617320666F PUSH13 0x6C6F77733A0A2D2050726F7669 PUSH5 0x6520746865 KECCAK256 PUSH24 0x616C6C65742061646472657373206F6620746865204C6963 PUSH6 0x6E736F722E0A 0x2D KECCAK256 POP PUSH19 0x6F766964652061206C696E6B20746F20746865 KECCAK256 PUSH23 0x6964656F2E0A2D2050726F766964652061206C696E6B20 PUSH21 0x6F2074686973206C6963656E73652E0A2D20496E64 PUSH10 0x63617465206966206368 PUSH2 0x6E67 PUSH6 0x732077657265 KECCAK256 PUSH14 0x61646520746F20746865206F7269 PUSH8 0x696E616C206D6174 PUSH6 0x7269616C2E0A EXP CALLDATALOAD 0x2E KECCAK256 0x4E PUSH16 0x204164646974696F6E616C2052657374 PUSH19 0x696374696F6E730A546865204C6963656E7365 PUSH6 0x206D6179206E PUSH16 0x74206170706C79206C6567616C207465 PUSH19 0x6D73206F7220746563686E6F6C6F676963616C KECCAK256 PUSH14 0x656173757265732074686174206C PUSH6 0x67616C6C7920 PUSH19 0x65737472696374206F74686572732066726F6D KECCAK256 PUSH5 0x6F696E6720 PUSH2 0x6E79 PUSH21 0x68696E6720746865206C6963656E7365207065726D PUSH10 0x74732E0A0A362E205465 PUSH19 0x6D696E6174696F6E0A54686973204167726565 PUSH14 0x656E742077696C6C206175746F6D PUSH2 0x7469 PUSH4 0x616C6C79 KECCAK256 PUSH21 0x65726D696E61746520696620746865204C6963656E PUSH20 0x6565206661696C7320746F20636F6D706C792077 PUSH10 0x74682074686520746572 PUSH14 0x732068657265696E2E20486F7765 PUSH23 0x65722C20746865206C6963656E73652077696C6C206E6F PUSH21 0x207465726D696E617465206173206120726573756C PUSH21 0x206F66206D696E6F7220616E6420726561736F6E61 PUSH3 0x6C6520 PUSH5 0x6576696174 PUSH10 0x6F6E7320746861742064 PUSH16 0x206E6F742066756E64616D656E74616C PUSH13 0x79206166666563742074686520 PUSH21 0x65726D73206F66207468652041677265656D656E74 0x2E EXP EXP CALLDATACOPY 0x2E KECCAK256 MSTORE8 PUSH10 0x676E6174757265730A54 PUSH9 0x69732041677265656D PUSH6 0x6E7420697320 PUSH6 0x786563757465 PUSH5 0x2062792074 PUSH9 0x6520666F6C6C6F7769 PUSH15 0x6720706172746965733A0A2D204C69 PUSH4 0x656E736F PUSH19 0x3A205B6C6963656E736F722061646472657373 TSTORE EXP 0x2D KECCAK256 0x4C PUSH10 0x63656E7365653A205B6C PUSH10 0x63656E73656520616464 PUSH19 0x6573735D0A2D205369676E696E672044617465 GASPRICE KECCAK256 JUMPDEST PUSH20 0x69676E696E672074696D657374616D705DA26469 PUSH17 0x66735822122065954E728E1A6959C7E980 0xBD DUP11 PUSH3 0x6CC9CB PUSH15 0xA3947C96CE5CD428241DE5F041F264 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "158:6072:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2839:151;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3088:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3192:3035;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;217:2589;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2998:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2839:151;2881:13;2907:75;;;;;;;;;;;;;;;;;;;2839:151;:::o;3088:96::-;3134:13;3167:9;;;;;;;;;;;;;;;;;3160:16;;3088:96;:::o;3192:3035::-;3384:13;3410:20;:465;;;;;;;;;;;;;;;;;;;3888:20;:2016;;;;;;;;;;;;;;;;;;;5917:20;:51;;;;;;;;;;;;;;;;;;;5981:20;:55;;;;;;;;;;;;;;;;;;;6080:6;6088:10;6100:6;6108:29;6128:8;6108:19;:29::i;:::-;6139:6;6147:29;6167:8;6147:19;:29::i;:::-;6178:6;6186:31;6203:13;6186:16;:31::i;:::-;6063:155;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6049:170;;;;;;3192:3035;;;;;;;:::o;217:2589::-;;;;;;;;;;;;;;;;;;;:::o;2998:82::-;3044:7;2998:82;:::o;2689:148:0:-;2747:13;2779:51;2807:4;2791:22;;375:2;2779:51;;:11;:51::i;:::-;2772:58;;2689:148;;;:::o;637:698::-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;2005:525::-;2080:13;2105:18;2126:5;2105:26;;2141:19;2186:1;2177:6;2173:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2163:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:47;;2198:15;:6;2205:1;2198:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2223;:6;2230:1;2223:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2253:9;2278:1;2269:6;2265:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2253:26;;2248:140;2285:1;2281;:5;2248:140;;;2319:10;2343:3;2330:10;:16;2319:28;;;;;;;:::i;:::-;;;;;2307:6;2314:1;2307:9;;;;;;;;:::i;:::-;;;;;:40;;;;;;;;;;;2376:1;2361:16;;;;;2288:3;;;;:::i;:::-;;;2248:140;;;;2415:1;2401:10;:15;2397:96;;2468:5;2475:6;2439:43;;;;;;;;;;;;:::i;:::-;;;;;;;;2397:96;2516:6;2502:21;;;;2005:525;;;;:::o;12214:916:1:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:99:5:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:117;1678:1;1675;1668:12;1692:117;1801:1;1798;1791:12;1815:180;1863:77;1860:1;1853:88;1960:4;1957:1;1950:15;1984:4;1981:1;1974:15;2001:281;2084:27;2106:4;2084:27;:::i;:::-;2076:6;2072:40;2214:6;2202:10;2199:22;2178:18;2166:10;2163:34;2160:62;2157:88;;;2225:18;;:::i;:::-;2157:88;2265:10;2261:2;2254:22;2044:238;2001:281;;:::o;2288:129::-;2322:6;2349:20;;:::i;:::-;2339:30;;2378:33;2406:4;2398:6;2378:33;:::i;:::-;2288:129;;;:::o;2423:308::-;2485:4;2575:18;2567:6;2564:30;2561:56;;;2597:18;;:::i;:::-;2561:56;2635:29;2657:6;2635:29;:::i;:::-;2627:37;;2719:4;2713;2709:15;2701:23;;2423:308;;;:::o;2737:148::-;2835:6;2830:3;2825;2812:30;2876:1;2867:6;2862:3;2858:16;2851:27;2737:148;;;:::o;2891:425::-;2969:5;2994:66;3010:49;3052:6;3010:49;:::i;:::-;2994:66;:::i;:::-;2985:75;;3083:6;3076:5;3069:21;3121:4;3114:5;3110:16;3159:3;3150:6;3145:3;3141:16;3138:25;3135:112;;;3166:79;;:::i;:::-;3135:112;3256:54;3303:6;3298:3;3293;3256:54;:::i;:::-;2975:341;2891:425;;;;;:::o;3336:340::-;3392:5;3441:3;3434:4;3426:6;3422:17;3418:27;3408:122;;3449:79;;:::i;:::-;3408:122;3566:6;3553:20;3591:79;3666:3;3658:6;3651:4;3643:6;3639:17;3591:79;:::i;:::-;3582:88;;3398:278;3336:340;;;;:::o;3682:126::-;3719:7;3759:42;3752:5;3748:54;3737:65;;3682:126;;;:::o;3814:96::-;3851:7;3880:24;3898:5;3880:24;:::i;:::-;3869:35;;3814:96;;;:::o;3916:122::-;3989:24;4007:5;3989:24;:::i;:::-;3982:5;3979:35;3969:63;;4028:1;4025;4018:12;3969:63;3916:122;:::o;4044:139::-;4090:5;4128:6;4115:20;4106:29;;4144:33;4171:5;4144:33;:::i;:::-;4044:139;;;;:::o;4189:77::-;4226:7;4255:5;4244:16;;4189:77;;;:::o;4272:122::-;4345:24;4363:5;4345:24;:::i;:::-;4338:5;4335:35;4325:63;;4384:1;4381;4374:12;4325:63;4272:122;:::o;4400:139::-;4446:5;4484:6;4471:20;4462:29;;4500:33;4527:5;4500:33;:::i;:::-;4400:139;;;;:::o;4545:1091::-;4650:6;4658;4666;4674;4682;4731:3;4719:9;4710:7;4706:23;4702:33;4699:120;;;4738:79;;:::i;:::-;4699:120;4886:1;4875:9;4871:17;4858:31;4916:18;4908:6;4905:30;4902:117;;;4938:79;;:::i;:::-;4902:117;5043:63;5098:7;5089:6;5078:9;5074:22;5043:63;:::i;:::-;5033:73;;4829:287;5155:2;5181:53;5226:7;5217:6;5206:9;5202:22;5181:53;:::i;:::-;5171:63;;5126:118;5283:2;5309:53;5354:7;5345:6;5334:9;5330:22;5309:53;:::i;:::-;5299:63;;5254:118;5411:2;5437:53;5482:7;5473:6;5462:9;5458:22;5437:53;:::i;:::-;5427:63;;5382:118;5539:3;5566:53;5611:7;5602:6;5591:9;5587:22;5566:53;:::i;:::-;5556:63;;5510:119;4545:1091;;;;;;;;:::o;5642:118::-;5729:24;5747:5;5729:24;:::i;:::-;5724:3;5717:37;5642:118;;:::o;5766:222::-;5859:4;5897:2;5886:9;5882:18;5874:26;;5910:71;5978:1;5967:9;5963:17;5954:6;5910:71;:::i;:::-;5766:222;;;;:::o;5994:148::-;6096:11;6133:3;6118:18;;5994:148;;;;:::o;6148:390::-;6254:3;6282:39;6315:5;6282:39;:::i;:::-;6337:89;6419:6;6414:3;6337:89;:::i;:::-;6330:96;;6435:65;6493:6;6488:3;6481:4;6474:5;6470:16;6435:65;:::i;:::-;6525:6;6520:3;6516:16;6509:23;;6258:280;6148:390;;;;:::o;6544:1395::-;7012:3;7034:95;7125:3;7116:6;7034:95;:::i;:::-;7027:102;;7146:95;7237:3;7228:6;7146:95;:::i;:::-;7139:102;;7258:95;7349:3;7340:6;7258:95;:::i;:::-;7251:102;;7370:95;7461:3;7452:6;7370:95;:::i;:::-;7363:102;;7482:95;7573:3;7564:6;7482:95;:::i;:::-;7475:102;;7594:95;7685:3;7676:6;7594:95;:::i;:::-;7587:102;;7706:95;7797:3;7788:6;7706:95;:::i;:::-;7699:102;;7818:95;7909:3;7900:6;7818:95;:::i;:::-;7811:102;;7930:3;7923:10;;6544:1395;;;;;;;;;;;:::o;7945:180::-;7993:77;7990:1;7983:88;8090:4;8087:1;8080:15;8114:4;8111:1;8104:15;8131:180;8179:77;8176:1;8169:88;8276:4;8273:1;8266:15;8300:4;8297:1;8290:15;8317:410;8357:7;8380:20;8398:1;8380:20;:::i;:::-;8375:25;;8414:20;8432:1;8414:20;:::i;:::-;8409:25;;8469:1;8466;8462:9;8491:30;8509:11;8491:30;:::i;:::-;8480:41;;8670:1;8661:7;8657:15;8654:1;8651:22;8631:1;8624:9;8604:83;8581:139;;8700:18;;:::i;:::-;8581:139;8365:362;8317:410;;;;:::o;8733:191::-;8773:3;8792:20;8810:1;8792:20;:::i;:::-;8787:25;;8826:20;8844:1;8826:20;:::i;:::-;8821:25;;8869:1;8866;8862:9;8855:16;;8890:3;8887:1;8884:10;8881:36;;;8897:18;;:::i;:::-;8881:36;8733:191;;;;:::o;8930:180::-;8978:77;8975:1;8968:88;9075:4;9072:1;9065:15;9099:4;9096:1;9089:15;9116:171;9155:3;9178:24;9196:5;9178:24;:::i;:::-;9169:33;;9224:4;9217:5;9214:15;9211:41;;9232:18;;:::i;:::-;9211:41;9279:1;9272:5;9268:13;9261:20;;9116:171;;;:::o;9293:332::-;9414:4;9452:2;9441:9;9437:18;9429:26;;9465:71;9533:1;9522:9;9518:17;9509:6;9465:71;:::i;:::-;9546:72;9614:2;9603:9;9599:18;9590:6;9546:72;:::i;:::-;9293:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1457200",
								"executionCost": "1518",
								"totalCost": "1458718"
							},
							"external": {
								"agreement()": "infinite",
								"compose(string,address,address,uint256,uint256)": "infinite",
								"getDuration()": "390",
								"getName()": "infinite",
								"getTemplate()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 158,
									"end": 6230,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2815,
									"end": 2831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 6230,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065954e728e1a6959c7e980bd8a626cc9cb6ea3947c96ce5cd428241de5f041f264736f6c63430008190033",
									".code": [
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "17D7DE7C"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "321C48F2"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "483CED98"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "7DB3A946"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "AD2E8C9B"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 158,
											"end": 6230,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2839,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2839,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3088,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3088,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3192,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3192,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3192,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 217,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 217,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2998,
											"end": 3080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2998,
											"end": 3080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2894,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "PUSH",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "PUSH data",
											"source": 4,
											"value": "3DCE4AE4B48287A227AB5DEE905878FE7AC111065E7C71B6655D9677046D109C"
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "PUSH",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "860"
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "830"
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH data",
											"source": 4,
											"value": "EB502E1E43115DE3F2130B04BDEE250EB4865BF2BC1316C6AE74A6E4722E780D"
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "830"
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3397,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "PUSH data",
											"source": 4,
											"value": "43FBC79CC25B50BB7BBBD48D5CD062FDAD28996D3A1185B390B1E2932C0E8BC9"
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "PUSH",
											"source": 4,
											"value": "6A0"
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "PUSH",
											"source": 4,
											"value": "671"
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "PUSH data",
											"source": 4,
											"value": "B609FC3A615F5AF5619ED2B11CEC9AD925486BC40B21F623CE12D62E8F6C6E5E"
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "PUSH",
											"source": 4,
											"value": "671"
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 5904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "PUSH",
											"source": 4,
											"value": "A2D204C6963656E7365653A2000000000000000000000000000000000000000"
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "A2D205369676E696E6720446174653A20000000000000000000000000000000"
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6098,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6106,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6108,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6128,
											"end": 6136,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6108,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 6108,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6108,
											"end": 6137,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6108,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6145,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6167,
											"end": 6175,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6147,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 6147,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6184,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 6203,
											"end": 6216,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6186,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6217,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 6186,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 6063,
											"end": 6218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6219,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 6227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "860"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "830"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH data",
											"source": 4,
											"value": "EB502E1E43115DE3F2130B04BDEE250EB4865BF2BC1316C6AE74A6E4722E780D"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "830"
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 217,
											"end": 2806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3044,
											"end": 3051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2837,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2689,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2760,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2779,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2779,
											"end": 2830,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2779,
											"end": 2830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2830,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2779,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2530,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2005,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2105,
											"end": 2123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2173,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2173,
											"end": 2183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2173,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2183,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2173,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2173,
											"end": 2187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2173,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2187,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2173,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2163,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2198,
											"end": 2204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2198,
											"end": 2207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2223,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2265,
											"end": 2275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2265,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2265,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2265,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2286,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2343,
											"end": 2346,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 2330,
											"end": 2340,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2319,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 2319,
											"end": 2347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2307,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2377,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2288,
											"end": 2291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2416,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2397,
											"end": 2493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2473,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2481,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "E22E27EB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2439,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2493,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2397,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1995,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1815,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1940,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1957,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1981,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2001,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2106,
											"end": 2110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2084,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2111,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2084,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2072,
											"end": 2112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2176,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2197,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2222,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2225,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2157,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2276,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2349,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2378,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2594,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2597,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2561,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2657,
											"end": 2663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2635,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2723,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2865,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2878,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3010,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3010,
											"end": 3059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3059,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3010,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2994,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3060,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2994,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3060,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3090,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3121,
											"end": 3125,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3114,
											"end": 3119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3148,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3138,
											"end": 3163,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3166,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3166,
											"end": 3245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3245,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3166,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3135,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3296,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3256,
											"end": 3310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3310,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3256,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 3316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3418,
											"end": 3445,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3408,
											"end": 3530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3449,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3530,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3408,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3573,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3643,
											"end": 3649,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3591,
											"end": 3670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3801,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3898,
											"end": 3903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3880,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3880,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3880,
											"end": 3904,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3880,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3869,
											"end": 3904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3869,
											"end": 3904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 4038,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3916,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4007,
											"end": 4012,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3989,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 3987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4014,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3969,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 4038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 4038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4090,
											"end": 4095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4135,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4135,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4144,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4266,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4189,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4394,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4272,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4363,
											"end": 4368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4345,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4369,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4345,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4370,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4325,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4325,
											"end": 4388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4386,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4325,
											"end": 4388,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4325,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4539,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4400,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4527,
											"end": 4532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4500,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4533,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4500,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4539,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4400,
											"end": 4539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 4656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4688,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4734,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 4717,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4729,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4702,
											"end": 4735,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4819,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4699,
											"end": 4819,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4738,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4738,
											"end": 4817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4817,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4738,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4819,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4699,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4875,
											"end": 4884,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4888,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4889,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4935,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4902,
											"end": 5019,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4902,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 4902,
											"end": 5019,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4938,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4938,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5017,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4938,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4902,
											"end": 5019,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 4902,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5098,
											"end": 5105,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5089,
											"end": 5095,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5078,
											"end": 5087,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5043,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5106,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5043,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5106,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 5116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5155,
											"end": 5157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5226,
											"end": 5233,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5223,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5181,
											"end": 5234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5234,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5126,
											"end": 5244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5334,
											"end": 5343,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5309,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5362,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5309,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5362,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5413,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5473,
											"end": 5479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5471,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5437,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5437,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5490,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5542,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5566,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5611,
											"end": 5618,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5602,
											"end": 5608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5600,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5566,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5619,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5566,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5619,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5510,
											"end": 5629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 5636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5747,
											"end": 5752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5729,
											"end": 5753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5753,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5729,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5724,
											"end": 5727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5717,
											"end": 5754,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5988,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5766,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5899,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5978,
											"end": 5979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 5980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5910,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5981,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5910,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5988,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5988,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6142,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5994,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6118,
											"end": 6136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6142,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6538,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6148,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6315,
											"end": 6320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6282,
											"end": 6321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6321,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 6282,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 6419,
											"end": 6425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6337,
											"end": 6426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6426,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 6337,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6493,
											"end": 6499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6488,
											"end": 6491,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6474,
											"end": 6479,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6486,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 6435,
											"end": 6500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6500,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6435,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6531,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6520,
											"end": 6523,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6258,
											"end": 6538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6538,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7125,
											"end": 7128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7116,
											"end": 7122,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7034,
											"end": 7129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7129,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7034,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 7237,
											"end": 7240,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7146,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7241,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 7146,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7258,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7340,
											"end": 7346,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 7258,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7258,
											"end": 7353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7258,
											"end": 7353,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7258,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 7461,
											"end": 7464,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7452,
											"end": 7458,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7370,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7465,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 7370,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7573,
											"end": 7576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7570,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7482,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7577,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7482,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7594,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 7685,
											"end": 7688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7676,
											"end": 7682,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7594,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7594,
											"end": 7689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7594,
											"end": 7689,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 7594,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7689,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7797,
											"end": 7800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7794,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7706,
											"end": 7801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 7801,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7706,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7699,
											"end": 7801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7699,
											"end": 7801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 7909,
											"end": 7912,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7818,
											"end": 7913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7913,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 7818,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7811,
											"end": 7913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7811,
											"end": 7913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7930,
											"end": 7933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7923,
											"end": 7933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7923,
											"end": 7933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 7939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7945,
											"end": 8125,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 7945,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7993,
											"end": 8070,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7990,
											"end": 7991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7983,
											"end": 8071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8094,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8080,
											"end": 8095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8118,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8111,
											"end": 8112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8104,
											"end": 8119,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8311,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 8131,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8256,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8176,
											"end": 8177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8257,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8280,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8273,
											"end": 8274,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8266,
											"end": 8281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8297,
											"end": 8298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8305,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8727,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 8317,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8357,
											"end": 8364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 8398,
											"end": 8399,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8380,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 8380,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8380,
											"end": 8400,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 8380,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8375,
											"end": 8400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8375,
											"end": 8400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 8432,
											"end": 8433,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 8414,
											"end": 8434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8469,
											"end": 8470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8466,
											"end": 8467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8462,
											"end": 8471,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8509,
											"end": 8520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 8491,
											"end": 8521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8521,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8491,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8480,
											"end": 8521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8480,
											"end": 8521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8661,
											"end": 8668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8657,
											"end": 8672,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 8655,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8651,
											"end": 8673,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 8632,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8624,
											"end": 8633,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8604,
											"end": 8687,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8700,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8700,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 8700,
											"end": 8718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8700,
											"end": 8718,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8700,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8727,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8924,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 8733,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8773,
											"end": 8776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8792,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 8810,
											"end": 8811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8792,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 8792,
											"end": 8812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8792,
											"end": 8812,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 8792,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8787,
											"end": 8812,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8787,
											"end": 8812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8844,
											"end": 8845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 8826,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8846,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8826,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8821,
											"end": 8846,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8821,
											"end": 8846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8869,
											"end": 8870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8862,
											"end": 8871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 8893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8887,
											"end": 8888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8884,
											"end": 8894,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8881,
											"end": 8917,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8881,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8881,
											"end": 8917,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 8897,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8881,
											"end": 8917,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8881,
											"end": 8917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8924,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8930,
											"end": 9110,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8930,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8978,
											"end": 9055,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 9056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9075,
											"end": 9079,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 9072,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9065,
											"end": 9080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9096,
											"end": 9097,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9104,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9116,
											"end": 9287,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 9116,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9178,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9196,
											"end": 9201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 9178,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9202,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9178,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9169,
											"end": 9202,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9169,
											"end": 9202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 9211,
											"end": 9252,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 9232,
											"end": 9250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9252,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 9211,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9280,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9272,
											"end": 9277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9268,
											"end": 9281,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9261,
											"end": 9281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9261,
											"end": 9281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9116,
											"end": 9287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9116,
											"end": 9287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9116,
											"end": 9287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9116,
											"end": 9287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9625,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9293,
											"end": 9625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9414,
											"end": 9418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9441,
											"end": 9450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9465,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9533,
											"end": 9534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9522,
											"end": 9531,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9518,
											"end": 9535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9515,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9465,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 9465,
											"end": 9536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9465,
											"end": 9536,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9465,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9546,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9614,
											"end": 9616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9603,
											"end": 9612,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9590,
											"end": 9596,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9546,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 9546,
											"end": 9618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9546,
											"end": 9618,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9546,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9625,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9625,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									],
									".data": {
										"3DCE4AE4B48287A227AB5DEE905878FE7AC111065E7C71B6655D9677046D109C": "437265617469766520436f6d6d6f6e73204174747269627574696f6e20342e3020496e7465726e6174696f6e616c204c6963656e73652028434320425920342e3029",
										"43FBC79CC25B50BB7BBBD48D5CD062FDAD28996D3A1185B390B1E2932C0E8BC9": "4c6963656e73696e672041677265656d656e740a0a54686973204c6963656e73652041677265656d656e7420282241677265656d656e74222920697320656e746572656420696e746f20627920616e64206265747765656e3a0a2d204c6963656e736f723a2054686520696e646976696475616c206f7220656e74697479207468617420686f6c64732074686520636f7079726967687420666f722074686520766964656f206964656e7469666965642062656c6f772028224c6963656e736f7222292e0a2d204c6963656e7365653a2054686520696e646976696475616c206f7220656e7469747920746861742077696c6c2075736520746865206c6963656e736564206d6174657269616c20756e64657220746865207465726d73206f6620746869732041677265656d656e742028224c6963656e73656522292e0a0a312e204c6963656e736564204d6174657269616c0a2d20566964656f2049443a20",
										"B609FC3A615F5AF5619ED2B11CEC9AD925486BC40B21F623CE12D62E8F6C6E5E": "0a546869732041677265656d656e74206170706c69657320746f2074686520766964656f206964656e7469666965642062792074686520566964656f204944206c69737465642061626f76652c20617320686f73746564206f6e20596f7554756265206f7220616e79206f7468657220706c6174666f726d2e0a0a322e204c6963656e7365204772616e740a546865204c6963656e736f7220686572656279206772616e747320746865204c6963656e7365652061206e6f6e2d6578636c75736976652c20776f726c64776964652c20726f79616c74792d66726565206c6963656e736520746f3a0a2d2053686172652028636f707920616e642072656469737472696275746520746865206d6174657269616c20696e20616e79206d656469756d206f7220666f726d6174290a2d204164617074202872656d69782c207472616e73666f726d2c20616e64206275696c642075706f6e20746865206d6174657269616c20666f7220616e7920707572706f73652c206576656e20636f6d6d65726369616c6c79290a556e64657220746865207465726d73206f6620746869732041677265656d656e742c2070726f766964656420746861743a0a2d20546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c2070726f766964652061206c696e6b20746f20746865206c6963656e73652c20616e6420696e646963617465206966206368616e6765732077657265206d6164652e20546865204c6963656e736565206d617920646f20736f20696e20616e7920726561736f6e61626c65206d616e6e65722c20627574206e6f7420696e20616e7920776179207468617420737567676573747320746865204c6963656e736f7220656e646f7273657320746865204c6963656e736565206f722074686520757365206f6620746865206d6174657269616c2e0a0a332e204c6963656e7365204475726174696f6e0a2d204c6963656e7365204475726174696f6e3a2056616c696420666f722061206c69666574696d650a546869732041677265656d656e742069732065666665637469766520666f7220746865206475726174696f6e207370656369666965642061626f76652c207374617274696e672066726f6d20746865205369676e696e6720446174652e0a0a342e204174747269627574696f6e20526571756972656d656e74730a546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c20617320666f6c6c6f77733a0a2d2050726f76696465207468652077616c6c65742061646472657373206f6620746865204c6963656e736f722e0a2d2050726f766964652061206c696e6b20746f2074686520766964656f2e0a2d2050726f766964652061206c696e6b20746f2074686973206c6963656e73652e0a2d20496e646963617465206966206368616e6765732077657265206d61646520746f20746865206f726967696e616c206d6174657269616c2e0a0a352e204e6f204164646974696f6e616c205265737472696374696f6e730a546865204c6963656e736565206d6179206e6f74206170706c79206c6567616c207465726d73206f7220746563686e6f6c6f676963616c206d656173757265732074686174206c6567616c6c79207265737472696374206f74686572732066726f6d20646f696e6720616e797468696e6720746865206c6963656e7365207065726d6974732e0a0a362e205465726d696e6174696f6e0a546869732041677265656d656e742077696c6c206175746f6d61746963616c6c79207465726d696e61746520696620746865204c6963656e736565206661696c7320746f20636f6d706c79207769746820746865207465726d732068657265696e2e20486f77657665722c20746865206c6963656e73652077696c6c206e6f74207465726d696e617465206173206120726573756c74206f66206d696e6f7220616e6420726561736f6e61626c6520646576696174696f6e73207468617420646f206e6f742066756e64616d656e74616c6c792061666665637420746865207465726d73206f66207468652041677265656d656e742e0a0a372e205369676e6174757265730a546869732041677265656d656e742069732065786563757465642062792074686520666f6c6c6f77696e6720706172746965733a0a2d204c6963656e736f723a20",
										"EB502E1E43115DE3F2130B04BDEE250EB4865BF2BC1316C6AE74A6E4722E780D": "4c6963656e73696e672041677265656d656e740a0a54686973204c6963656e73652041677265656d656e7420282241677265656d656e74222920697320656e746572656420696e746f20627920616e64206265747765656e3a0a2d204c6963656e736f723a2054686520696e646976696475616c206f7220656e74697479207468617420686f6c64732074686520636f7079726967687420666f722074686520766964656f206964656e7469666965642062656c6f772028224c6963656e736f7222292e0a2d204c6963656e7365653a2054686520696e646976696475616c206f7220656e7469747920746861742077696c6c2075736520746865206c6963656e736564206d6174657269616c20756e64657220746865207465726d73206f6620746869732041677265656d656e742028224c6963656e73656522292e0a0a312e204c6963656e736564204d6174657269616c0a2d20566964656f2049443a205b766964656f2069645d0a546869732041677265656d656e74206170706c69657320746f2074686520766964656f206964656e7469666965642062792074686520566964656f204944206c69737465642061626f76652c20617320686f73746564206f6e20596f7554756265206f7220616e79206f7468657220706c6174666f726d2e0a0a322e204c6963656e7365204772616e740a546865204c6963656e736f7220686572656279206772616e747320746865204c6963656e7365652061206e6f6e2d6578636c75736976652c20776f726c64776964652c20726f79616c74792d66726565206c6963656e736520746f3a0a2d2053686172652028636f707920616e642072656469737472696275746520746865206d6174657269616c20696e20616e79206d656469756d206f7220666f726d6174290a2d204164617074202872656d69782c207472616e73666f726d2c20616e64206275696c642075706f6e20746865206d6174657269616c20666f7220616e7920707572706f73652c206576656e20636f6d6d65726369616c6c79290a556e64657220746865207465726d73206f6620746869732041677265656d656e742c2070726f766964656420746861743a0a2d20546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c2070726f766964652061206c696e6b20746f20746865206c6963656e73652c20616e6420696e646963617465206966206368616e6765732077657265206d6164652e20546865204c6963656e736565206d617920646f20736f20696e20616e7920726561736f6e61626c65206d616e6e65722c20627574206e6f7420696e20616e7920776179207468617420737567676573747320746865204c6963656e736f7220656e646f7273657320746865204c6963656e736565206f722074686520757365206f6620746865206d6174657269616c2e0a0a332e204c6963656e7365204475726174696f6e0a2d204c6963656e7365204475726174696f6e3a2056616c696420666f722061206c69666574696d650a546869732041677265656d656e742069732065666665637469766520666f7220746865206475726174696f6e207370656369666965642061626f76652c207374617274696e672066726f6d20746865205369676e696e6720446174652e0a0a342e204174747269627574696f6e20526571756972656d656e74730a546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c20617320666f6c6c6f77733a0a2d2050726f76696465207468652077616c6c65742061646472657373206f6620746865204c6963656e736f722e0a2d2050726f766964652061206c696e6b20746f2074686520766964656f2e0a2d2050726f766964652061206c696e6b20746f2074686973206c6963656e73652e0a2d20496e646963617465206966206368616e6765732077657265206d61646520746f20746865206f726967696e616c206d6174657269616c2e0a0a352e204e6f204164646974696f6e616c205265737472696374696f6e730a546865204c6963656e736565206d6179206e6f74206170706c79206c6567616c207465726d73206f7220746563686e6f6c6f676963616c206d656173757265732074686174206c6567616c6c79207265737472696374206f74686572732066726f6d20646f696e6720616e797468696e6720746865206c6963656e7365207065726d6974732e0a0a362e205465726d696e6174696f6e0a546869732041677265656d656e742077696c6c206175746f6d61746963616c6c79207465726d696e61746520696620746865204c6963656e736565206661696c7320746f20636f6d706c79207769746820746865207465726d732068657265696e2e20486f77657665722c20746865206c6963656e73652077696c6c206e6f74207465726d696e617465206173206120726573756c74206f66206d696e6f7220616e6420726561736f6e61626c6520646576696174696f6e73207468617420646f206e6f742066756e64616d656e74616c6c792061666665637420746865207465726d73206f66207468652041677265656d656e742e0a0a372e205369676e6174757265730a546869732041677265656d656e742069732065786563757465642062792074686520666f6c6c6f77696e6720706172746965733a0a2d204c6963656e736f723a205b6c6963656e736f7220616464726573735d0a2d204c6963656e7365653a205b6c6963656e73656520616464726573735d0a2d205369676e696e6720446174653a205b7369676e696e672074696d657374616d705d"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ILicense.sol",
								"contracts/LicenseAgreeement.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"agreement()": "7db3a946",
							"compose(string,address,address,uint256,uint256)": "483ced98",
							"getDuration()": "ad2e8c9b",
							"getName()": "17d7de7c",
							"getTemplate()": "321c48f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"agreement\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"licensor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"licensee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signTimestamp\",\"type\":\"uint256\"}],\"name\":\"compose\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTemplate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LicenseAgreeement.sol\":\"CreativeCommonAttribution4dot0\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/ILicense.sol\":{\"keccak256\":\"0xf850b9839653f8a4643951677df738e42011aa258e0bd74f4859e23c116948ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7511266d02a43bfcf544c15a70c59f9adb41a9d9b405b1fac86cf0eb4c42aea9\",\"dweb:/ipfs/QmXWM9nhCGc97wCWeqjWYpthateY7NLmFdQqRj3YADgF4C\"]},\"contracts/LicenseAgreeement.sol\":{\"keccak256\":\"0x2a0e52ec77ea39d277407d83c0b800b7d01c0ff318bdaf8b8ed84ecb4c962cb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b41c4434f0a654b2b7210aa2e227d6a028aff6643655248546864e58c81bce\",\"dweb:/ipfs/QmaZTwfaxbuj9SKdbcBV2Qxqbt3MBDuV5fPCt38qcEntMS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/LicenseAgreeement.sol:61:9:\n   |\n61 |         uint256 price,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3321,
					"file": "contracts/LicenseAgreeement.sol",
					"start": 3308
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1308
						],
						"SignedMath": [
							1413
						],
						"Strings": [
							254
						]
					},
					"id": 255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 1309,
							"src": "127:37:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "135:4:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 1414,
							"src": "165:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1413,
										"src": "173:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "Strings",
							"nameLocation": "259:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "273:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 7,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "335:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 10,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 19,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "520:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:0"
									},
									"src": "470:66:0"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "708:627:0",
										"statements": [
											{
												"id": 65,
												"nodeType": "UncheckedBlock",
												"src": "718:611:0",
												"statements": [
													{
														"assignments": [
															28
														],
														"declarations": [
															{
																"constant": false,
																"id": 28,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "742:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 27,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 35,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 31,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "770:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 29,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "759:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1308_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1128,
																	"src": "759:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:0"
													},
													{
														"assignments": [
															37
														],
														"declarations": [
															{
																"constant": false,
																"id": 37,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "794:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 36,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 42,
														"initialValue": {
															"arguments": [
																{
																	"id": 40,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "828:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 38,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:0"
													},
													{
														"assignments": [
															44
														],
														"declarations": [
															{
																"constant": false,
																"id": 44,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "849:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 43,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 45,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:0"
													},
													{
														"AST": {
															"nativeSrc": "930:67:0",
															"nodeType": "YulBlock",
															"src": "930:67:0",
															"statements": [
																{
																	"nativeSrc": "948:35:0",
																	"nodeType": "YulAssignment",
																	"src": "948:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:0",
																						"nodeType": "YulLiteral",
																						"src": "971:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:0"
																				},
																				"nativeSrc": "967:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:0"
																		},
																		"nativeSrc": "955:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 37,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:0",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:0",
																"valueSize": 1
															},
															{
																"declaration": 44,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:0",
																"valueSize": 1
															}
														],
														"id": 46,
														"nodeType": "InlineAssembly",
														"src": "921:76:0"
													},
													{
														"body": {
															"id": 61,
															"nodeType": "Block",
															"src": "1023:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:0",
																		"subExpression": {
																			"id": 48,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 44,
																			"src": "1041:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 50,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:0",
																		"nodeType": "YulBlock",
																		"src": "1124:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:0",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:0"
																									},
																									"nativeSrc": "1164:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:0"
																							},
																							"nativeSrc": "1159:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:0"
																					},
																					"nativeSrc": "1146:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:0"
																				},
																				"nativeSrc": "1146:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 9,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 44,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 22,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 51,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:0"
																},
																{
																	"expression": {
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 52,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1227:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 53,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 55,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 56,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 60,
																	"nodeType": "IfStatement",
																	"src": "1256:21:0",
																	"trueBody": {
																		"id": 59,
																		"nodeType": "Break",
																		"src": "1272:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 62,
														"nodeType": "WhileStatement",
														"src": "1010:282:0"
													},
													{
														"expression": {
															"id": 63,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1312:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 26,
														"id": 64,
														"nodeType": "Return",
														"src": "1305:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "693:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:0"
									},
									"scope": 254,
									"src": "637:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1511:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1542:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 87,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "1588:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 85,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "1573:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1413_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1412,
																		"src": "1573:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 84,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1564:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 75,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 74,
												"id": 91,
												"nodeType": "Return",
												"src": "1521:75:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1459:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 69,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1496:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:0"
									},
									"scope": 254,
									"src": "1435:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1782:100:0",
										"statements": [
											{
												"id": 111,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 102,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "1835:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 105,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "1854:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 103,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "1842:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1308_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1250,
																			"src": "1842:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 101,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	113,
																	196,
																	216
																],
																"referencedDeclaration": 196,
																"src": "1823:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 100,
														"id": 110,
														"nodeType": "Return",
														"src": "1816:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1729:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1767:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:0"
									},
									"scope": 254,
									"src": "1708:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2095:435:0",
										"statements": [
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "2105:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"id": 125,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "2126:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:0"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "2141:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 127,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 132,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 129,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 138,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 140,
														"indexExpression": {
															"hexValue": "30",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:0"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 144,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2223:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 146,
														"indexExpression": {
															"hexValue": "31",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:0"
											},
											{
												"body": {
													"id": 178,
													"nodeType": "Block",
													"src": "2293:95:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 164,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "2307:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 166,
																	"indexExpression": {
																		"id": 165,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2314:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 167,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "2319:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 171,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 124,
																			"src": "2330:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:0"
														},
														{
															"expression": {
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 174,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "2361:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 158,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 179,
															"src": "2253:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 157,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 153,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2269:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:0",
														"subExpression": {
															"id": 161,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2290:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 163,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 180,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2401:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "IfStatement",
												"src": "2397:96:0",
												"trueBody": {
													"id": 188,
													"nodeType": "Block",
													"src": "2418:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 184,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "2468:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 185,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "2475:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 183,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "2439:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 187,
															"nodeType": "RevertStatement",
															"src": "2432:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 190,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 194,
												"nodeType": "Return",
												"src": "2502:21:0"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2041:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2080:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:0"
									},
									"scope": 254,
									"src": "2005:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2762:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 209,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2807:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 207,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 205,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 212,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2815:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 204,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															113,
															196,
															216
														],
														"referencedDeclaration": 196,
														"src": "2779:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 203,
												"id": 214,
												"nodeType": "Return",
												"src": "2772:58:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2710:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2747:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:0"
									},
									"scope": 254,
									"src": "2689:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2992:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "3015:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 226,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "3034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 231,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 240,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3063:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 238,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 237,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 246,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "3086:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 244,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 243,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 225,
												"id": 251,
												"nodeType": "Return",
												"src": "3002:87:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2929:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2946:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2986:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:0"
									},
									"scope": 254,
									"src": "2914:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 255,
							"src": "251:2847:0",
							"usedErrors": [
								19
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1308,
							"linearizedBaseContracts": [
								1308
							],
							"name": "Math",
							"nameLocation": "211:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:1",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 260,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:1"
									},
									"src": "277:29:1"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 265,
									"members": [
										{
											"id": 261,
											"name": "Floor",
											"nameLocation": "336:5:1",
											"nodeType": "EnumValue",
											"src": "336:5:1"
										},
										{
											"id": 262,
											"name": "Ceil",
											"nameLocation": "379:4:1",
											"nodeType": "EnumValue",
											"src": "379:4:1"
										},
										{
											"id": 263,
											"name": "Trunc",
											"nameLocation": "421:5:1",
											"nodeType": "EnumValue",
											"src": "421:5:1"
										},
										{
											"id": 264,
											"name": "Expand",
											"nameLocation": "451:6:1",
											"nodeType": "EnumValue",
											"src": "451:6:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:1",
									"nodeType": "EnumDefinition",
									"src": "312:169:1"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "661:140:1",
										"statements": [
											{
												"id": 295,
												"nodeType": "UncheckedBlock",
												"src": "671:124:1",
												"statements": [
													{
														"assignments": [
															278
														],
														"declarations": [
															{
																"constant": false,
																"id": 278,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "695:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 282,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "707:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "711:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "730:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 284,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 290,
														"nodeType": "IfStatement",
														"src": "726:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 276,
															"id": 289,
															"nodeType": "Return",
															"src": "737:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 292,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "782:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 293,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 276,
														"id": 294,
														"nodeType": "Return",
														"src": "768:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "612:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "646:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "652:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:1"
									},
									"scope": 1308,
									"src": "585:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "984:113:1",
										"statements": [
											{
												"id": 323,
												"nodeType": "UncheckedBlock",
												"src": "994:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "1022:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 310,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "1026:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 316,
														"nodeType": "IfStatement",
														"src": "1018:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 308,
															"id": 315,
															"nodeType": "Return",
															"src": "1029:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 318,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "1074:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 319,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "1078:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 321,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 308,
														"id": 322,
														"nodeType": "Return",
														"src": "1060:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "924:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "935:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "969:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "975:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:1"
									},
									"scope": 1308,
									"src": "908:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1283:417:1",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1551:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 344,
														"nodeType": "IfStatement",
														"src": "1547:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 342,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 336,
															"id": 343,
															"nodeType": "Return",
															"src": "1559:16:1"
														}
													},
													{
														"assignments": [
															346
														],
														"declarations": [
															{
																"constant": false,
																"id": 346,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "1589:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 350,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1601:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 348,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1605:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 351,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "1624:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 352,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "1628:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 354,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1633:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 360,
														"nodeType": "IfStatement",
														"src": "1620:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 336,
															"id": 359,
															"nodeType": "Return",
															"src": "1636:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 362,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "1681:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 363,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 336,
														"id": 364,
														"nodeType": "Return",
														"src": "1667:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1223:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1234:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1274:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:1"
									},
									"scope": 1308,
									"src": "1207:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1887:114:1",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "1925:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 386,
														"nodeType": "IfStatement",
														"src": "1921:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 378,
															"id": 385,
															"nodeType": "Return",
															"src": "1933:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 388,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "1978:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 389,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1982:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 391,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 378,
														"id": 392,
														"nodeType": "Return",
														"src": "1964:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1827:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1838:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1872:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:1"
									},
									"scope": 1308,
									"src": "1811:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2198:114:1",
										"statements": [
											{
												"id": 421,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2236:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 414,
														"nodeType": "IfStatement",
														"src": "2232:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 412,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 406,
															"id": 413,
															"nodeType": "Return",
															"src": "2244:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 416,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2289:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 417,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2293:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 419,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 406,
														"id": 420,
														"nodeType": "Return",
														"src": "2275:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2138:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2183:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2189:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:1"
									},
									"scope": 1308,
									"src": "2122:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2449:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 433,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "2466:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 434,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "2470:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 437,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "2478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:1",
													"trueExpression": {
														"id": 436,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2474:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 439,
												"nodeType": "Return",
												"src": "2459:20:1"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2395:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2406:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2440:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:1"
									},
									"scope": 1308,
									"src": "2382:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2624:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 451,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2641:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 452,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2645:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 455,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2653:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:1",
													"trueExpression": {
														"id": 454,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2649:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 457,
												"nodeType": "Return",
												"src": "2634:20:1"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2570:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2581:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2615:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:1"
									},
									"scope": 1308,
									"src": "2557:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2845:82:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 469,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "2900:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 470,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2904:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 472,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "2910:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 474,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "2914:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 476,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 468,
												"id": 480,
												"nodeType": "Return",
												"src": "2892:28:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2791:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2802:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2836:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:1"
									},
									"scope": 1308,
									"src": "2774:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3219:260:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3233:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "3229:127:1",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "3241:115:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 495,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "3340:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 496,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 491,
															"id": 498,
															"nodeType": "Return",
															"src": "3333:12:1"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 501,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3444:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 505,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "3458:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 509,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3467:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 514,
												"nodeType": "Return",
												"src": "3437:35:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3165:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3176:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3210:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:1"
									},
									"scope": 1308,
									"src": "3148:331:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "3901:4018:1",
										"statements": [
											{
												"id": 640,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:1",
												"statements": [
													{
														"assignments": [
															529
														],
														"declarations": [
															{
																"constant": false,
																"id": 529,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "4232:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 533,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "4248:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 531,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "4252:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:1"
													},
													{
														"assignments": [
															535
														],
														"declarations": [
															{
																"constant": false,
																"id": 535,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "4312:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 534,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 536,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:1"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:1",
															"nodeType": "YulBlock",
															"src": "4392:122:1",
															"statements": [
																{
																	"nativeSrc": "4410:30:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:1"
																				},
																				"nativeSrc": "4433:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:1"
																		},
																		"nativeSrc": "4420:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:1",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:1",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:1"
																				},
																				"nativeSrc": "4470:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:1"
																				},
																				"nativeSrc": "4486:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nativeSrc": "4466:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:1",
																"valueSize": 1
															},
															{
																"declaration": 519,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:1",
																"valueSize": 1
															},
															{
																"declaration": 521,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:1",
																"valueSize": 1
															}
														],
														"id": 537,
														"nodeType": "InlineAssembly",
														"src": "4383:131:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 538,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4595:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 546,
														"nodeType": "IfStatement",
														"src": "4591:368:1",
														"trueBody": {
															"id": 545,
															"nodeType": "Block",
															"src": "4607:352:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "4925:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 542,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "4933:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 527,
																	"id": 544,
																	"nodeType": "Return",
																	"src": "4918:26:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5065:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 548,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "5080:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 554,
														"nodeType": "IfStatement",
														"src": "5061:88:1",
														"trueBody": {
															"id": 553,
															"nodeType": "Block",
															"src": "5087:62:1",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 550,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "5112:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 552,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:1"
																}
															]
														}
													},
													{
														"assignments": [
															556
														],
														"declarations": [
															{
																"constant": false,
																"id": 556,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "5404:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 555,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 557,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:1"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:1",
															"nodeType": "YulBlock",
															"src": "5444:291:1",
															"statements": [
																{
																	"nativeSrc": "5513:38:1",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:1"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:1"
																		},
																		"nativeSrc": "5526:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:1"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:1",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:1"
																				},
																				"nativeSrc": "5653:20:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:1"
																		},
																		"nativeSrc": "5642:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:1",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:1"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:1"
																		},
																		"nativeSrc": "5700:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:1",
																"valueSize": 1
															},
															{
																"declaration": 519,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:1",
																"valueSize": 1
															},
															{
																"declaration": 521,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:1",
																"valueSize": 1
															}
														],
														"id": 558,
														"nodeType": "InlineAssembly",
														"src": "5435:300:1"
													},
													{
														"assignments": [
															560
														],
														"declarations": [
															{
																"constant": false,
																"id": 560,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "5939:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 567,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 561,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5954:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 563,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "5973:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:1"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:1",
															"nodeType": "YulBlock",
															"src": "6008:362:1",
															"statements": [
																{
																	"nativeSrc": "6073:37:1",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:1"
																		},
																		"nativeSrc": "6088:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:1",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:1"
																		},
																		"nativeSrc": "6186:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:1",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:1"
																						},
																						"nativeSrc": "6333:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:1"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:1"
																				},
																				"nativeSrc": "6329:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:1"
																		},
																		"nativeSrc": "6325:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:1",
																"valueSize": 1
															},
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:1",
																"valueSize": 1
															}
														],
														"id": 568,
														"nodeType": "InlineAssembly",
														"src": "5999:371:1"
													},
													{
														"expression": {
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "6436:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 570,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6445:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 571,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "6453:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 574,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:1"
													},
													{
														"assignments": [
															576
														],
														"declarations": [
															{
																"constant": false,
																"id": 576,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "6775:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 583,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 578,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6798:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 580,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:1"
													},
													{
														"expression": {
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 584,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7031:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 586,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7046:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 587,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7060:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 591,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:1"
													},
													{
														"expression": {
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 592,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7100:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7115:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 595,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:1"
													},
													{
														"expression": {
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 600,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7170:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 602,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7185:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 603,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7199:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 607,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:1"
													},
													{
														"expression": {
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 608,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7240:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 610,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7255:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 611,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7269:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 615,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:1"
													},
													{
														"expression": {
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 616,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7310:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 618,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7325:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 619,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7339:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 623,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:1"
													},
													{
														"expression": {
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 624,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7381:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 626,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7396:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 627,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7410:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 631,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:1"
													},
													{
														"expression": {
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 632,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "7851:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 633,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "7860:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 634,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7868:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 637,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:1"
													},
													{
														"expression": {
															"id": 638,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7896:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 527,
														"id": 639,
														"nodeType": "Return",
														"src": "7889:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:1",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3819:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3830:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3841:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:1"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3885:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:1"
									},
									"scope": 1308,
									"src": "3803:4116:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "8161:192:1",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "8171:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8195:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 661,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "8198:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 662,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8201:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															685
														],
														"referencedDeclaration": 642,
														"src": "8188:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 666,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "8244:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$265",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$265",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 665,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "8227:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 669,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "8264:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 670,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "8267:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 671,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "8270:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 668,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 681,
												"nodeType": "IfStatement",
												"src": "8223:101:1",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "8288:36:1",
													"statements": [
														{
															"expression": {
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 676,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "8302:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 679,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 682,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "8340:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 656,
												"id": 683,
												"nodeType": "Return",
												"src": "8333:13:1"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:1",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8067:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8078:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8089:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8110:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "8110:8:1"
													},
													"referencedDeclaration": 265,
													"src": "8110:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:1"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8152:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:1"
									},
									"scope": 1308,
									"src": "8051:302:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "8644:1585:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8658:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "8654:45:1",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "8666:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 692,
															"id": 697,
															"nodeType": "Return",
															"src": "8680:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "9378:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 704,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "9406:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 703,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			964,
																			999
																		],
																		"referencedDeclaration": 964,
																		"src": "9401:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 708,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:1"
											},
											{
												"id": 795,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:1",
												"statements": [
													{
														"expression": {
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 711,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9839:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 712,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9849:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 713,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9858:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 714,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9862:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 721,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:1"
													},
													{
														"expression": {
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 722,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9888:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 723,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9898:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 724,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9907:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 725,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9911:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 728,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 732,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:1"
													},
													{
														"expression": {
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 733,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9937:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 734,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9947:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 735,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9956:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 736,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9960:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 739,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 743,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:1"
													},
													{
														"expression": {
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 744,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9986:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 745,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9996:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 746,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10005:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 747,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10009:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:1"
													},
													{
														"expression": {
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 755,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10035:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 756,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10045:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 757,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10054:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 758,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10058:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 761,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 765,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:1"
													},
													{
														"expression": {
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 766,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10084:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 767,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10094:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 768,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10103:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 769,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10107:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 772,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 776,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:1"
													},
													{
														"expression": {
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 777,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10133:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 778,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10143:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 779,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10152:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 780,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10156:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 783,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 787,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 789,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "10193:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 790,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "10201:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 791,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 701,
																		"src": "10205:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 788,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "10189:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 692,
														"id": 794,
														"nodeType": "Return",
														"src": "10182:30:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:1"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8635:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:1"
									},
									"scope": 1308,
									"src": "8587:1642:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "10405:164:1",
										"statements": [
											{
												"id": 830,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:1",
												"statements": [
													{
														"assignments": [
															809
														],
														"declarations": [
															{
																"constant": false,
																"id": 809,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 830,
																"src": "10439:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 813,
														"initialValue": {
															"arguments": [
																{
																	"id": 811,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "10461:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 810,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	797,
																	832
																],
																"referencedDeclaration": 797,
																"src": "10456:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "10484:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 816,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 803,
																						"src": "10511:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 815,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "10494:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 818,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "10524:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 819,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "10533:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 821,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "10542:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 807,
														"id": 829,
														"nodeType": "Return",
														"src": "10477:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:1",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10343:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10354:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 801,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "10354:8:1"
													},
													"referencedDeclaration": 265,
													"src": "10354:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:1"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10396:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:1"
									},
									"scope": 1308,
									"src": "10329:240:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "10760:922:1",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "10770:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"hexValue": "30",
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:1"
											},
											{
												"id": 960,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "10826:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 858,
														"nodeType": "IfStatement",
														"src": "10822:99:1",
														"trueBody": {
															"id": 857,
															"nodeType": "Block",
															"src": "10844:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "10862:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:1"
																},
																{
																	"expression": {
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "10893:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 856,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "10938:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "10934:96:1",
														"trueBody": {
															"id": 872,
															"nodeType": "Block",
															"src": "10955:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "10973:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:1"
																},
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11003:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11047:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 888,
														"nodeType": "IfStatement",
														"src": "11043:96:1",
														"trueBody": {
															"id": 887,
															"nodeType": "Block",
															"src": "11064:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11082:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 882,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:1"
																},
																{
																	"expression": {
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11112:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 886,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11156:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "11152:96:1",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "11173:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11191:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:1"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11221:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11265:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 918,
														"nodeType": "IfStatement",
														"src": "11261:93:1",
														"trueBody": {
															"id": 917,
															"nodeType": "Block",
															"src": "11281:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11299:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 912,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:1"
																},
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11328:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11371:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 933,
														"nodeType": "IfStatement",
														"src": "11367:93:1",
														"trueBody": {
															"id": 932,
															"nodeType": "Block",
															"src": "11387:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11405:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:1"
																},
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 928,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11434:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11477:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 948,
														"nodeType": "IfStatement",
														"src": "11473:93:1",
														"trueBody": {
															"id": 947,
															"nodeType": "Block",
															"src": "11493:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 939,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11511:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:1"
																},
																{
																	"expression": {
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 943,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11540:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 946,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 949,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11583:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 959,
														"nodeType": "IfStatement",
														"src": "11579:64:1",
														"trueBody": {
															"id": 958,
															"nodeType": "Block",
															"src": "11599:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11617:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 957,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 961,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 841,
													"src": "11669:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 839,
												"id": 962,
												"nodeType": "Return",
												"src": "11662:13:1"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:1",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10713:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:1"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:1"
									},
									"scope": 1308,
									"src": "10699:983:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "11915:168:1",
										"statements": [
											{
												"id": 997,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:1",
												"statements": [
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 997,
																"src": "11949:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 980,
														"initialValue": {
															"arguments": [
																{
																	"id": 978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "11971:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 977,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	964,
																	999
																],
																"referencedDeclaration": 964,
																"src": "11966:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "11998:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 983,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 970,
																						"src": "12025:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 982,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "12008:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 985,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 986,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 976,
																						"src": "12043:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 988,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 967,
																					"src": "12052:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 994,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 974,
														"id": 996,
														"nodeType": "Return",
														"src": "11991:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11849:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11864:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 968,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "11864:8:1"
													},
													"referencedDeclaration": 265,
													"src": "11864:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:1"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11906:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:1"
									},
									"scope": 1308,
									"src": "11835:248:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "12276:854:1",
										"statements": [
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "12286:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"hexValue": "30",
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:1"
											},
											{
												"id": 1124,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1011,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12342:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1027,
														"nodeType": "IfStatement",
														"src": "12338:103:1",
														"trueBody": {
															"id": 1026,
															"nodeType": "Block",
															"src": "12361:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12379:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1021,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:1"
																},
																{
																	"expression": {
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1022,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12414:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1025,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12458:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1044,
														"nodeType": "IfStatement",
														"src": "12454:103:1",
														"trueBody": {
															"id": 1043,
															"nodeType": "Block",
															"src": "12477:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12495:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:1"
																},
																{
																	"expression": {
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1039,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12530:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1042,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12574:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1061,
														"nodeType": "IfStatement",
														"src": "12570:103:1",
														"trueBody": {
															"id": 1060,
															"nodeType": "Block",
															"src": "12593:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12611:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1055,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:1"
																},
																{
																	"expression": {
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12646:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1059,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1062,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12690:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1078,
														"nodeType": "IfStatement",
														"src": "12686:100:1",
														"trueBody": {
															"id": 1077,
															"nodeType": "Block",
															"src": "12708:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1067,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12726:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1072,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:1"
																},
																{
																	"expression": {
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12760:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1076,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12803:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1095,
														"nodeType": "IfStatement",
														"src": "12799:100:1",
														"trueBody": {
															"id": 1094,
															"nodeType": "Block",
															"src": "12821:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12839:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:1"
																},
																{
																	"expression": {
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1090,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12873:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1093,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12916:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "12912:100:1",
														"trueBody": {
															"id": 1111,
															"nodeType": "Block",
															"src": "12934:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1101,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12952:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:1"
																},
																{
																	"expression": {
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12986:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1110,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "13029:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1123,
														"nodeType": "IfStatement",
														"src": "13025:66:1",
														"trueBody": {
															"id": 1122,
															"nodeType": "Block",
															"src": "13047:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1118,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "13065:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1121,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1125,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1008,
													"src": "13117:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1126,
												"nodeType": "Return",
												"src": "13110:13:1"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:1",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "12229:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:1"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "12267:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:1"
									},
									"scope": 1308,
									"src": "12214:916:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "13365:170:1",
										"statements": [
											{
												"id": 1161,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:1",
												"statements": [
													{
														"assignments": [
															1140
														],
														"declarations": [
															{
																"constant": false,
																"id": 1140,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1161,
																"src": "13399:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1139,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1144,
														"initialValue": {
															"arguments": [
																{
																	"id": 1142,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "13422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1141,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1128,
																	1163
																],
																"referencedDeclaration": 1128,
																"src": "13416:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "13449:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1147,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "13476:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1146,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "13459:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1149,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1150,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "13495:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1152,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "13504:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1138,
														"id": 1160,
														"nodeType": "Return",
														"src": "13442:76:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13299:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13314:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1132,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "13314:8:1"
													},
													"referencedDeclaration": 265,
													"src": "13314:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:1"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13356:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:1"
									},
									"scope": 1308,
									"src": "13284:251:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "13855:600:1",
										"statements": [
											{
												"assignments": [
													1172
												],
												"declarations": [
													{
														"constant": false,
														"id": 1172,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "13865:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"hexValue": "30",
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:1"
											},
											{
												"id": 1246,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "13921:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1189,
														"nodeType": "IfStatement",
														"src": "13917:98:1",
														"trueBody": {
															"id": 1188,
															"nodeType": "Block",
															"src": "13939:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "13957:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:1"
																},
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1184,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "13988:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14032:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1204,
														"nodeType": "IfStatement",
														"src": "14028:95:1",
														"trueBody": {
															"id": 1203,
															"nodeType": "Block",
															"src": "14049:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14067:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:1"
																},
																{
																	"expression": {
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14097:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1202,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14140:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1219,
														"nodeType": "IfStatement",
														"src": "14136:95:1",
														"trueBody": {
															"id": 1218,
															"nodeType": "Block",
															"src": "14157:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14175:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:1"
																},
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14205:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1234,
														"nodeType": "IfStatement",
														"src": "14244:95:1",
														"trueBody": {
															"id": 1233,
															"nodeType": "Block",
															"src": "14265:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1225,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14283:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:1"
																},
																{
																	"expression": {
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1229,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14313:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1232,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14356:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1245,
														"nodeType": "IfStatement",
														"src": "14352:64:1",
														"trueBody": {
															"id": 1244,
															"nodeType": "Block",
															"src": "14372:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1240,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14390:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1243,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1247,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1172,
													"src": "14442:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1248,
												"nodeType": "Return",
												"src": "14435:13:1"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:1",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "13808:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:1"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "13846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:1"
									},
									"scope": 1308,
									"src": "13792:663:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "14692:177:1",
										"statements": [
											{
												"id": 1286,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:1",
												"statements": [
													{
														"assignments": [
															1262
														],
														"declarations": [
															{
																"constant": false,
																"id": 1262,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1286,
																"src": "14726:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1266,
														"initialValue": {
															"arguments": [
																{
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "14750:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1263,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1250,
																	1288
																],
																"referencedDeclaration": 1250,
																"src": "14743:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "14777:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1269,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "14804:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1268,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "14787:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1274,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1272,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1262,
																									"src": "14823:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1273,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1275,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1277,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "14838:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1260,
														"id": 1285,
														"nodeType": "Return",
														"src": "14770:82:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:1",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14626:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14641:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "14641:8:1"
													},
													"referencedDeclaration": 265,
													"src": "14641:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:1"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14683:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:1"
									},
									"scope": 1308,
									"src": "14610:259:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "15067:48:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1299,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "15090:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$265",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$265",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1297,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1305,
												"nodeType": "Return",
												"src": "15077:31:1"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:1",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15019:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1290,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "15019:8:1"
													},
													"referencedDeclaration": 265,
													"src": "15019:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:1"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15061:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:1"
									},
									"scope": 1308,
									"src": "14993:122:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1309,
							"src": "203:14914:1",
							"usedErrors": [
								260
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1413
						]
					},
					"id": 1414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:2",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1413,
							"linearizedBaseContracts": [
								1413
							],
							"name": "SignedMath",
							"nameLocation": "224:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "376:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1321,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "393:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1322,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "397:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "405:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:2",
													"trueExpression": {
														"id": 1324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "401:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1327,
												"nodeType": "Return",
												"src": "386:20:2"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:2",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "325:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1313,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "335:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1315,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:2"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "368:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1318,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:2"
									},
									"scope": 1413,
									"src": "312:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "555:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1339,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1340,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "576:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "584:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:2",
													"trueExpression": {
														"id": 1342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "580:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1338,
												"id": 1345,
												"nodeType": "Return",
												"src": "565:20:2"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:2",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "504:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1331,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "514:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1333,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:2"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "547:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1336,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:2"
									},
									"scope": 1413,
									"src": "491:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "797:162:2",
										"statements": [
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "859:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1357,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1359,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "871:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1360,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "875:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1362,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1363,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "882:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1364,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "886:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1366,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1369,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "911:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1377,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1358,
																						"src": "931:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1375,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1373,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1382,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "945:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1383,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "949:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1385,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1387,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1389,
												"nodeType": "Return",
												"src": "904:48:2"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:2",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "746:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1349,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "756:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1351,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:2"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "789:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1354,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:2"
									},
									"scope": 1413,
									"src": "729:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "1103:158:2",
										"statements": [
											{
												"id": 1410,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1401,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "1228:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:2",
																		"subExpression": {
																			"id": 1405,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "1242:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:2",
																	"trueExpression": {
																		"id": 1404,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1237:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1398,
														"id": 1409,
														"nodeType": "Return",
														"src": "1213:31:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:2",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1061:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1393,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:2"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1094:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:2"
									},
									"scope": 1413,
									"src": "1048:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1414,
							"src": "216:1047:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:2"
				},
				"id": 2
			},
			"contracts/ILicense.sol": {
				"ast": {
					"absolutePath": "contracts/ILicense.sol",
					"exportedSymbols": {
						"ILicense": [
							1446
						]
					},
					"id": 1447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILicense",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1446,
							"linearizedBaseContracts": [
								1446
							],
							"name": "ILicense",
							"nameLocation": "71:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17d7de7c",
									"id": 1420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "96:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "103:2:3"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "129:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "129:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "128:15:3"
									},
									"scope": 1446,
									"src": "87:57:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad2e8c9b",
									"id": 1425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDuration",
									"nameLocation": "161:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:2:3"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "198:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:9:3"
									},
									"scope": 1446,
									"src": "152:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "321c48f2",
									"id": 1430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTemplate",
									"nameLocation": "224:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:2:3"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "261:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "261:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "260:15:3"
									},
									"scope": 1446,
									"src": "215:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "483ced98",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compose",
									"nameLocation": "293:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "325:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "311:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "311:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "licensor",
												"nameLocation": "354:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "346:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "licensee",
												"nameLocation": "381:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "373:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "408:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "400:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "signTimestamp",
												"nameLocation": "432:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "424:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:152:3"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "476:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "476:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:15:3"
									},
									"scope": 1446,
									"src": "284:207:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1447,
							"src": "61:433:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:463:3"
				},
				"id": 3
			},
			"contracts/LicenseAgreeement.sol": {
				"ast": {
					"absolutePath": "contracts/LicenseAgreeement.sol",
					"exportedSymbols": {
						"CreativeCommonAttribution4dot0": [
							1541
						],
						"ILicense": [
							1446
						],
						"Math": [
							1308
						],
						"SignedMath": [
							1413
						],
						"Strings": [
							254
						]
					},
					"id": 1542,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "contracts/ILicense.sol",
							"file": "./ILicense.sol",
							"id": 1450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1542,
							"sourceUnit": 1447,
							"src": "61:40:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1449,
										"name": "ILicense",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1446,
										"src": "69:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1542,
							"sourceUnit": 255,
							"src": "103:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1452,
										"name": "ILicense",
										"nameLocations": [
											"201:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1446,
										"src": "201:8:4"
									},
									"id": 1453,
									"nodeType": "InheritanceSpecifier",
									"src": "201:8:4"
								}
							],
							"canonicalName": "CreativeCommonAttribution4dot0",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1541,
							"linearizedBaseContracts": [
								1541,
								1446
							],
							"name": "CreativeCommonAttribution4dot0",
							"nameLocation": "167:30:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "7db3a946",
									"id": 1456,
									"mutability": "constant",
									"name": "agreement",
									"nameLocation": "240:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1541,
									"src": "217:2589:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1454,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "217:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4c6963656e73696e672041677265656d656e740a0a54686973204c6963656e73652041677265656d656e7420282241677265656d656e74222920697320656e746572656420696e746f20627920616e64206265747765656e3a0a2d204c6963656e736f723a2054686520696e646976696475616c206f7220656e74697479207468617420686f6c64732074686520636f7079726967687420666f722074686520766964656f206964656e7469666965642062656c6f772028224c6963656e736f7222292e0a2d204c6963656e7365653a2054686520696e646976696475616c206f7220656e7469747920746861742077696c6c2075736520746865206c6963656e736564206d6174657269616c20756e64657220746865207465726d73206f6620746869732041677265656d656e742028224c6963656e73656522292e0a0a312e204c6963656e736564204d6174657269616c0a2d20566964656f2049443a205b766964656f2069645d0a546869732041677265656d656e74206170706c69657320746f2074686520766964656f206964656e7469666965642062792074686520566964656f204944206c69737465642061626f76652c20617320686f73746564206f6e20596f7554756265206f7220616e79206f7468657220706c6174666f726d2e0a0a322e204c6963656e7365204772616e740a546865204c6963656e736f7220686572656279206772616e747320746865204c6963656e7365652061206e6f6e2d6578636c75736976652c20776f726c64776964652c20726f79616c74792d66726565206c6963656e736520746f3a0a2d2053686172652028636f707920616e642072656469737472696275746520746865206d6174657269616c20696e20616e79206d656469756d206f7220666f726d6174290a2d204164617074202872656d69782c207472616e73666f726d2c20616e64206275696c642075706f6e20746865206d6174657269616c20666f7220616e7920707572706f73652c206576656e20636f6d6d65726369616c6c79290a556e64657220746865207465726d73206f6620746869732041677265656d656e742c2070726f766964656420746861743a0a2d20546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c2070726f766964652061206c696e6b20746f20746865206c6963656e73652c20616e6420696e646963617465206966206368616e6765732077657265206d6164652e20546865204c6963656e736565206d617920646f20736f20696e20616e7920726561736f6e61626c65206d616e6e65722c20627574206e6f7420696e20616e7920776179207468617420737567676573747320746865204c6963656e736f7220656e646f7273657320746865204c6963656e736565206f722074686520757365206f6620746865206d6174657269616c2e0a0a332e204c6963656e7365204475726174696f6e0a2d204c6963656e7365204475726174696f6e3a2056616c696420666f722061206c69666574696d650a546869732041677265656d656e742069732065666665637469766520666f7220746865206475726174696f6e207370656369666965642061626f76652c207374617274696e672066726f6d20746865205369676e696e6720446174652e0a0a342e204174747269627574696f6e20526571756972656d656e74730a546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c20617320666f6c6c6f77733a0a2d2050726f76696465207468652077616c6c65742061646472657373206f6620746865204c6963656e736f722e0a2d2050726f766964652061206c696e6b20746f2074686520766964656f2e0a2d2050726f766964652061206c696e6b20746f2074686973206c6963656e73652e0a2d20496e646963617465206966206368616e6765732077657265206d61646520746f20746865206f726967696e616c206d6174657269616c2e0a0a352e204e6f204164646974696f6e616c205265737472696374696f6e730a546865204c6963656e736565206d6179206e6f74206170706c79206c6567616c207465726d73206f7220746563686e6f6c6f676963616c206d656173757265732074686174206c6567616c6c79207265737472696374206f74686572732066726f6d20646f696e6720616e797468696e6720746865206c6963656e7365207065726d6974732e0a0a362e205465726d696e6174696f6e0a546869732041677265656d656e742077696c6c206175746f6d61746963616c6c79207465726d696e61746520696620746865204c6963656e736565206661696c7320746f20636f6d706c79207769746820746865207465726d732068657265696e2e20486f77657665722c20746865206c6963656e73652077696c6c206e6f74207465726d696e617465206173206120726573756c74206f66206d696e6f7220616e6420726561736f6e61626c6520646576696174696f6e73207468617420646f206e6f742066756e64616d656e74616c6c792061666665637420746865207465726d73206f66207468652041677265656d656e742e0a0a372e205369676e6174757265730a546869732041677265656d656e742069732065786563757465642062792074686520666f6c6c6f77696e6720706172746965733a0a2d204c6963656e736f723a205b6c6963656e736f7220616464726573735d0a2d204c6963656e7365653a205b6c6963656e73656520616464726573735d0a2d205369676e696e6720446174653a205b7369676e696e672074696d657374616d705d",
										"id": 1455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "252:2554:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_eb502e1e43115de3f2130b04bdee250eb4865bf2bc1316c6ae74a6e4722e780d",
											"typeString": "literal_string hex\"4c6963656e73696e672041677265656d656e740a0a54686973204c6963656e73652041677265656d656e7420282241677265656d656e74222920697320656e746572656420696e746f20627920616e64206265747765656e3a0a2d204c6963656e736f723a2054686520696e646976696475616c206f7220656e74697479207468617420686f6c64732074686520636f7079726967687420666f722074686520766964656f206964656e7469666965642062656c6f772028224c6963656e736f7222292e0a2d204c6963656e7365653a2054686520696e646976696475616c206f7220656e7469747920746861742077696c6c2075736520746865206c6963656e736564206d6174657269616c20756e64657220746865207465726d73206f6620746869732041677265656d656e742028224c6963656e73656522292e0a0a312e204c6963656e736564204d6174657269616c0a2d20566964656f2049443a205b766964656f2069645d0a546869732041677265656d656e74206170706c69657320746f2074686520766964656f206964656e7469666965642062792074686520566964656f204944206c69737465642061626f76652c20617320686f73746564206f6e20596f7554756265206f7220616e79206f7468657220706c6174666f726d2e0a0a322e204c6963656e7365204772616e740a546865204c6963656e736f7220686572656279206772616e747320746865204c6963656e7365652061206e6f6e2d6578636c75736976652c20776f726c64776964652c20726f79616c74792d66726565206c6963656e736520746f3a0a2d2053686172652028636f707920616e642072656469737472696275746520746865206d6174657269616c20696e20616e79206d656469756d206f7220666f726d6174290a2d204164617074202872656d69782c207472616e73666f726d2c20616e64206275696c642075706f6e20746865206d6174657269616c20666f7220616e7920707572706f73652c206576656e20636f6d6d65726369616c6c79290a556e64657220746865207465726d73206f6620746869732041677265656d656e742c2070726f766964656420746861743a0a2d20546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c2070726f766964652061206c696e6b20746f20746865206c6963656e73652c20616e6420696e646963617465206966206368616e6765732077657265206d6164652e20546865204c6963656e736565206d617920646f20736f20696e20616e7920726561736f6e61626c65206d616e6e65722c20627574206e6f7420696e20616e7920776179207468617420737567676573747320746865204c6963656e736f7220656e646f7273657320746865204c6963656e736565206f722074686520757365206f6620746865206d6174657269616c2e0a0a332e204c6963656e7365204475726174696f6e0a2d204c6963656e7365204475726174696f6e3a2056616c696420666f722061206c69666574696d650a546869732041677265656d656e742069732065666665637469766520666f7220746865206475726174696f6e207370656369666965642061626f76652c207374617274696e672066726f6d20746865205369676e696e6720446174652e0a0a342e204174747269627574696f6e20526571756972656d656e74730a546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c20617320666f6c6c6f77733a0a2d2050726f76696465207468652077616c6c65742061646472657373206f6620746865204c6963656e736f722e0a2d2050726f766964652061206c696e6b20746f2074686520766964656f2e0a2d2050726f766964652061206c696e6b20746f2074686973206c6963656e73652e0a2d20496e646963617465206966206368616e6765732077657265206d61646520746f20746865206f726967696e616c206d6174657269616c2e0a0a352e204e6f204164646974696f6e616c205265737472696374696f6e730a546865204c6963656e736565206d6179206e6f74206170706c79206c6567616c207465726d73206f7220746563686e6f6c6f676963616c206d656173757265732074686174206c6567616c6c79207265737472696374206f74686572732066726f6d20646f696e6720616e797468696e6720746865206c6963656e7365207065726d6974732e0a0a362e205465726d696e6174696f6e0a546869732041677265656d656e742077696c6c206175746f6d61746963616c6c79207465726d696e61746520696620746865204c6963656e736565206661696c7320746f20636f6d706c79207769746820746865207465726d732068657265696e2e20486f77657665722c20746865206c6963656e73652077696c6c206e6f74207465726d696e617465206173206120726573756c74206f66206d696e6f7220616e6420726561736f6e61626c6520646576696174696f6e73207468617420646f206e6f742066756e64616d656e74616c6c792061666665637420746865207465726d73206f66207468652041677265656d656e742e0a0a372e205369676e6174757265730a546869732041677265656d656e742069732065786563757465642062792074686520666f6c6c6f77696e6720706172746965733a0a2d204c6963656e736f723a205b6c6963656e736f7220616464726573735d0a2d204c6963656e7365653a205b6c6963656e73656520616464726573735d0a2d205369676e696e6720446174653a205b7369676e696e672074696d657374616d705d\""
										},
										"value": "Licensing Agreement\n\nThis License Agreement (\"Agreement\") is entered into by and between:\n- Licensor: The individual or entity that holds the copyright for the video identified below (\"Licensor\").\n- Licensee: The individual or entity that will use the licensed material under the terms of this Agreement (\"Licensee\").\n\n1. Licensed Material\n- Video ID: [video id]\nThis Agreement applies to the video identified by the Video ID listed above, as hosted on YouTube or any other platform.\n\n2. License Grant\nThe Licensor hereby grants the Licensee a non-exclusive, worldwide, royalty-free license to:\n- Share (copy and redistribute the material in any medium or format)\n- Adapt (remix, transform, and build upon the material for any purpose, even commercially)\nUnder the terms of this Agreement, provided that:\n- The Licensee must give appropriate credit to the Licensor, provide a link to the license, and indicate if changes were made. The Licensee may do so in any reasonable manner, but not in any way that suggests the Licensor endorses the Licensee or the use of the material.\n\n3. License Duration\n- License Duration: Valid for a lifetime\nThis Agreement is effective for the duration specified above, starting from the Signing Date.\n\n4. Attribution Requirements\nThe Licensee must give appropriate credit to the Licensor, as follows:\n- Provide the wallet address of the Licensor.\n- Provide a link to the video.\n- Provide a link to this license.\n- Indicate if changes were made to the original material.\n\n5. No Additional Restrictions\nThe Licensee may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.\n\n6. Termination\nThis Agreement will automatically terminate if the Licensee fails to comply with the terms herein. However, the license will not terminate as a result of minor and reasonable deviations that do not fundamentally affect the terms of the Agreement.\n\n7. Signatures\nThis Agreement is executed by the following parties:\n- Licensor: [licensor address]\n- Licensee: [licensee address]\n- Signing Date: [signing timestamp]"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "2829:2:4",
										"statements": []
									},
									"id": 1460,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:2:4"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2829:0:4"
									},
									"scope": 1541,
									"src": "2815:16:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1420
									],
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "2896:94:4",
										"statements": [
											{
												"expression": {
													"hexValue": "437265617469766520436f6d6d6f6e73204174747269627574696f6e20342e3020496e7465726e6174696f6e616c204c6963656e73652028434320425920342e3029",
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2914:68:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3dce4ae4b48287a227ab5dee905878fe7ac111065e7c71b6655d9677046d109c",
														"typeString": "literal_string \"Creative Commons Attribution 4.0 International License (CC BY 4.0)\""
													},
													"value": "Creative Commons Attribution 4.0 International License (CC BY 4.0)"
												},
												"functionReturnParameters": 1464,
												"id": 1466,
												"nodeType": "Return",
												"src": "2907:75:4"
											}
										]
									},
									"functionSelector": "17d7de7c",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "2848:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:2:4"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "2881:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2881:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:15:4"
									},
									"scope": 1541,
									"src": "2839:151:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1425
									],
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "3053:27:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3071:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1472,
												"id": 1474,
												"nodeType": "Return",
												"src": "3064:8:4"
											}
										]
									},
									"functionSelector": "ad2e8c9b",
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDuration",
									"nameLocation": "3007:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3018:2:4"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "3044:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:9:4"
									},
									"scope": 1541,
									"src": "2998:82:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1430
									],
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "3149:35:4",
										"statements": [
											{
												"expression": {
													"id": 1481,
													"name": "agreement",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1456,
													"src": "3167:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1480,
												"id": 1482,
												"nodeType": "Return",
												"src": "3160:16:4"
											}
										]
									},
									"functionSelector": "321c48f2",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTemplate",
									"nameLocation": "3097:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "3134:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3134:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3133:15:4"
									},
									"scope": 1541,
									"src": "3088:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1445
									],
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "3399:2828:4",
										"statements": [
											{
												"assignments": [
													1500
												],
												"declarations": [
													{
														"constant": false,
														"id": 1500,
														"mutability": "mutable",
														"name": "part_a",
														"nameLocation": "3424:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1539,
														"src": "3410:20:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1499,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3410:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"hexValue": "4c6963656e73696e672041677265656d656e740a0a54686973204c6963656e73652041677265656d656e7420282241677265656d656e74222920697320656e746572656420696e746f20627920616e64206265747765656e3a0a2d204c6963656e736f723a2054686520696e646976696475616c206f7220656e74697479207468617420686f6c64732074686520636f7079726967687420666f722074686520766964656f206964656e7469666965642062656c6f772028224c6963656e736f7222292e0a2d204c6963656e7365653a2054686520696e646976696475616c206f7220656e7469747920746861742077696c6c2075736520746865206c6963656e736564206d6174657269616c20756e64657220746865207465726d73206f6620746869732041677265656d656e742028224c6963656e73656522292e0a0a312e204c6963656e736564204d6174657269616c0a2d20566964656f2049443a20",
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3433:442:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_43fbc79cc25b50bb7bbbd48d5cd062fdad28996d3a1185b390b1e2932c0e8bc9",
														"typeString": "literal_string hex\"4c6963656e73696e672041677265656d656e740a0a54686973204c6963656e73652041677265656d656e7420282241677265656d656e74222920697320656e746572656420696e746f20627920616e64206265747765656e3a0a2d204c6963656e736f723a2054686520696e646976696475616c206f7220656e74697479207468617420686f6c64732074686520636f7079726967687420666f722074686520766964656f206964656e7469666965642062656c6f772028224c6963656e736f7222292e0a2d204c6963656e7365653a2054686520696e646976696475616c206f7220656e7469747920746861742077696c6c2075736520746865206c6963656e736564206d6174657269616c20756e64657220746865207465726d73206f6620746869732041677265656d656e742028224c6963656e73656522292e0a0a312e204c6963656e736564204d6174657269616c0a2d20566964656f2049443a20\""
													},
													"value": "Licensing Agreement\n\nThis License Agreement (\"Agreement\") is entered into by and between:\n- Licensor: The individual or entity that holds the copyright for the video identified below (\"Licensor\").\n- Licensee: The individual or entity that will use the licensed material under the terms of this Agreement (\"Licensee\").\n\n1. Licensed Material\n- Video ID: "
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3410:465:4"
											},
											{
												"assignments": [
													1504
												],
												"declarations": [
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "part_b",
														"nameLocation": "3902:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1539,
														"src": "3888:20:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1503,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3888:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"hexValue": "0a546869732041677265656d656e74206170706c69657320746f2074686520766964656f206964656e7469666965642062792074686520566964656f204944206c69737465642061626f76652c20617320686f73746564206f6e20596f7554756265206f7220616e79206f7468657220706c6174666f726d2e0a0a322e204c6963656e7365204772616e740a546865204c6963656e736f7220686572656279206772616e747320746865204c6963656e7365652061206e6f6e2d6578636c75736976652c20776f726c64776964652c20726f79616c74792d66726565206c6963656e736520746f3a0a2d2053686172652028636f707920616e642072656469737472696275746520746865206d6174657269616c20696e20616e79206d656469756d206f7220666f726d6174290a2d204164617074202872656d69782c207472616e73666f726d2c20616e64206275696c642075706f6e20746865206d6174657269616c20666f7220616e7920707572706f73652c206576656e20636f6d6d65726369616c6c79290a556e64657220746865207465726d73206f6620746869732041677265656d656e742c2070726f766964656420746861743a0a2d20546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c2070726f766964652061206c696e6b20746f20746865206c6963656e73652c20616e6420696e646963617465206966206368616e6765732077657265206d6164652e20546865204c6963656e736565206d617920646f20736f20696e20616e7920726561736f6e61626c65206d616e6e65722c20627574206e6f7420696e20616e7920776179207468617420737567676573747320746865204c6963656e736f7220656e646f7273657320746865204c6963656e736565206f722074686520757365206f6620746865206d6174657269616c2e0a0a332e204c6963656e7365204475726174696f6e0a2d204c6963656e7365204475726174696f6e3a2056616c696420666f722061206c69666574696d650a546869732041677265656d656e742069732065666665637469766520666f7220746865206475726174696f6e207370656369666965642061626f76652c207374617274696e672066726f6d20746865205369676e696e6720446174652e0a0a342e204174747269627574696f6e20526571756972656d656e74730a546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c20617320666f6c6c6f77733a0a2d2050726f76696465207468652077616c6c65742061646472657373206f6620746865204c6963656e736f722e0a2d2050726f766964652061206c696e6b20746f2074686520766964656f2e0a2d2050726f766964652061206c696e6b20746f2074686973206c6963656e73652e0a2d20496e646963617465206966206368616e6765732077657265206d61646520746f20746865206f726967696e616c206d6174657269616c2e0a0a352e204e6f204164646974696f6e616c205265737472696374696f6e730a546865204c6963656e736565206d6179206e6f74206170706c79206c6567616c207465726d73206f7220746563686e6f6c6f676963616c206d656173757265732074686174206c6567616c6c79207265737472696374206f74686572732066726f6d20646f696e6720616e797468696e6720746865206c6963656e7365207065726d6974732e0a0a362e205465726d696e6174696f6e0a546869732041677265656d656e742077696c6c206175746f6d61746963616c6c79207465726d696e61746520696620746865204c6963656e736565206661696c7320746f20636f6d706c79207769746820746865207465726d732068657265696e2e20486f77657665722c20746865206c6963656e73652077696c6c206e6f74207465726d696e617465206173206120726573756c74206f66206d696e6f7220616e6420726561736f6e61626c6520646576696174696f6e73207468617420646f206e6f742066756e64616d656e74616c6c792061666665637420746865207465726d73206f66207468652041677265656d656e742e0a0a372e205369676e6174757265730a546869732041677265656d656e742069732065786563757465642062792074686520666f6c6c6f77696e6720706172746965733a0a2d204c6963656e736f723a20",
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3911:1993:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b609fc3a615f5af5619ed2b11cec9ad925486bc40b21f623ce12d62e8f6c6e5e",
														"typeString": "literal_string hex\"0a546869732041677265656d656e74206170706c69657320746f2074686520766964656f206964656e7469666965642062792074686520566964656f204944206c69737465642061626f76652c20617320686f73746564206f6e20596f7554756265206f7220616e79206f7468657220706c6174666f726d2e0a0a322e204c6963656e7365204772616e740a546865204c6963656e736f7220686572656279206772616e747320746865204c6963656e7365652061206e6f6e2d6578636c75736976652c20776f726c64776964652c20726f79616c74792d66726565206c6963656e736520746f3a0a2d2053686172652028636f707920616e642072656469737472696275746520746865206d6174657269616c20696e20616e79206d656469756d206f7220666f726d6174290a2d204164617074202872656d69782c207472616e73666f726d2c20616e64206275696c642075706f6e20746865206d6174657269616c20666f7220616e7920707572706f73652c206576656e20636f6d6d65726369616c6c79290a556e64657220746865207465726d73206f6620746869732041677265656d656e742c2070726f766964656420746861743a0a2d20546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c2070726f766964652061206c696e6b20746f20746865206c6963656e73652c20616e6420696e646963617465206966206368616e6765732077657265206d6164652e20546865204c6963656e736565206d617920646f20736f20696e20616e7920726561736f6e61626c65206d616e6e65722c20627574206e6f7420696e20616e7920776179207468617420737567676573747320746865204c6963656e736f7220656e646f7273657320746865204c6963656e736565206f722074686520757365206f6620746865206d6174657269616c2e0a0a332e204c6963656e7365204475726174696f6e0a2d204c6963656e7365204475726174696f6e3a2056616c696420666f722061206c69666574696d650a546869732041677265656d656e742069732065666665637469766520666f7220746865206475726174696f6e207370656369666965642061626f76652c207374617274696e672066726f6d20746865205369676e696e6720446174652e0a0a342e204174747269627574696f6e20526571756972656d656e74730a546865204c6963656e736565206d757374206769766520617070726f7072696174652063726564697420746f20746865204c6963656e736f722c20617320666f6c6c6f77733a0a2d2050726f76696465207468652077616c6c65742061646472657373206f6620746865204c6963656e736f722e0a2d2050726f766964652061206c696e6b20746f2074686520766964656f2e0a2d2050726f766964652061206c696e6b20746f2074686973206c6963656e73652e0a2d20496e646963617465206966206368616e6765732077657265206d61646520746f20746865206f726967696e616c206d6174657269616c2e0a0a352e204e6f204164646974696f6e616c205265737472696374696f6e730a546865204c6963656e736565206d6179206e6f74206170706c79206c6567616c207465726d73206f7220746563686e6f6c6f676963616c206d656173757265732074686174206c6567616c6c79207265737472696374206f74686572732066726f6d20646f696e6720616e797468696e6720746865206c6963656e7365207065726d6974732e0a0a362e205465726d696e6174696f6e0a546869732041677265656d656e742077696c6c206175746f6d61746963616c6c79207465726d696e61746520696620746865204c6963656e736565206661696c7320746f20636f6d706c79207769746820746865207465726d732068657265696e2e20486f77657665722c20746865206c6963656e73652077696c6c206e6f74207465726d696e617465206173206120726573756c74206f66206d696e6f7220616e6420726561736f6e61626c6520646576696174696f6e73207468617420646f206e6f742066756e64616d656e74616c6c792061666665637420746865207465726d73206f66207468652041677265656d656e742e0a0a372e205369676e6174757265730a546869732041677265656d656e742069732065786563757465642062792074686520666f6c6c6f77696e6720706172746965733a0a2d204c6963656e736f723a20\""
													},
													"value": "\nThis Agreement applies to the video identified by the Video ID listed above, as hosted on YouTube or any other platform.\n\n2. License Grant\nThe Licensor hereby grants the Licensee a non-exclusive, worldwide, royalty-free license to:\n- Share (copy and redistribute the material in any medium or format)\n- Adapt (remix, transform, and build upon the material for any purpose, even commercially)\nUnder the terms of this Agreement, provided that:\n- The Licensee must give appropriate credit to the Licensor, provide a link to the license, and indicate if changes were made. The Licensee may do so in any reasonable manner, but not in any way that suggests the Licensor endorses the Licensee or the use of the material.\n\n3. License Duration\n- License Duration: Valid for a lifetime\nThis Agreement is effective for the duration specified above, starting from the Signing Date.\n\n4. Attribution Requirements\nThe Licensee must give appropriate credit to the Licensor, as follows:\n- Provide the wallet address of the Licensor.\n- Provide a link to the video.\n- Provide a link to this license.\n- Indicate if changes were made to the original material.\n\n5. No Additional Restrictions\nThe Licensee may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.\n\n6. Termination\nThis Agreement will automatically terminate if the Licensee fails to comply with the terms herein. However, the license will not terminate as a result of minor and reasonable deviations that do not fundamentally affect the terms of the Agreement.\n\n7. Signatures\nThis Agreement is executed by the following parties:\n- Licensor: "
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3888:2016:4"
											},
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "part_c",
														"nameLocation": "5931:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1539,
														"src": "5917:20:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1507,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "5917:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"hexValue": "0a2d204c6963656e7365653a20",
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5940:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_65a3ceba49ae75c0125805140e94b3d029fca148b8ccd3a4ec696ebe8632dfda",
														"typeString": "literal_string hex\"0a2d204c6963656e7365653a20\""
													},
													"value": "\n- Licensee: "
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5917:51:4"
											},
											{
												"assignments": [
													1512
												],
												"declarations": [
													{
														"constant": false,
														"id": 1512,
														"mutability": "mutable",
														"name": "part_d",
														"nameLocation": "5995:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1539,
														"src": "5981:20:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1511,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "5981:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1514,
												"initialValue": {
													"hexValue": "0a2d205369676e696e6720446174653a20",
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6004:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_db9744c933a527eb3e4802ada68b007cf54ecc5ef218ded259aec3f8a8eea557",
														"typeString": "literal_string hex\"0a2d205369676e696e6720446174653a20\""
													},
													"value": "\n- Signing Date: "
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5981:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1519,
																	"name": "part_a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "6080:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1520,
																	"name": "identifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "6088:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1521,
																	"name": "part_b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "6100:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1524,
																			"name": "licensor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "6128:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1522,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 254,
																			"src": "6108:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6116:11:4",
																		"memberName": "toHexString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 216,
																		"src": "6108:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (address) pure returns (string memory)"
																		}
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6108:29:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1526,
																	"name": "part_c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "6139:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1529,
																			"name": "licensee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "6167:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1527,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 254,
																			"src": "6147:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6155:11:4",
																		"memberName": "toHexString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 216,
																		"src": "6147:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (address) pure returns (string memory)"
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:29:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1531,
																	"name": "part_d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "6178:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1534,
																			"name": "signTimestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1494,
																			"src": "6203:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1532,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 254,
																			"src": "6186:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6194:8:4",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 67,
																		"src": "6186:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6186:31:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1517,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6063:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6067:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "6063:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6063:155:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6056:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1515,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6056:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6056:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1538,
												"nodeType": "Return",
												"src": "6049:170:4"
											}
										]
									},
									"functionSelector": "483ced98",
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compose",
									"nameLocation": "3201:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "3233:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3219:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1485,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3219:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "licensor",
												"nameLocation": "3262:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3254:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3254:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "licensee",
												"nameLocation": "3289:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3281:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3316:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3308:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "signTimestamp",
												"nameLocation": "3340:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3332:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:152:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "3384:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3384:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:15:4"
									},
									"scope": 1541,
									"src": "3192:3035:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1542,
							"src": "158:6072:4",
							"usedErrors": [
								19
							],
							"usedEvents": []
						}
					],
					"src": "33:6197:4"
				},
				"id": 4
			}
		}
	}
}